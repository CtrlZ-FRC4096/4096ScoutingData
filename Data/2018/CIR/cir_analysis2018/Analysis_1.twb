<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' upgrade-extracts='false' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='competitions+ (scouting2018)' inline='true' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1wke5i50jwl0qk104fpjo03svmqe'>
            <connection class='mysql' dbname='scouting2018' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='user' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[teammatches].[id]' />
              <expression op='[matchquestions].[teamMatchID]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[matchcycles].[unloadActionID]' />
                <expression op='[unloadActions].[id]' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[matchcycles].[loadActionID]' />
                  <expression op='[loadActions].[id]' />
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[matchcycles].[id]' />
                    <expression op='[allActions].[cycleID]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[teammatches].[id]' />
                      <expression op='[matchcycles].[teamMatchID]' />
                    </expression>
                  </clause>
                  <relation join='left' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[teammatches].[teamNumber]' />
                        <expression op='[teams].[teamNumber]' />
                      </expression>
                    </clause>
                    <relation join='left' type='join'>
                      <clause type='join'>
                        <expression op='='>
                          <expression op='[matches].[id]' />
                          <expression op='[teammatches].[matchID]' />
                        </expression>
                      </clause>
                      <relation join='inner' type='join'>
                        <clause type='join'>
                          <expression op='='>
                            <expression op='[competitions].[id]' />
                            <expression op='[matches].[compID]' />
                          </expression>
                        </clause>
                        <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='competitions' table='[competitions]' type='table' />
                        <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='matches' table='[matches]' type='table' />
                      </relation>
                      <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='teammatches' table='[teammatches]' type='table' />
                    </relation>
                    <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='teams' table='[teams]' type='table' />
                  </relation>
                  <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='matchcycles' table='[matchcycles]' type='table' />
                </relation>
                <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='allActions' table='[cycleactions]' type='table' />
              </relation>
              <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='loadActions' table='[cycleactions]' type='table' />
            </relation>
            <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='unloadActions' table='[cycleactions]' type='table' />
          </relation>
          <relation connection='mysql.1wke5i50jwl0qk104fpjo03svmqe' name='matchquestions' table='[matchquestions]' type='table' />
        </relation>
        <cols>
          <map key='[actionLocationName (cycleactions1)]' value='[loadActions].[actionLocationName]' />
          <map key='[actionLocationName (cycleactions2)]' value='[unloadActions].[actionLocationName]' />
          <map key='[actionLocationName]' value='[allActions].[actionLocationName]' />
          <map key='[actionLocationX (cycleactions1)]' value='[loadActions].[actionLocationX]' />
          <map key='[actionLocationX (cycleactions2)]' value='[unloadActions].[actionLocationX]' />
          <map key='[actionLocationX]' value='[allActions].[actionLocationX]' />
          <map key='[actionLocationY (cycleactions1)]' value='[loadActions].[actionLocationY]' />
          <map key='[actionLocationY (cycleactions2)]' value='[unloadActions].[actionLocationY]' />
          <map key='[actionLocationY]' value='[allActions].[actionLocationY]' />
          <map key='[actionTime (cycleactions1)]' value='[loadActions].[actionTime]' />
          <map key='[actionTime (cycleactions2)]' value='[unloadActions].[actionTime]' />
          <map key='[actionTime]' value='[allActions].[actionTime]' />
          <map key='[actionType (cycleactions1)]' value='[loadActions].[actionType]' />
          <map key='[actionType (cycleactions2)]' value='[unloadActions].[actionType]' />
          <map key='[actionType]' value='[allActions].[actionType]' />
          <map key='[autoLineCrossed]' value='[matchquestions].[autoLineCrossed]' />
          <map key='[climbAttempted]' value='[matchquestions].[climbAttempted]' />
          <map key='[climbSuccessful]' value='[matchquestions].[climbSuccessful]' />
          <map key='[climbTime]' value='[matchquestions].[climbTime]' />
          <map key='[collectionEnded]' value='[teammatches].[collectionEnded]' />
          <map key='[collectionStarted]' value='[teammatches].[collectionStarted]' />
          <map key='[compID]' value='[matches].[compID]' />
          <map key='[compName]' value='[competitions].[compName]' />
          <map key='[current]' value='[competitions].[current]' />
          <map key='[cycleID (cycleactions1)]' value='[loadActions].[cycleID]' />
          <map key='[cycleID (cycleactions2)]' value='[unloadActions].[cycleID]' />
          <map key='[cycleID]' value='[allActions].[cycleID]' />
          <map key='[cycleMode]' value='[matchcycles].[cycleMode]' />
          <map key='[deviceID]' value='[teammatches].[deviceID]' />
          <map key='[id (cycleactions)]' value='[allActions].[id]' />
          <map key='[id (cycleactions1)]' value='[loadActions].[id]' />
          <map key='[id (cycleactions2)]' value='[unloadActions].[id]' />
          <map key='[id (matchcycles)]' value='[matchcycles].[id]' />
          <map key='[id (matches)]' value='[matches].[id]' />
          <map key='[id (matchquestions)]' value='[matchquestions].[id]' />
          <map key='[id (teammatches)]' value='[teammatches].[id]' />
          <map key='[id]' value='[competitions].[id]' />
          <map key='[lastExported]' value='[matches].[lastExported]' />
          <map key='[lastUpdated]' value='[matches].[lastUpdated]' />
          <map key='[leftSideColor]' value='[competitions].[leftSideColor]' />
          <map key='[loadActionID]' value='[matchcycles].[loadActionID]' />
          <map key='[matchID]' value='[teammatches].[matchID]' />
          <map key='[matchNumber]' value='[matches].[matchNumber]' />
          <map key='[physicalClimb]' value='[matchquestions].[physicalClimb]' />
          <map key='[position]' value='[teammatches].[position]' />
          <map key='[robotsSupportAttempted]' value='[matchquestions].[robotsSupportAttempted]' />
          <map key='[robotsSupported]' value='[matchquestions].[robotsSupported]' />
          <map key='[scouterID]' value='[teammatches].[scouterID]' />
          <map key='[side]' value='[teammatches].[side]' />
          <map key='[teamMatchID (matchquestions)]' value='[matchquestions].[teamMatchID]' />
          <map key='[teamMatchID]' value='[matchcycles].[teamMatchID]' />
          <map key='[teamName]' value='[teams].[teamName]' />
          <map key='[teamNumber (teams)]' value='[teams].[teamNumber]' />
          <map key='[teamNumber]' value='[teammatches].[teamNumber]' />
          <map key='[unloadActionID]' value='[matchcycles].[unloadActionID]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[competitions]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>compName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[compName]</local-name>
            <parent-name>[competitions]</parent-name>
            <remote-alias>compName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>leftSideColor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[leftSideColor]</local-name>
            <parent-name>[competitions]</parent-name>
            <remote-alias>leftSideColor</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current</remote-name>
            <remote-type>3</remote-type>
            <local-name>[current]</local-name>
            <parent-name>[competitions]</parent-name>
            <remote-alias>current</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (matches)]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>matchNumber</remote-name>
            <remote-type>3</remote-type>
            <local-name>[matchNumber]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>matchNumber</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>compID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[compID]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>compID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lastUpdated</remote-name>
            <remote-type>3</remote-type>
            <local-name>[lastUpdated]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>lastUpdated</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lastExported</remote-name>
            <remote-type>3</remote-type>
            <local-name>[lastExported]</local-name>
            <parent-name>[matches]</parent-name>
            <remote-alias>lastExported</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (teammatches)]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>matchID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[matchID]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>matchID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>side</remote-name>
            <remote-type>129</remote-type>
            <local-name>[side]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>side</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>position</remote-name>
            <remote-type>3</remote-type>
            <local-name>[position]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>position</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teamNumber</remote-name>
            <remote-type>3</remote-type>
            <local-name>[teamNumber]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>teamNumber</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>7</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>collectionStarted</remote-name>
            <remote-type>16</remote-type>
            <local-name>[collectionStarted]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>collectionStarted</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>collectionEnded</remote-name>
            <remote-type>16</remote-type>
            <local-name>[collectionEnded]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>collectionEnded</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scouterID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[scouterID]</local-name>
            <parent-name>[teammatches]</parent-name>
            <remote-alias>scouterID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teamNumber</remote-name>
            <remote-type>3</remote-type>
            <local-name>[teamNumber (teams)]</local-name>
            <parent-name>[teams]</parent-name>
            <remote-alias>teamNumber</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teamName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[teamName]</local-name>
            <parent-name>[teams]</parent-name>
            <remote-alias>teamName</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (matchcycles)]</local-name>
            <parent-name>[matchcycles]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teamMatchID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[teamMatchID]</local-name>
            <parent-name>[matchcycles]</parent-name>
            <remote-alias>teamMatchID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cycleMode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cycleMode]</local-name>
            <parent-name>[matchcycles]</parent-name>
            <remote-alias>cycleMode</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>loadActionID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[loadActionID]</local-name>
            <parent-name>[matchcycles]</parent-name>
            <remote-alias>loadActionID</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unloadActionID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unloadActionID]</local-name>
            <parent-name>[matchcycles]</parent-name>
            <remote-alias>unloadActionID</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (cycleactions)]</local-name>
            <parent-name>[allActions]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cycleID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[cycleID]</local-name>
            <parent-name>[allActions]</parent-name>
            <remote-alias>cycleID</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[actionType]</local-name>
            <parent-name>[allActions]</parent-name>
            <remote-alias>actionType</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>7</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionTime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[actionTime]</local-name>
            <parent-name>[allActions]</parent-name>
            <remote-alias>actionTime</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationX</remote-name>
            <remote-type>131</remote-type>
            <local-name>[actionLocationX]</local-name>
            <parent-name>[allActions]</parent-name>
            <remote-alias>actionLocationX</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[actionLocationY]</local-name>
            <parent-name>[allActions]</parent-name>
            <remote-alias>actionLocationY</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[actionLocationName]</local-name>
            <parent-name>[allActions]</parent-name>
            <remote-alias>actionLocationName</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>55</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (cycleactions1)]</local-name>
            <parent-name>[loadActions]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cycleID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[cycleID (cycleactions1)]</local-name>
            <parent-name>[loadActions]</parent-name>
            <remote-alias>cycleID</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[actionType (cycleactions1)]</local-name>
            <parent-name>[loadActions]</parent-name>
            <remote-alias>actionType</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>7</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionTime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[actionTime (cycleactions1)]</local-name>
            <parent-name>[loadActions]</parent-name>
            <remote-alias>actionTime</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationX</remote-name>
            <remote-type>131</remote-type>
            <local-name>[actionLocationX (cycleactions1)]</local-name>
            <parent-name>[loadActions]</parent-name>
            <remote-alias>actionLocationX</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[actionLocationY (cycleactions1)]</local-name>
            <parent-name>[loadActions]</parent-name>
            <remote-alias>actionLocationY</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[actionLocationName (cycleactions1)]</local-name>
            <parent-name>[loadActions]</parent-name>
            <remote-alias>actionLocationName</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>55</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (cycleactions2)]</local-name>
            <parent-name>[unloadActions]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cycleID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[cycleID (cycleactions2)]</local-name>
            <parent-name>[unloadActions]</parent-name>
            <remote-alias>cycleID</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[actionType (cycleactions2)]</local-name>
            <parent-name>[unloadActions]</parent-name>
            <remote-alias>actionType</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>7</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_CHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionTime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[actionTime (cycleactions2)]</local-name>
            <parent-name>[unloadActions]</parent-name>
            <remote-alias>actionTime</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationX</remote-name>
            <remote-type>131</remote-type>
            <local-name>[actionLocationX (cycleactions2)]</local-name>
            <parent-name>[unloadActions]</parent-name>
            <remote-alias>actionLocationX</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[actionLocationY (cycleactions2)]</local-name>
            <parent-name>[unloadActions]</parent-name>
            <remote-alias>actionLocationY</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>5</precision>
            <scale>2</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actionLocationName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[actionLocationName (cycleactions2)]</local-name>
            <parent-name>[unloadActions]</parent-name>
            <remote-alias>actionLocationName</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>55</width>
            <contains-null>true</contains-null>
            <collation charset='280' flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (matchquestions)]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>teamMatchID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[teamMatchID (matchquestions)]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>teamMatchID</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>autoLineCrossed</remote-name>
            <remote-type>16</remote-type>
            <local-name>[autoLineCrossed]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>autoLineCrossed</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>climbAttempted</remote-name>
            <remote-type>16</remote-type>
            <local-name>[climbAttempted]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>climbAttempted</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>physicalClimb</remote-name>
            <remote-type>16</remote-type>
            <local-name>[physicalClimb]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>physicalClimb</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>climbSuccessful</remote-name>
            <remote-type>16</remote-type>
            <local-name>[climbSuccessful]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>climbSuccessful</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>robotsSupportAttempted</remote-name>
            <remote-type>3</remote-type>
            <local-name>[robotsSupportAttempted]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>robotsSupportAttempted</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>robotsSupported</remote-name>
            <remote-type>3</remote-type>
            <local-name>[robotsSupported]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>robotsSupported</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>climbTime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[climbTime]</local-name>
            <parent-name>[matchquestions]</parent-name>
            <remote-alias>climbTime</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ScaleOrSwitch-Only CycleID' datatype='integer' name='[Calculation_12103470403129344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [actionLocationName (cycleactions2)] = &quot;3&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;4&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;5&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;6&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;7&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;8&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
      </column>
      <column caption='Path Identifier' datatype='string' name='[Calculation_1241023217762705408]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([actionLocationName (cycleactions1)]) OR ISNULL([actionLocationName (cycleactions2)]) OR [actionLocationName (cycleactions1)] = &quot;custom&quot;&#13;&#10;THEN &quot;_Custom&quot; + STR([cycleID])&#13;&#10;ELSE [actionLocationName (cycleactions1)] + &quot; - &quot; + [actionLocationName (cycleactions2)]&#13;&#10;END' />
      </column>
      <column caption='cycleTime' datatype='integer' name='[Calculation_1241023217766604801]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[actionTime (cycleactions2)] - [actionTime (cycleactions1)]' />
      </column>
      <column caption='Cycle Successful' datatype='boolean' name='[Calculation_1241023217767886854]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[actionType (cycleactions2)] = &quot;place&quot;' />
      </column>
      <column caption='Scale or Switch Match Cycles in Auto' datatype='integer' name='[Calculation_267964224067551232]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Calculation_267964224090181649]&#13;&#10;&#13;&#10;)}' />
      </column>
      <column caption='Scale or Switch CycleID in Auto' datatype='integer' name='[Calculation_267964224090181649]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([actionLocationName (cycleactions2)] = &quot;5&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;6&quot;  OR&#13;&#10;[actionLocationName (cycleactions2)] = &quot;3&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;4&quot;  OR&#13;&#10;[actionLocationName (cycleactions2)] = &quot;7&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;8&quot;)&#13;&#10;AND&#13;&#10;    [cycleMode] = &quot;auto&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
      </column>
      <column caption='Matches Climbed' datatype='integer' name='[Calculation_267964224228417563]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [matchNumber]: MAX([climbSuccessful])}' />
      </column>
      <column caption='Alliance Selection Sort' datatype='real' name='[Calculation_267964224228823068]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100000*(PERCENTILE([Exchange Match Cycles (copy)],0.90)) +100*(COUNTD([cycleID])) + 10*(PERCENTILE([Switch Match Cycles (copy)],0.90)) + SUM([Calculation_267964224228417563])' />
      </column>
      <column caption='Conventional Cycle' datatype='boolean' name='[Calculation_959829716285001728]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='NOT(CONTAINS([Calculation_1241023217762705408],&quot;Custom&quot;))' />
      </column>
      <column caption='Cycle Identifier' datatype='string' name='[Calculation_959829716299034625]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF     (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Portal to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 7&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Portal to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp  Side Portal to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;        [Calculation_1241023217762705408] = &quot;1 - 8&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;2 - 7&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;9 - 4&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;0 - 3&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp  Side Portal to Swtich Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 5&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Portal to Scale Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Portal to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 7&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;W - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;Q - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Scale Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Stack to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Stack to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Stack to Scale&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;S - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Line to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Line to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 5&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Line to Scale Long&quot;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - W&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Stack to Portal&quot;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - Q&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Stack to Portal&quot;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - W&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Portal&quot;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - Q&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Line to Portal&quot;&#13;&#10;&#13;&#10;ELSEIF (CONTAINS([Calculation_1241023217762705408], &quot;Custom&quot;))&#13;&#10;    THEN &quot;custom&quot;&#13;&#10;END' />
      </column>
      <column caption='Switch or Scale Match Cycles' datatype='integer' name='[Exchange Match Cycles (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Calculation_12103470403129344]&#13;&#10;&#13;&#10;)}' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Scale CycleID in Auto ' datatype='integer' name='[Scale or Switch CycleID in Auto (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([actionLocationName (cycleactions2)] = &quot;5&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;6&quot; )&#13;&#10;AND&#13;&#10;    [cycleMode] = &quot;auto&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
      </column>
      <column caption='Scale Match Cycles in Auto' datatype='integer' name='[Scale or Switch Match Cycles in Auto (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Scale or Switch CycleID in Auto (copy)]&#13;&#10;&#13;&#10;)}' />
      </column>
      <column caption='Exchange Match Cycles' datatype='integer' name='[Switch Match Cycles (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Switch-Only CycleID (copy)]&#13;&#10;&#13;&#10;)}' />
      </column>
      <column caption='Exchange-Only CycleID' datatype='integer' name='[Switch-Only CycleID (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [actionLocationName (cycleactions2)] = &quot;Q&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;W&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
      </column>
      <column caption='Action Location Name' datatype='string' name='[actionLocationName]' role='dimension' type='nominal' />
      <column caption='Action Location X' datatype='real' name='[actionLocationX]' role='measure' type='quantitative' />
      <column caption='Action Location Y' datatype='real' name='[actionLocationY]' role='measure' type='quantitative' />
      <column caption='Action Time' datatype='integer' name='[actionTime]' role='measure' type='quantitative' />
      <column caption='Action Type' datatype='string' name='[actionType]' role='dimension' type='nominal' />
      <column caption='Auto Line Crossed' datatype='integer' name='[autoLineCrossed]' role='measure' type='quantitative' />
      <column caption='Climb Attempted' datatype='integer' name='[climbAttempted]' role='measure' type='quantitative' />
      <column caption='Climb Successful' datatype='integer' name='[climbSuccessful]' role='measure' type='quantitative' />
      <column caption='Climb Time' datatype='integer' name='[climbTime]' role='measure' type='quantitative' />
      <column caption='Collection Ended' datatype='integer' name='[collectionEnded]' role='measure' type='quantitative' />
      <column caption='Collection Started' datatype='integer' name='[collectionStarted]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Comp ID' datatype='integer' name='[compID]' role='dimension' type='ordinal' />
      <column caption='Comp Name' datatype='string' name='[compName]' role='dimension' type='nominal' />
      <column caption='Current' datatype='integer' name='[current]' role='measure' type='quantitative' />
      <column datatype='integer' name='[cycleID (cycleactions1)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[cycleID (cycleactions2)]' role='dimension' type='ordinal' />
      <column caption='Cycle ID' datatype='integer' name='[cycleID]' role='dimension' type='ordinal' />
      <column caption='Cycle Mode' datatype='string' name='[cycleMode]' role='dimension' type='nominal' />
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal' />
      <column caption='Id (Cycleactions)' datatype='integer' name='[id (cycleactions)]' role='dimension' type='ordinal' />
      <column caption='Id (Cycleactions1)' datatype='integer' name='[id (cycleactions1)]' role='dimension' type='ordinal' />
      <column caption='Id (Cycleactions2)' datatype='integer' name='[id (cycleactions2)]' role='dimension' type='ordinal' />
      <column caption='Id (Matchcycles)' datatype='integer' name='[id (matchcycles)]' role='dimension' type='ordinal' />
      <column caption='Id (Matches)' datatype='integer' name='[id (matches)]' role='dimension' type='ordinal' />
      <column caption='Id (Matchquestions)' datatype='integer' name='[id (matchquestions)]' role='dimension' type='ordinal' />
      <column caption='Id (Teammatches)' datatype='integer' name='[id (teammatches)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Last Exported' datatype='integer' name='[lastExported]' role='measure' type='quantitative' />
      <column caption='Last Updated' datatype='integer' name='[lastUpdated]' role='measure' type='quantitative' />
      <column caption='Left Side Color' datatype='string' name='[leftSideColor]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Match ID' datatype='integer' name='[matchID]' role='dimension' type='ordinal' />
      <column caption='Match Number' datatype='integer' name='[matchNumber]' role='dimension' type='ordinal' />
      <column caption='Physical Climb' datatype='integer' name='[physicalClimb]' role='measure' type='quantitative' />
      <column caption='Position' datatype='integer' name='[position]' role='measure' type='quantitative' />
      <column caption='Robots Support Attempted' datatype='integer' name='[robotsSupportAttempted]' role='measure' type='quantitative' />
      <column caption='Robots Supported' datatype='integer' name='[robotsSupported]' role='measure' type='quantitative' />
      <column caption='Scouter ID' datatype='integer' name='[scouterID]' role='dimension' type='ordinal' />
      <column caption='Side' datatype='string' name='[side]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[teamMatchID (matchquestions)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Team Match ID' datatype='integer' name='[teamMatchID]' role='dimension' type='ordinal' />
      <column caption='Team Name' datatype='string' name='[teamName]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Team Number' datatype='integer' name='[teamNumber]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_1241023217762705408]' derivation='None' name='[none:Calculation_1241023217762705408:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1241023217766604801]' derivation='None' name='[none:Calculation_1241023217766604801:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1241023217767886854]' derivation='None' name='[none:Calculation_1241023217767886854:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_959829716299034625]' derivation='None' name='[none:Calculation_959829716299034625:nk]' pivot='key' type='nominal' />
      <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Cycle Identifier,Cycle Successful,cycleTime,teamNumber (teams))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_959829716299034625:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_1241023217767886854:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_1241023217766604801:qk]' />
          <groupfilter function='level-members' level='[none:teamNumber (teams):ok]' />
        </groupfilter>
      </group>
      <mapped-images>
        <mapped-image caption='fieldmap_left_blue' expression='file:///C:/wamp/www/analysis2018/fieldmap_left_blue.png' name='[MappedImage1]'>
          <mapping bottom='0.0' left='0.0' right='689.0' top='324.0' x='[actionLocationX]' y='[actionLocationY]' />
        </mapped-image>
      </mapped-images>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/wamp/www/analysis2018/extract.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='03/17/2018 08:07:26 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[actionLocationName (cycleactions1)]' value='[Extract].[actionLocationName]' />
            <map key='[actionLocationName (cycleactions2)]' value='[Extract].[actionLocationName1]' />
            <map key='[actionLocationName]' value='[Extract].[actionLocationName2]' />
            <map key='[actionLocationX (cycleactions1)]' value='[Extract].[actionLocationX]' />
            <map key='[actionLocationX (cycleactions2)]' value='[Extract].[actionLocationX1]' />
            <map key='[actionLocationX]' value='[Extract].[actionLocationX2]' />
            <map key='[actionLocationY (cycleactions1)]' value='[Extract].[actionLocationY]' />
            <map key='[actionLocationY (cycleactions2)]' value='[Extract].[actionLocationY1]' />
            <map key='[actionLocationY]' value='[Extract].[actionLocationY2]' />
            <map key='[actionTime (cycleactions1)]' value='[Extract].[actionTime]' />
            <map key='[actionTime (cycleactions2)]' value='[Extract].[actionTime1]' />
            <map key='[actionTime]' value='[Extract].[actionTime2]' />
            <map key='[actionType (cycleactions1)]' value='[Extract].[actionType]' />
            <map key='[actionType (cycleactions2)]' value='[Extract].[actionType1]' />
            <map key='[actionType]' value='[Extract].[actionType2]' />
            <map key='[autoLineCrossed]' value='[Extract].[autoLineCrossed]' />
            <map key='[climbAttempted]' value='[Extract].[climbAttempted]' />
            <map key='[climbSuccessful]' value='[Extract].[climbSuccessful]' />
            <map key='[climbTime]' value='[Extract].[climbTime]' />
            <map key='[collectionEnded]' value='[Extract].[collectionEnded]' />
            <map key='[collectionStarted]' value='[Extract].[collectionStarted]' />
            <map key='[compID]' value='[Extract].[compID]' />
            <map key='[compName]' value='[Extract].[compName]' />
            <map key='[current]' value='[Extract].[current]' />
            <map key='[cycleID (cycleactions1)]' value='[Extract].[cycleID]' />
            <map key='[cycleID (cycleactions2)]' value='[Extract].[cycleID1]' />
            <map key='[cycleID]' value='[Extract].[cycleID2]' />
            <map key='[cycleMode]' value='[Extract].[cycleMode]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[id (cycleactions)]' value='[Extract].[id]' />
            <map key='[id (cycleactions1)]' value='[Extract].[id1]' />
            <map key='[id (cycleactions2)]' value='[Extract].[id2]' />
            <map key='[id (matchcycles)]' value='[Extract].[id3]' />
            <map key='[id (matches)]' value='[Extract].[id4]' />
            <map key='[id (matchquestions)]' value='[Extract].[id5]' />
            <map key='[id (teammatches)]' value='[Extract].[id6]' />
            <map key='[id]' value='[Extract].[id7]' />
            <map key='[lastExported]' value='[Extract].[lastExported]' />
            <map key='[lastUpdated]' value='[Extract].[lastUpdated]' />
            <map key='[leftSideColor]' value='[Extract].[leftSideColor]' />
            <map key='[loadActionID]' value='[Extract].[loadActionID]' />
            <map key='[matchID]' value='[Extract].[matchID]' />
            <map key='[matchNumber]' value='[Extract].[matchNumber]' />
            <map key='[physicalClimb]' value='[Extract].[physicalClimb]' />
            <map key='[position]' value='[Extract].[position]' />
            <map key='[robotsSupportAttempted]' value='[Extract].[robotsSupportAttempted]' />
            <map key='[robotsSupported]' value='[Extract].[robotsSupported]' />
            <map key='[scouterID]' value='[Extract].[scouterID]' />
            <map key='[side]' value='[Extract].[side]' />
            <map key='[teamMatchID (matchquestions)]' value='[Extract].[teamMatchID]' />
            <map key='[teamMatchID]' value='[Extract].[teamMatchID1]' />
            <map key='[teamName]' value='[Extract].[teamName]' />
            <map key='[teamNumber (teams)]' value='[Extract].[teamNumber]' />
            <map key='[teamNumber]' value='[Extract].[teamNumber1]' />
            <map key='[unloadActionID]' value='[Extract].[unloadActionID]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4678' timestamp-start='2018-03-17 20:07:26.756' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id7</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id7</remote-alias>
              <ordinal>0</ordinal>
              <family>competitions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>compName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[compName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>compName</remote-alias>
              <ordinal>1</ordinal>
              <family>competitions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>leftSideColor</remote-name>
              <remote-type>129</remote-type>
              <local-name>[leftSideColor]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>leftSideColor</remote-alias>
              <ordinal>2</ordinal>
              <family>competitions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>current</remote-name>
              <remote-type>20</remote-type>
              <local-name>[current]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>current</remote-alias>
              <ordinal>3</ordinal>
              <family>competitions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id4</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (matches)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id4</remote-alias>
              <ordinal>4</ordinal>
              <family>matches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>matchNumber</remote-name>
              <remote-type>20</remote-type>
              <local-name>[matchNumber]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>matchNumber</remote-alias>
              <ordinal>5</ordinal>
              <family>matches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>compID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[compID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>compID</remote-alias>
              <ordinal>6</ordinal>
              <family>matches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lastUpdated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[lastUpdated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lastUpdated</remote-alias>
              <ordinal>7</ordinal>
              <family>matches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lastExported</remote-name>
              <remote-type>20</remote-type>
              <local-name>[lastExported]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lastExported</remote-alias>
              <ordinal>8</ordinal>
              <family>matches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id6</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (teammatches)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id6</remote-alias>
              <ordinal>9</ordinal>
              <family>teammatches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>matchID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[matchID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>matchID</remote-alias>
              <ordinal>10</ordinal>
              <family>teammatches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>side</remote-name>
              <remote-type>129</remote-type>
              <local-name>[side]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>side</remote-alias>
              <ordinal>11</ordinal>
              <family>teammatches</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>position</remote-name>
              <remote-type>20</remote-type>
              <local-name>[position]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>position</remote-alias>
              <ordinal>12</ordinal>
              <family>teammatches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>teamNumber1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[teamNumber]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>teamNumber1</remote-alias>
              <ordinal>13</ordinal>
              <family>teammatches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>14</ordinal>
              <family>teammatches</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>collectionStarted</remote-name>
              <remote-type>20</remote-type>
              <local-name>[collectionStarted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>collectionStarted</remote-alias>
              <ordinal>15</ordinal>
              <family>teammatches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>collectionEnded</remote-name>
              <remote-type>20</remote-type>
              <local-name>[collectionEnded]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>collectionEnded</remote-alias>
              <ordinal>16</ordinal>
              <family>teammatches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>scouterID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[scouterID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>scouterID</remote-alias>
              <ordinal>17</ordinal>
              <family>teammatches</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>teamNumber</remote-name>
              <remote-type>20</remote-type>
              <local-name>[teamNumber (teams)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>teamNumber</remote-alias>
              <ordinal>18</ordinal>
              <family>teams</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>teamName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[teamName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>teamName</remote-alias>
              <ordinal>19</ordinal>
              <family>teams</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id3</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (matchcycles)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id3</remote-alias>
              <ordinal>20</ordinal>
              <family>matchcycles</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>teamMatchID1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[teamMatchID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>teamMatchID1</remote-alias>
              <ordinal>21</ordinal>
              <family>matchcycles</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cycleMode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cycleMode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cycleMode</remote-alias>
              <ordinal>22</ordinal>
              <family>matchcycles</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>loadActionID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[loadActionID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>loadActionID</remote-alias>
              <ordinal>23</ordinal>
              <family>matchcycles</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unloadActionID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[unloadActionID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>unloadActionID</remote-alias>
              <ordinal>24</ordinal>
              <family>matchcycles</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (cycleactions)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>25</ordinal>
              <family>allActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4678</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cycleID2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cycleID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cycleID2</remote-alias>
              <ordinal>26</ordinal>
              <family>allActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionType2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[actionType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionType2</remote-alias>
              <ordinal>27</ordinal>
              <family>allActions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionTime2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[actionTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionTime2</remote-alias>
              <ordinal>28</ordinal>
              <family>allActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3257</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationX2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[actionLocationX]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationX2</remote-alias>
              <ordinal>29</ordinal>
              <family>allActions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationY2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[actionLocationY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationY2</remote-alias>
              <ordinal>30</ordinal>
              <family>allActions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationName2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[actionLocationName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationName2</remote-alias>
              <ordinal>31</ordinal>
              <family>allActions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (cycleactions1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id1</remote-alias>
              <ordinal>32</ordinal>
              <family>loadActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cycleID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cycleID (cycleactions1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cycleID</remote-alias>
              <ordinal>33</ordinal>
              <family>loadActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[actionType (cycleactions1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionType</remote-alias>
              <ordinal>34</ordinal>
              <family>loadActions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[actionTime (cycleactions1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionTime</remote-alias>
              <ordinal>35</ordinal>
              <family>loadActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>947</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationX</remote-name>
              <remote-type>5</remote-type>
              <local-name>[actionLocationX (cycleactions1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationX</remote-alias>
              <ordinal>36</ordinal>
              <family>loadActions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>59</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationY</remote-name>
              <remote-type>5</remote-type>
              <local-name>[actionLocationY (cycleactions1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationY</remote-alias>
              <ordinal>37</ordinal>
              <family>loadActions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>59</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[actionLocationName (cycleactions1)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationName</remote-alias>
              <ordinal>38</ordinal>
              <family>loadActions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (cycleactions2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id2</remote-alias>
              <ordinal>39</ordinal>
              <family>unloadActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cycleID1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cycleID (cycleactions2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cycleID1</remote-alias>
              <ordinal>40</ordinal>
              <family>unloadActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3643</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionType1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[actionType (cycleactions2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionType1</remote-alias>
              <ordinal>41</ordinal>
              <family>unloadActions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionTime1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[actionTime (cycleactions2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionTime1</remote-alias>
              <ordinal>42</ordinal>
              <family>unloadActions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3092</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationX1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[actionLocationX (cycleactions2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationX1</remote-alias>
              <ordinal>43</ordinal>
              <family>unloadActions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationY1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[actionLocationY (cycleactions2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationY1</remote-alias>
              <ordinal>44</ordinal>
              <family>unloadActions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actionLocationName1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[actionLocationName (cycleactions2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actionLocationName1</remote-alias>
              <ordinal>45</ordinal>
              <family>unloadActions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id5</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (matchquestions)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id5</remote-alias>
              <ordinal>46</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>teamMatchID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[teamMatchID (matchquestions)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>teamMatchID</remote-alias>
              <ordinal>47</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>autoLineCrossed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[autoLineCrossed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>autoLineCrossed</remote-alias>
              <ordinal>48</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>climbAttempted</remote-name>
              <remote-type>20</remote-type>
              <local-name>[climbAttempted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>climbAttempted</remote-alias>
              <ordinal>49</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>physicalClimb</remote-name>
              <remote-type>20</remote-type>
              <local-name>[physicalClimb]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>physicalClimb</remote-alias>
              <ordinal>50</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>climbSuccessful</remote-name>
              <remote-type>20</remote-type>
              <local-name>[climbSuccessful]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>climbSuccessful</remote-alias>
              <ordinal>51</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>robotsSupportAttempted</remote-name>
              <remote-type>20</remote-type>
              <local-name>[robotsSupportAttempted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>robotsSupportAttempted</remote-alias>
              <ordinal>52</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>robotsSupported</remote-name>
              <remote-type>20</remote-type>
              <local-name>[robotsSupported]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>robotsSupported</remote-alias>
              <ordinal>53</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>climbTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[climbTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>climbTime</remote-alias>
              <ordinal>54</ordinal>
              <family>matchquestions</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.502101' measure-ordering='alphabetic' measure-percentage='0.497899' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1241023217762705408:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;9 - 7&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;F - 8&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;D - 7&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Custom14&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S - 3&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;X - 3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A - 3&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1241023217767886854:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Alliance Selections'>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='ScaleOrSwitch-Only CycleID' datatype='integer' name='[Calculation_12103470403129344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [actionLocationName (cycleactions2)] = &quot;3&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;4&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;5&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;6&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;7&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;8&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
            </column>
            <column caption='Cycle Successful' datatype='boolean' name='[Calculation_1241023217767886854]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[actionType (cycleactions2)] = &quot;place&quot;' />
            </column>
            <column caption='Scale or Switch Match Cycles in Auto' datatype='integer' name='[Calculation_267964224067551232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Calculation_267964224090181649]&#13;&#10;&#13;&#10;)}' />
            </column>
            <column caption='Scale or Switch CycleID in Auto' datatype='integer' name='[Calculation_267964224090181649]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([actionLocationName (cycleactions2)] = &quot;5&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;6&quot;  OR&#13;&#10;[actionLocationName (cycleactions2)] = &quot;3&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;4&quot;  OR&#13;&#10;[actionLocationName (cycleactions2)] = &quot;7&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;8&quot;)&#13;&#10;AND&#13;&#10;    [cycleMode] = &quot;auto&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
            </column>
            <column caption='Matches Climbed' datatype='integer' name='[Calculation_267964224228417563]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [matchNumber]: MAX([climbSuccessful])}' />
            </column>
            <column caption='PERCENTILE([Switch or Scale Match Cycles],0.90)' datatype='real' name='[Calculation_807551754675032065]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='PERCENTILE([Exchange Match Cycles (copy)],0.90)' />
            </column>
            <column caption='PERCENTILE([Exchange Match Cycles],0.90)' datatype='real' name='[Calculation_807551754675138564]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='PERCENTILE([Switch Match Cycles (copy)],0.90)' />
            </column>
            <column caption='PERCENTILE([Scale or Switch Match Cycles in Auto],0.90)' datatype='real' name='[Calculation_807551754675277832]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='PERCENTILE([Calculation_267964224067551232],0.90)' />
            </column>
            <column caption='PERCENTILE([Scale Match Cycles in Auto],0.90)' datatype='real' name='[Calculation_807551754675376139]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='PERCENTILE([Scale or Switch Match Cycles in Auto (copy)],0.90)' />
            </column>
            <column caption='Switch or Scale Match Cycles' datatype='integer' name='[Exchange Match Cycles (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Calculation_12103470403129344]&#13;&#10;&#13;&#10;)}' />
            </column>
            <column caption='Scale CycleID in Auto ' datatype='integer' name='[Scale or Switch CycleID in Auto (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([actionLocationName (cycleactions2)] = &quot;5&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;6&quot; )&#13;&#10;AND&#13;&#10;    [cycleMode] = &quot;auto&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
            </column>
            <column caption='Scale Match Cycles in Auto' datatype='integer' name='[Scale or Switch Match Cycles in Auto (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Scale or Switch CycleID in Auto (copy)]&#13;&#10;&#13;&#10;)}' />
            </column>
            <column caption='Exchange Match Cycles' datatype='integer' name='[Switch Match Cycles (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Switch-Only CycleID (copy)]&#13;&#10;&#13;&#10;)}' />
            </column>
            <column caption='Exchange-Only CycleID' datatype='integer' name='[Switch-Only CycleID (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [actionLocationName (cycleactions2)] = &quot;Q&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;W&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
            </column>
            <column datatype='string' name='[actionLocationName (cycleactions2)]' role='dimension' type='nominal' />
            <column datatype='string' name='[actionType (cycleactions2)]' role='dimension' type='nominal' />
            <column caption='Climb Successful' datatype='integer' name='[climbSuccessful]' role='measure' type='quantitative' />
            <column-instance column='[cycleID]' derivation='CountD' name='[ctd:cycleID:ok]' pivot='key' type='ordinal' />
            <column caption='Cycle ID' datatype='integer' name='[cycleID]' role='dimension' type='ordinal' />
            <column caption='Cycle Mode' datatype='string' name='[cycleMode]' role='dimension' type='nominal' />
            <column caption='Id (Matches)' datatype='integer' name='[id (matches)]' role='dimension' type='ordinal' />
            <column caption='Match Number' datatype='integer' name='[matchNumber]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1241023217767886854]' derivation='None' name='[none:Calculation_1241023217767886854:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamName]' derivation='None' name='[none:teamName:nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_267964224228417563]' derivation='Sum' name='[sum:Calculation_267964224228417563:ok]' pivot='key' type='ordinal' />
            <column caption='Team Name' datatype='string' name='[teamName]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_807551754675032065]' derivation='User' name='[usr:Calculation_807551754675032065:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_807551754675138564]' derivation='User' name='[usr:Calculation_807551754675138564:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_807551754675277832]' derivation='User' name='[usr:Calculation_807551754675277832:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_807551754675376139]' derivation='User' name='[usr:Calculation_807551754675376139:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217767886854:nk]'>
            <groupfilter function='member' level='[none:Calculation_1241023217767886854:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]'>
            <groupfilter function='level-members' level='[none:teamNumber (teams):ok]' />
          </filter>
          <slices>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217767886854:nk]</column>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[usr:Calculation_807551754675032065:ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[ctd:cycleID:ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[usr:Calculation_807551754675138564:ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[sum:Calculation_267964224228417563:ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[usr:Calculation_807551754675277832:ok] / [federated.1vfd8zs1ojqk7g1adk2u2142d753].[usr:Calculation_807551754675376139:ok]))))))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Auto Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='Auto Line Crossed' datatype='integer' name='[autoLineCrossed]' role='measure' type='quantitative' />
            <column caption='Climb Successful' datatype='integer' name='[climbSuccessful]' role='measure' type='quantitative' />
            <column caption='Id (Matches)' datatype='integer' name='[id (matches)]' role='dimension' type='ordinal' />
            <column-instance column='[autoLineCrossed]' derivation='None' name='[none:autoLineCrossed:ok]' pivot='key' type='ordinal' />
            <column-instance column='[climbSuccessful]' derivation='None' name='[none:climbSuccessful:ok]' pivot='key' type='ordinal' />
            <column-instance column='[id (matches)]' derivation='None' name='[none:id (matches):ok]' pivot='key' type='ordinal' />
            <column-instance column='[physicalClimb]' derivation='None' name='[none:physicalClimb:ok]' pivot='key' type='ordinal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column caption='Physical Climb' datatype='integer' name='[physicalClimb]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' filter-group='4'>
            <groupfilter function='member' level='[none:teamNumber (teams):ok]' member='1736' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (matches):ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:autoLineCrossed:ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:physicalClimb:ok] / [federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:climbSuccessful:ok]))))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='CTD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cycle Time Distribution&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='Path Identifier' datatype='string' name='[Calculation_1241023217762705408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([actionLocationName (cycleactions1)]) OR ISNULL([actionLocationName (cycleactions2)]) OR [actionLocationName (cycleactions1)] = &quot;custom&quot;&#13;&#10;THEN &quot;_Custom&quot; + STR([cycleID])&#13;&#10;ELSE [actionLocationName (cycleactions1)] + &quot; - &quot; + [actionLocationName (cycleactions2)]&#13;&#10;END' />
            </column>
            <column caption='cycleTime' datatype='integer' name='[Calculation_1241023217766604801]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[actionTime (cycleactions2)] - [actionTime (cycleactions1)]' />
            </column>
            <column caption='INDEX()' datatype='integer' name='[Calculation_1241023217767792645]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cycle Successful' datatype='boolean' name='[Calculation_1241023217767886854]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[actionType (cycleactions2)] = &quot;place&quot;' />
            </column>
            <column caption='Cycle Identifier' datatype='string' name='[Calculation_959829716299034625]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Portal to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 7&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Portal to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp  Side Portal to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;        [Calculation_1241023217762705408] = &quot;1 - 8&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;2 - 7&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;9 - 4&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;0 - 3&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp  Side Portal to Swtich Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 5&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Portal to Scale Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Portal to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 7&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;W - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;Q - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Scale Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Stack to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Stack to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Stack to Scale&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;S - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Line to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Line to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 5&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Line to Scale Long&quot;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - W&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Stack to Portal&quot;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - Q&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Stack to Portal&quot;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - W&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Portal&quot;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - Q&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Line to Portal&quot;&#13;&#10;&#13;&#10;ELSEIF (CONTAINS([Calculation_1241023217762705408], &quot;Custom&quot;))&#13;&#10;    THEN &quot;custom&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[actionLocationName (cycleactions1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[actionLocationName (cycleactions2)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[actionTime (cycleactions1)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[actionTime (cycleactions2)]' role='measure' type='quantitative' />
            <column datatype='string' name='[actionType (cycleactions2)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1241023217762705408]' derivation='Attribute' name='[attr:Calculation_1241023217762705408:nk]' pivot='key' type='nominal' />
            <column-instance column='[cycleID]' derivation='Attribute' name='[attr:cycleID:qk]' pivot='key' type='quantitative' />
            <column caption='Cycle ID' datatype='integer' name='[cycleID]' role='dimension' type='ordinal' />
            <column caption='Match Number' datatype='integer' name='[matchNumber]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1241023217762705408]' derivation='None' name='[none:Calculation_1241023217762705408:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1241023217766604801]' derivation='None' name='[none:Calculation_1241023217766604801:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1241023217767886854]' derivation='None' name='[none:Calculation_1241023217767886854:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_959829716299034625]' derivation='None' name='[none:Calculation_959829716299034625:nk]' pivot='key' type='nominal' />
            <column-instance column='[matchNumber]' derivation='None' name='[none:matchNumber:ok]' pivot='key' type='ordinal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1241023217767792645]' derivation='User' name='[usr:Calculation_1241023217767792645:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[Exclusions (Cycle Identifier,Cycle Successful,cycleTime,teamNumber (teams))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Calculation_959829716299034625:nk]' />
                <groupfilter function='level-members' level='[none:Calculation_1241023217767886854:nk]' />
                <groupfilter function='level-members' level='[none:Calculation_1241023217766604801:qk]' />
                <groupfilter function='level-members' level='[none:teamNumber (teams):ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_1241023217766604801:qk]' member='75' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Calculation_1241023217767886854:nk]' member='true' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_959829716299034625:nk]' member='&quot;Same Side Stack to Switch&quot;' />
                      <groupfilter function='member' level='[none:teamNumber (teams):ok]' member='4096' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Calculation_959829716299034625:nk]' />
                  <hierarchy name='[none:Calculation_1241023217767886854:nk]' />
                  <hierarchy name='[none:Calculation_1241023217766604801:qk]' />
                  <hierarchy name='[none:teamNumber (teams):ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217762705408:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1241023217762705408:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_959829716299034625:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_959829716299034625:nk]' member='%null%' />
              <groupfilter from='&quot;Exchange to Scale Short&quot;' function='range' level='[none:Calculation_959829716299034625:nk]' to='&quot;Stack to Scale&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:matchNumber:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' filter-group='4'>
            <groupfilter function='member' level='[none:teamNumber (teams):ok]' member='1736' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]</column>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</column>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_959829716299034625:nk]</column>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217762705408:nk]</column>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[Exclusions (Cycle Identifier,Cycle Successful,cycleTime,teamNumber (teams))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_959829716299034625:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217767886854:nk]' />
              <tooltip column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[attr:Calculation_1241023217762705408:nk]' />
              <tooltip column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[attr:cycleID:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217766604801:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217766604801:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.2872927188873291' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>(([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_959829716299034625:nk] / [federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]) * [federated.1vfd8zs1ojqk7g1adk2u2142d753].[usr:Calculation_1241023217767792645:qk])</rows>
        <cols>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217766604801:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Climb History'>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='Climb Successful' datatype='integer' name='[climbSuccessful]' role='measure' type='quantitative' />
            <column caption='Match Number' datatype='integer' name='[matchNumber]' role='dimension' type='ordinal' />
            <column-instance column='[climbSuccessful]' derivation='None' name='[none:climbSuccessful:ok]' pivot='key' type='ordinal' />
            <column-instance column='[matchNumber]' derivation='None' name='[none:matchNumber:ok]' pivot='key' type='ordinal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:teamNumber (teams):ok]' member='1736' />
              <groupfilter function='member' level='[none:teamNumber (teams):ok]' member='4143' />
              <groupfilter function='member' level='[none:teamNumber (teams):ok]' member='4356' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok] / [federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:climbSuccessful:ok]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Cycle Frequencies'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cycle Frequencies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='Path Identifier' datatype='string' name='[Calculation_1241023217762705408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([actionLocationName (cycleactions1)]) OR ISNULL([actionLocationName (cycleactions2)]) OR [actionLocationName (cycleactions1)] = &quot;custom&quot;&#13;&#10;THEN &quot;_Custom&quot; + STR([cycleID])&#13;&#10;ELSE [actionLocationName (cycleactions1)] + &quot; - &quot; + [actionLocationName (cycleactions2)]&#13;&#10;END' />
            </column>
            <column caption='cycleTime' datatype='integer' name='[Calculation_1241023217766604801]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[actionTime (cycleactions2)] - [actionTime (cycleactions1)]' />
            </column>
            <column datatype='string' name='[actionLocationName (cycleactions1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[actionLocationName (cycleactions2)]' role='dimension' type='nominal' />
            <column caption='Action Location X' datatype='real' name='[actionLocationX]' role='measure' type='quantitative' />
            <column caption='Action Location Y' datatype='real' name='[actionLocationY]' role='measure' type='quantitative' />
            <column datatype='integer' name='[actionTime (cycleactions1)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[actionTime (cycleactions2)]' role='measure' type='quantitative' />
            <column datatype='string' name='[actionType (cycleactions1)]' role='dimension' type='nominal' />
            <column-instance column='[matchNumber]' derivation='Attribute' name='[attr:matchNumber:qk]' pivot='key' type='quantitative' />
            <column-instance column='[teamMatchID]' derivation='Attribute' name='[attr:teamMatchID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cycleID]' derivation='Count' name='[cnt:cycleID:qk]' pivot='key' type='quantitative' />
            <column caption='Cycle ID' datatype='integer' name='[cycleID]' role='dimension' type='ordinal' />
            <column caption='Match Number' datatype='integer' name='[matchNumber]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1241023217766604801]' derivation='Median' name='[med:Calculation_1241023217766604801:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1241023217762705408]' derivation='None' name='[none:Calculation_1241023217762705408:nk]' pivot='key' type='nominal' />
            <column-instance column='[actionLocationX]' derivation='None' name='[none:actionLocationX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[actionLocationY]' derivation='None' name='[none:actionLocationY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[actionType (cycleactions1)]' derivation='None' name='[none:actionType (cycleactions1):nk]' pivot='key' type='nominal' />
            <column-instance column='[matchNumber]' derivation='None' name='[none:matchNumber:ok]' pivot='key' type='ordinal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Team Match ID' datatype='integer' name='[teamMatchID]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionType (cycleactions1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:actionType (cycleactions1):nk]' member='&quot;load&quot;' />
              <groupfilter function='member' level='[none:actionType (cycleactions1):nk]' member='&quot;preload&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[none:matchNumber:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' filter-group='4'>
            <groupfilter function='member' level='[none:teamNumber (teams):ok]' member='1736' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]</column>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</column>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionType (cycleactions1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[med:Calculation_1241023217766604801:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[med:Calculation_1241023217766604801:qk]' />
              <size column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[cnt:cycleID:qk]' />
              <lod column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217762705408:nk]' />
              <tooltip column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[attr:teamMatchID:qk]' />
              <tooltip column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[attr:matchNumber:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-transparency' value='255' />
                <format attr='size' value='2.6408839225769043' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='355' />
                <format attr='maxheight' value='355' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='355' />
                <format attr='maxheight' value='355' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1360' />
                <format attr='maxwidth' value='1360' />
                <format attr='minheight' value='355' />
                <format attr='maxheight' value='355' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionLocationY:qk]</rows>
        <cols>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionLocationX:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cycles Ending in Exchange / Match Dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='INDEX()' datatype='integer' name='[Calculation_267964224090558483]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Exchange Match Cycles' datatype='integer' name='[Switch Match Cycles (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Switch-Only CycleID (copy)]&#13;&#10;&#13;&#10;)}' />
            </column>
            <column caption='Exchange-Only CycleID' datatype='integer' name='[Switch-Only CycleID (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [actionLocationName (cycleactions2)] = &quot;Q&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;W&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
            </column>
            <column datatype='string' name='[actionLocationName (cycleactions2)]' role='dimension' type='nominal' />
            <column caption='Cycle ID' datatype='integer' name='[cycleID]' role='dimension' type='ordinal' />
            <column caption='Id (Matches)' datatype='integer' name='[id (matches)]' role='dimension' type='ordinal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Switch Match Cycles (copy)]' derivation='Sum' name='[sum:Switch Match Cycles (copy):qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_267964224090558483]' derivation='User' name='[usr:Calculation_267964224090558483:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='411' />
                <format attr='maxwidth' value='411' />
                <format attr='minheight' value='175' />
                <format attr='maxheight' value='175' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok] * [federated.1vfd8zs1ojqk7g1adk2u2142d753].[usr:Calculation_267964224090558483:qk:3])</rows>
        <cols>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[sum:Switch Match Cycles (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cycles Ending in Exchange / Match Dist (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='INDEX()' datatype='integer' name='[Calculation_267964224090558483]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_267964224090558483]' derivation='User' name='[usr:Calculation_267964224090558483:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='411' />
                <format attr='maxwidth' value='411' />
                <format attr='minheight' value='175' />
                <format attr='maxheight' value='175' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok] * [federated.1vfd8zs1ojqk7g1adk2u2142d753].[usr:Calculation_267964224090558483:qk:3])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Cycles Ending in Switch or Scale / Match Dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='ScaleOrSwitch-Only CycleID' datatype='integer' name='[Calculation_12103470403129344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [actionLocationName (cycleactions2)] = &quot;3&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;4&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;5&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;6&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;7&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;8&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
            </column>
            <column caption='INDEX()' datatype='integer' name='[Calculation_267964224090558483]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Switch or Scale Match Cycles' datatype='integer' name='[Exchange Match Cycles (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Calculation_12103470403129344]&#13;&#10;&#13;&#10;)}' />
            </column>
            <column datatype='string' name='[actionLocationName (cycleactions2)]' role='dimension' type='nominal' />
            <column caption='Cycle ID' datatype='integer' name='[cycleID]' role='dimension' type='ordinal' />
            <column caption='Id (Matches)' datatype='integer' name='[id (matches)]' role='dimension' type='ordinal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Exchange Match Cycles (copy)]' derivation='Sum' name='[sum:Exchange Match Cycles (copy):qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_267964224090558483]' derivation='User' name='[usr:Calculation_267964224090558483:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[sum:Exchange Match Cycles (copy):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[sum:Exchange Match Cycles (copy):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='411' />
                <format attr='maxwidth' value='411' />
                <format attr='minheight' value='175' />
                <format attr='maxheight' value='175' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok] * [federated.1vfd8zs1ojqk7g1adk2u2142d753].[usr:Calculation_267964224090558483:qk:3])</rows>
        <cols>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[sum:Exchange Match Cycles (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='Path Identifier' datatype='string' name='[Calculation_1241023217762705408]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ISNULL([actionLocationName (cycleactions1)]) OR ISNULL([actionLocationName (cycleactions2)]) OR [actionLocationName (cycleactions1)] = &quot;custom&quot;&#13;&#10;THEN &quot;_Custom&quot; + STR([cycleID])&#13;&#10;ELSE [actionLocationName (cycleactions1)] + &quot; - &quot; + [actionLocationName (cycleactions2)]&#13;&#10;END' />
            </column>
            <column caption='Cycle Identifier' datatype='string' name='[Calculation_959829716299034625]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF     (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Portal to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 7&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Portal to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp  Side Portal to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;        [Calculation_1241023217762705408] = &quot;1 - 8&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;2 - 7&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;9 - 4&quot;&#13;&#10;      OR[Calculation_1241023217762705408] = &quot;0 - 3&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp  Side Portal to Swtich Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 5&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Portal to Scale Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;1 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;2 - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;9 - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;0 - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Portal to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 7&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;Q - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;W - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;W - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;Q - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Exchange to Scale Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Stack to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Stack to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;A - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Stack to Scale&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Switch Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 8&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Switch Long&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;S - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 7&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 8&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 4&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 3&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 4&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Line to Switch&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 6&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Line to Scale Short&quot;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - 5&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - 6&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - 5&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Line to Scale Long&quot;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - W&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Stack to Portal&quot;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;A - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;F - Q&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Stack to Portal&quot;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - W&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Same Side Line to Portal&quot;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF (&#13;&#10;         [Calculation_1241023217762705408] = &quot;S - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;X - W&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;D - Q&quot;&#13;&#10;      OR [Calculation_1241023217762705408] = &quot;C - Q&quot;&#13;&#10;)&#13;&#10;      THEN &quot;Opp Side Line to Portal&quot;&#13;&#10;&#13;&#10;ELSEIF (CONTAINS([Calculation_1241023217762705408], &quot;Custom&quot;))&#13;&#10;    THEN &quot;custom&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[actionLocationName (cycleactions1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[actionLocationName (cycleactions2)]' role='dimension' type='nominal' />
            <column caption='Cycle ID' datatype='integer' name='[cycleID]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1241023217762705408]' derivation='None' name='[none:Calculation_1241023217762705408:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_959829716299034625]' derivation='None' name='[none:Calculation_959829716299034625:nk]' pivot='key' type='nominal' />
            <column-instance column='[cycleID]' derivation='None' name='[none:cycleID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' filter-group='4'>
            <groupfilter function='member' level='[none:teamNumber (teams):ok]' member='1736' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleID:ok] / ([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_959829716299034625:nk] / [federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217762705408:nk]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 7 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
            <column caption='Exchange Match Cycles' datatype='integer' name='[Switch Match Cycles (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE ZN([id (matches)]) : COUNTD([Switch-Only CycleID (copy)]&#13;&#10;&#13;&#10;)}' />
            </column>
            <column caption='Exchange-Only CycleID' datatype='integer' name='[Switch-Only CycleID (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [actionLocationName (cycleactions2)] = &quot;Q&quot; OR&#13;&#10;   [actionLocationName (cycleactions2)] = &quot;W&quot;&#13;&#10;THEN [cycleID] ELSE NULL END' />
            </column>
            <column datatype='string' name='[actionLocationName (cycleactions2)]' role='dimension' type='nominal' />
            <column datatype='string' name='[actionType (cycleactions1)]' role='dimension' type='nominal' />
            <column caption='Cycle ID' datatype='integer' name='[cycleID]' role='dimension' type='ordinal' />
            <column caption='Id (Matches)' datatype='integer' name='[id (matches)]' role='dimension' type='ordinal' />
            <column-instance column='[Switch Match Cycles (copy)]' derivation='Max' name='[max:Switch Match Cycles (copy):ok]' pivot='key' type='ordinal' />
            <column-instance column='[actionType (cycleactions1)]' derivation='None' name='[none:actionType (cycleactions1):nk]' pivot='key' type='nominal' />
            <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionType (cycleactions1):nk]'>
            <groupfilter function='member' level='[none:actionType (cycleactions1):nk]' member='&quot;load&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionType (cycleactions1):nk]' />
          </filter>
          <slices>
            <column>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionType (cycleactions1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='411' />
                <format attr='maxwidth' value='411' />
                <format attr='minheight' value='175' />
                <format attr='maxheight' value='175' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok] / [federated.1vfd8zs1ojqk7g1adk2u2142d753].[max:Switch Match Cycles (copy):ok])</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Cycle Time Distribution'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='competitions+ (scouting2018)' name='federated.1vfd8zs1ojqk7g1adk2u2142d753' />
      </datasources>
      <datasource-dependencies datasource='federated.1vfd8zs1ojqk7g1adk2u2142d753'>
        <column caption='Path Identifier' datatype='string' name='[Calculation_1241023217762705408]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF ISNULL([actionLocationName (cycleactions1)]) OR ISNULL([actionLocationName (cycleactions2)]) OR [actionLocationName (cycleactions1)] = &quot;custom&quot;&#13;&#10;THEN &quot;_Custom&quot; + STR([cycleID])&#13;&#10;ELSE [actionLocationName (cycleactions1)] + &quot; - &quot; + [actionLocationName (cycleactions2)]&#13;&#10;END' />
        </column>
        <column caption='Match Number' datatype='integer' name='[matchNumber]' role='dimension' type='ordinal' />
        <column-instance column='[Calculation_1241023217762705408]' derivation='None' name='[none:Calculation_1241023217762705408:nk]' pivot='key' type='nominal' />
        <column-instance column='[matchNumber]' derivation='None' name='[none:matchNumber:ok]' pivot='key' type='ordinal' />
        <column-instance column='[teamNumber (teams)]' derivation='None' name='[none:teamNumber (teams):ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' datatype='integer' name='[teamNumber (teams)]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='70560' id='10' name='CTD' w='82400' x='800' y='28440'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='margin-left' value='0' />
                </zone-style>
              </zone>
              <zone h='27440' id='16' is-scaled='1' param='C:/wamp/www/analysis2018/fieldmap_left_blue.png' type='bitmap' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-top' value='0' />
                  <format attr='margin-left' value='0' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='5875' id='11' name='CTD' pane-specification-id='0' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217767886854:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-top' value='0' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone fixed-size='94' h='12750' id='13' is-fixed='true' name='CTD' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]' type='filter' w='16000' x='83200' y='6875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone h='7625' id='14' mode='dropdown' name='CTD' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217762705408:nk]' type='filter' w='16000' x='83200' y='19625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
              <zone h='71750' id='15' name='CTD' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' type='filter' w='16000' x='83200' y='27250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
            <format attr='margin-top' value='8' />
            <format attr='margin-right' value='8' />
            <format attr='margin-bottom' value='8' />
            <format attr='margin-left' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Cycle Frequencies'>
      <cards>
        <edge name='left'>
          <strip size='223'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='47'>
            <card type='columns' />
          </strip>
          <strip size='47'>
            <card type='rows' />
          </strip>
          <strip size='47'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card mode='dropdown' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' size='21' type='filter' />
            <card mode='dropdown' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]' size='21' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[cnt:cycleID:qk]' size='32' type='size' />
            <card pane-specification-id='2' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[med:Calculation_1241023217766604801:qk]' size='32' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[med:Calculation_1241023217766604801:qk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217762705408:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionLocationName (cycleactions2):nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionLocationX (cycleactions2):qk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionLocationX:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionType (cycleactions1):nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleID (cycleactions2):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleID:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleMode:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (cycleactions):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (matchcycles):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamMatchID:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Cycle Time Distribution'>
      <viewpoints>
        <viewpoint name='CTD'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
    </window>
    <window class='worksheet' name='CTD'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='279'>
            <card param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_959829716299034625:nk]' type='filter' />
            <card param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' type='filter' />
            <card param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217767886854:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217762705408:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217766604801:qk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217767886854:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_959829716285001728:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_959829716299034625:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionType (cycleactions1):nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleID:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Auto Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (matchcycles):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (matches):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cycles Ending in Exchange / Match Dist'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217766604801:qk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (teammatches):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cycles Ending in Exchange / Match Dist (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217766604801:qk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (teammatches):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Cycles Ending in Switch or Scale / Match Dist'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217766604801:qk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleMode:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (matches):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (teammatches):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217766604801:qk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:actionType (cycleactions1):nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleMode:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (teammatches):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Alliance Selections'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_1241023217767886854:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamName:nk]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Climb History'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_267964224226795542:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:Calculation_267964224226844695:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:cycleID:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (cycleactions):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (matchcycles):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (matches):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:id (matchquestions):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:matchNumber:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[none:teamNumber (teams):ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[sum:Calculation_267964224227545112:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[sum:Calculation_267964224227659801:ok]</field>
            <field>[federated.1vfd8zs1ojqk7g1adk2u2142d753].[sum:Calculation_267964224227885082:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Alliance Selections' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Auto Line' width='192'>
      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
      4P8B2xwsWQ3KZpQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CTD' width='192'>
      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
      TVoOYNHT/H8Xdc3ynioBAwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Climb History' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cycle Frequencies' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3hc53nm/TttzvQ+AAYdICoBdrFIpAqpbslF3li2XGLHcUscl1TvZpOs
      k6zT4y/eTTbJJs4XJ7ZjW06xZWtlq5ISRYmk2AAQLOh9MMD0ftr+MRBFiaQEyJZEr3Xz4kXi
      wjln3nPOe79Pu593BMuyLN7Em/gphfhGD+BNvIk3Eq8JAQzDeC0u+ybexI8db1qAN/FTjTcJ
      8CZ+qvEmAd7ETzXeJMCb+KnGmwR4Ez/VeJMAb+KnGm8S4E38VEN+owfw44ZhWswvZrj/G1/h
      7JnTb/RwXleIokhXVxeLi4skEok3ejg/Efh/hgCWBZphsf+Z8/zub/0qk8/tJ6+o+IK1b/TQ
      1ox4bAa314/D4V7TeZs39dN9m5u2iJ9vfP7PeVPl8soQXgstkGEYSJL0477sFWFZkCsafPM/
      9vNHn/8MvZUsH+np5kHdxr5f/xL+YC0/KVNBkuAL//nnuP1t97F1521rGrdTFRiLfZ/+5h0s
      Z8I/Mff8RuIn3gJYlkUsUeaL/+Pv+Or/+gJ3hQP8/JYt2GWJt+ULPPj1/8lbP/kFbKrzjR7q
      qiBKVVdGVmwoNteaztUti676TmRRRLE5AeG1GeQrQBQsXKpOriRjvUFjWC1+ooNg04IzYwl+
      6dO/ylf/4rf5ZFsTn+hbj12uWp8Gl5NN0yd56nv/DJhv7GBfFwiospt8Of2GjiLoSvHNg39E
      rS8PV4Ed8thLeNRZZPHSOfATSwDdsHj4wAAfeN+9nHrw6/zhti3c1dKCJLx4xdkeDCA/9nUG
      n3uCq+FlvNawKU5KWuENXXc1083NG/ZxfOyH1PtTSJeZeK8fLMraGF/Z/ze41EtFmj9xBLAs
      KJYN/ukbD/HRn30njskh/nzXTjaFQpc9XhAE3lIT5Py//H/E5if4f50EAiqmWUZ4AxmQLig4
      7dexbd0+Tk8fwu+YwK4YvBHP3q0aLGdn+fSdv0KmdKnH/xNFAMuyiCeL/Jff+VN+9ZPv43ob
      fGHHDprcL58tsUkSb1NNDvz971MqZl6n0b4xEASVklZCFt9YohumwFzKT2f9zcwsT1IqHybg
      0l7nUVi41GVsssxSzotlXboq/MQQwLIszo/H+Ngnfomv/uV/50PNDXx24wa8Ntuqzo84HOxO
      T/P4v34Z09Rf49G+cbBQsCwTRb46Yp54ViXiux6vw89E7DEaAgWE18kSuFSDkYWTtEY2U9Iu
      n5X8iSCAbpg89uQJ3vUz/4lj/+dbfH7LZn62qwtFvGj4q8jmbvD7CD/7HY4deABBuLpdIUU0
      CboqiGscp24IKJKCIl0995cryxS0brrqt3Bk5P8Q8SygSK81QS289gSqrJIseK941FVNAMuy
      KFd0/uGf/p0P3HcP1uQZ/mTXTvZE6xAEASwLa+WvYLO9IgksYF8kROw//oap8TNczfGA31Pg
      r37wW4TclTWdpxkimqG/DhNsbdBNkcVMDVvbb2dicQibdBq3Xee1egceu8G5+RO0122jpF15
      ml+1BLAsWErk+M3f/kN+7dMfZots8cXrrqXH779wjGi3YwuHCd9yK40//5FVPUpFFHm7V+XQ
      l3+fbGb5tbuBHxHlsoNb+q9HEjKsZZJohoAkiojC1deWaiGwkHZTH7qRfCnHcuYparwVfvwk
      sHAqi7jtbuIZBy9XD1ljIcxiauw8yWyZjs42Rs6eJ1DbiGrlmY9n6OnfgF3+0dMPVX9/ls9+
      9lc58IPvcF97Gx/u6cYhyxd+72hqpuYdb8de34C9uZnS/Pyqr++12bg1u8zjX/sL7vrY7yBJ
      q4sjXk9kShJ7mncxFjtOyLeXYmV1lXXdEBAEEUm8euOcVEHGrm4n7J3hzMzD9DfvJpbxY5g/
      ntSVx24wET9NW+0OFtIv/9zWaAEEwpEIIgYz58dp7t9MIbNMKlumr7uBmZklTNP8kTQohmHy
      +IFneec993Ds0e/xaxv7+YW+9Rcm//MoL8wz98//zNif/gn5c+fW/DnrPB46zj7NoYe/jXWV
      FskyJT+GZRJyZVntKmlaAqYlAa93xmUtEChpEol8M31Nuzk+vv+iVOmPemULl20JWVJJ5l+5
      kr5GAlhIih2fy0a5UkHTNEzTwjQNdE1DkKSqb/4qUSpr/PXffZX33PtOyhPn+IMd23lHayvi
      S64pCAKWpqGnUmhLS2jJV6d8vC7op/zglxk9fYSrMR4oVkS666/hzNxRHMrqSGpZ4LZ7KWu5
      13h0PzpMS2A+7ae/+Q7imTk07TkCzh/NJfI6dIZnj9Fas4Wy/srTe80EWJidIVsR6drYT2L8
      LKHaeqKRAKMzaVoaggiCsGYSWJbFciLNr3/ut/jcr/wC6wSTP7/2WraGw1c+SRC4pNqzxs8V
      RZG7Am6O/9OfkErG13Tu6wOBVMGLIor4nKuLBSwEvI4AxcrqrcYbC4F41o7PtQNVsTO++Cj1
      /uKrTJVayOI8AZefxczqtFBrjAFEWtZ1Xvipp2/Dyv98+CPRtV1qBZZlce78GJ/69Gd58tEf
      cE9rCx9f34tvlfn951FwO1n4+Afonk+jT8+gzc+hp1JYpdLLnqdbFmKlRDa9jD9Q86ru4bVE
      oSLTWtPPzPIATvtuyvorxwJuu4+h6bPU+HtXdfwLsPDaFwHIlGpYu5jOQhSqGq3Vn2vhUg0y
      hVO47SrrG7cyMPkYvY1bSRbq0IzVr9E+h85YbIiehuuZT6/u818TNWg6nebw4cOrOjaRzPC7
      v/f7zExNsqe1nV/q78Epr31YyWKOr516FN002LflOuw7Ogmg0Co6CBQ1KtMzVGamqczPY2aq
      1eBYocj3BTc7Pv15mlp71vyZrxdy5QCZYo6WSImZ5Mv7tW67zszyef7l6f/gv77zRsq51RNA
      Ei1OzzzNkdHjfOim3yZdVNY0Tr+zwtnZR+huuJlUwX7RbyxeSggBC69DR5WXmFgcIpaO0xLp
      oKjV0Nd8E8MzB2gKtaLKXeTKq5kP1dXf6/CzlFu9EvY1IcDEzDI/9+tfXdWxejnL8sgZ3vne
      T7Bl87U888D/Zl8ktGZ3RpFkfvHGeyFf4KHpU2xs7qEmXM+x2VGmsnNobg3npnpq9/TR7a3F
      n6tQmF7gHf034/TWU9YtDBPeKAnxyyFbklnfeA3n5g/jd99A5TKruiBY1HrzTC89h9vu5L27
      306xstrXa+GxGyjiNJII/U2vbjGQRItYOkZv4wvBrNeeJZY6QV1gF+mijCiA31kGZplcHEFV
      HHREdxDxOylWJExLYCHtoq32FgqlQXKlgzSEdhDP2nm5d+Nz6IzGhuhtuIH59OqtxmtCANXb
      TNetX1rFkQLF5BiJiUdwuv1ce+u9fGdilDPnnqTHd+Xq3SWwLKaWZqlJ5il/5at86NZbOKnp
      PHjsce7aeAO3EECLxSh4/Sx47ZxMzDKTWCBr5AiP/Sud0TZ8zgAhTx1Bdz0VXaGkSRQq0ppM
      8GsHgXwlQFkrEHQVWEh7XvRbu2LgVucYmDxOT8NW7LYQi+n9SKvQAymSSa03y9D0IQLuAJta
      biNVcJAurv2+l3Mq13R8iET+hYkqCiUOnT/E5pYMm1uvZSE9zeDUKE2hFrrqr2c5b2cu9dLP
      EkgVbNiVTdT6JxieeZjNrTcyl/JiXkbPAxaKNI/H7iGec6xpzK9RQ4wF1mqzFs+vFhaiKHHb
      +z7F9/50hFBxiYhjdTdjWhaZYo7WdJZSqUjmgQfoCAbZcs89PDQxxBPlAm9t7oHv/4DjR44h
      veNj3PuWz6DKOpqRYGppjOXcEoPTp1lML9EQrCPsCeJzegh7a3GqQVTZj2aoFCoiFV1ENwVe
      T2uRKcq01/YxnxxAUXahGyJgEXCVSeVOsJzJsbHlVubTdnymjiSKLyuHEAWLiKfIXOIYp2dy
      nJoapr9pAxbOH6GJRaCiX3yuhWYG+NjNH+XU1HN869DXaY00cNP6G5hKBFZW6it/VkmTqOjt
      bGoJMzB1kPbabkpaK8WX6Hr8Tp0zsyfpb97Hwip9/+dx9XSErQRODqef3R/+LR744md4v83A
      doXWSsuyqlII0wRRxLKgMjtb/VkQMBIJUl/+Mjf19KLfvo9/nxskcn0/2+58JwS2spxTABVw
      4nY0EPaYbG41kMQC2eICidw8y9kUs4kFkvk0EW+QiDeEaVmosp2AK0KNvxnNsFGsiBQr0kra
      7bUihYBpNbCUOcXmtjKxjEqtJ82JiSdZV9eNy34N8+nq69QNAVmSr0AAC59DB2ucoemzdNX3
      E7YakCUbrZE+FrM/2vhl0STiyaObNiQxy/DMERJZO62RXprD12OTUxwdO4oi2emo28FCxo5h
      XtnamJbAbMpLd/0+JuNP43Om8Ng3ki0pK0/FAmsGvyvAcu7lq76XHe+PcrM/XrzwsuqbOmi7
      75d56J//gLfWBC9Nq1oWoqLg274dyeNBbW9HnxzA1dKKcpNAfniY8uIigiBQOjNMduAU9Xtu
      oeXmbh4d2s9ONU9r7XUsZVVMS8AwBfIVkXxFpkqKAE57NxGvgVM1UKQSc4lxYukZTMvENA2W
      sks8eeYA+XKB7es2IUsSDsWJyx7B44igmyqFcpUUuiH8WFoD00WZnoZNzCdOoSp2hqbn2NK2
      j/m060VVVM0U0AwdWbq4sGRhV0yCrgQnJp6mIdhEb+NtLOVsSIKFLAqIwtrch5dCFCwi3jL/
      7Zu/wda2ftbVNrOz83rmU24WszKCYBFwBlhXtxfDWGBw+gmi/ighb++Fd3F5CCxm7UR8NyAK
      I6QLRwm6t5EsKPicGqMLQ6xv3Esss3a37SoiwMUQ2LTjZh4eP8PRQ//G9vBlml0sC6NYxNIN
      sjMzqKJCeWoUs1DA1F+QASwUCnwPN9s7b0GUu7lvz3qGpvfz7UP/izs234lN6SBVkHnpymGY
      IpmSSKakAHYEYTMNoY04bCZ2pUJFS+B3nmUkNkahXMTCQrNpIJik8jPkSgUsQBJlAq4w0UAL
      hmmnpMkUNYmSJq5o91ZPDEEAtz3Ag8ce4Ma+3bTX3cxMUrnkGroh4lKdaEYJcCAJUOsrcG7u
      ENmCwobmm0jkPcSz1QkjSSaGaWC9qulQTX1GPGXK2hTn5sb56M3vp8bXyPTyeU5OHqUzugmH
      6kUSkvzF97/Iz+39CGW9k7baKJIwzfm5xwl76wm6eljO2y6r24eqqlSRunDazjMVf4Kexj0U
      ywsEXaGV1f/Ssa08uSuO/qohwKXGWuTGe36eB2bHicaHaXRdlP4TBExdJ3PsGAgC0pYNBLxO
      kgf2w4oLJADnsjkO+Fu46WP/jWAoimGuiLGCd7CpZRffO/ZvKNIh9vXfRaYUflm9jWUJlHVp
      Ja+uAC687kZ2B27CYTNx2XQyxRhTSyPoRpmyrhFweon4QiiSzNTSaTKFLIIgYFdUZEnBbQ/j
      ddSAUM2AlDQR4wq1SadNx2mb5bmxU+ztvw7NMEkXLp38UHUbVMWBpmcJulyUtXMMTE2yvmEb
      2XKEWObFr12WLEzLxLLWVjNQZZOgq0QsNcjgVIymcDud0RtZytpYzgtEA/XU+RLc/8x3KGsV
      WiONfO7tnyRTqqWkVwNdgXY6oo2k8sOcmf0BXdE+LKGJZP7F9+Z1FBAokC2FQOykuz7AifFH
      0E2dbe13XBJI2ySTfOkIYW876WL4ss8JriICXA42m5N9H/w1HvzjX+R9moZLeSEvLTxfCRZF
      Uk6FUL5cVb+IIpZlcSSV5nTntdzxgV/B6Qq86LplXWImGeSG9R/CMsf412e+zrq6dra23Uw8
      60R/GZ/0YliWQKEiU6jAMjaglaCnBVUxcak6kCdTmGcxvUiqkEIWZdx2Fy2RBlRZJV3IMJMY
      oFQpIYkyJa1MwBXmc7/xcTy+elzuCiVNxKFozCWPksqZrG+6BcsSOTf3CN0NFRYz6uVGhiq7
      SeRmmEscZX3jejqjt7GYVS7rij3fPaavSoxWLVx57TlGY8eIpyu0Rnrwu7eQKigspKtiNJea
      YWb5NFPxLNd17cbnamAheY6DZw/TFe2l1reO5ayKborEsyqisInexm7ypXPEUo/TEulBM+vJ
      rrQxxtMneeDoA/zSnZ8mVYiwkInQVd/Nk8MHyZWmcKsd5MoSz090WTKZWhojlp5ha/tbWMxc
      Po169RDgCgK6QKiezR/+bb771/+Zd4e9l+iCRJeLkipjjy2jAbpp8sRyisQN7+aOt30QRbFf
      9rogkCkqCHTxzp2tzCWO8Af//l/5wPXvJhrcylJOvaIpvjIEdFNAL4vkyzJgB4J4XOupC1Tj
      CcvKMpsYJ12IoxsGsiQRdPtpDEYJewOk8hmmpXmWC1MsxsYplEvMJRfobeikK7oe3RSomALr
      ateRzA0jCpte5Dvb5Kp47uTkWYqVEru63spiRn3ZQFOWLLBengACFj6njsACc4mzpHMK62o3
      kCv7SRRkZNEi5K5Q0WeZWBxGVey01WygpAVIF2VyFQFR2MY16/opa1OMLzyFTXHQGNpEMu+k
      rEvEsw5kcQPdDZ2MLx4lVxqgr2k7uVIIl7qdz9zVx8j8UTwOH43BXk5NjvK2a36G6aXzZEtP
      0hTedaFeUKjI9Lfci8s2y+npR9jQspeFlOuSBeAqIsCVf9XRs4XFt/wcB773t9xUE35RkcwW
      rUczdITYIiXd4MFUDsfbfoF9e+9BFF/59iwEFrMqtYHtbGo5zdeeup+I9zHef8P70Y2GlUbq
      K02Mi33MK/mbArohkC6KK5VVO5Icpi5g4lINfM4Ci6kxZhILnJocpmJoyJJMUyiKbugsGEvc
      e+3bSRXyjC2ep6QVkUUZ3dAZnh3hjs0+VCWIYdkRMFnODjI4tcCW1g3MJ+dZSNtfkciSYGEB
      hvHS46r+fcBVQTemmV4axWlz0VpzDZmSh/m0iF2p1hEW02c4Pb1AY6iF3sYbSRUcK0HpC9c0
      LYFYxo4odFIfakMW5hiZP4RNVmmt2Uiq4KFQkZhLOXA79tAczjCXGEQ3z9Ac3sBS1kfYdwOy
      MMnjg/9Oa6SJRN6Bomwi6pjkzMyjbGy9noWUF8MSKFYkKnojG5odnBx/lM2t17OQCbxowbhq
      CPDyJRuRnbe8i+9Nnid6/iDdFxXJlGgU3TRYmpriW3mD9g/+Juu33MjadH4WFV3kxr4Pc/e2
      ModHfsDvfPP3uGXDHm7Z8HaSBf9lNDUWXvscgmAnXQzic8TJl+Ig9L6iC3VxPGFZGf72ka/x
      a2/7fRyqDa9Tx6sm+faz3yfiCaHIMk+fPYzb7iLsrWN9sB5RqOqkfC4/g9PHiXiDzCQWiKXi
      NIaidEXbEZDIlfK01FTIlWUqunBFKyAIOrIkvcgCKJJJxFMmXRjl3NwEuVKeff13M73sYDEj
      4HdpuGwLzCyfZTlj0BjqIuTZTCKvvGIu3rQEUgUFaCYarMehJDk7dwSbJNMS6aWohUkXZWIZ
      Py77tQTdGYamn0GRFDqjO4AGPA43Fb3CA0f+J2/f/h5ylTY2toQ5NXGAjrr1aGYLulmVXS+k
      w2xuu4mTE/tZ37SVVKH+QoFT+vznP//5lx3tq0A8pfP9Z1fXyqeVkswPfIUNm3exdefNV+xq
      FEWJpu6N/PC5g6zTchf6A5w7d7DkdfKDp4bof/9/oaP3GtYqcnWpBo+c+luaQgFSxTpqfN3c
      vW0PA1Mn+ccnvkJHrYPWSJRS5QUfWpEsBia/x5nZ42xr6ySVn+LRgYfZ0lqPIHjQjNUVygzT
      zvU9N5HM21FkC8GaZmhmiO3tu3HYryHk7aAh1E7AHaRUyXJmbpjp5XFGY+dxKCrxzBKCINAS
      bmBPz23U+dsQBYnF7DzHxgcQSFLWphCI4XeU8LsE3HYBSbQwrarm0qUWyZViSFIrqmwS8eZI
      ZJ9jZnkYp2ojXy7w1NmjXLNuBzYZBGuU8cWjmGaZxtBGZLmbbClAobLWneAEKrpEvuLE72qj
      LhBhKn6aqaUTNIVUPA4X2ZJMpmgn5Gkj7HEyMn+MVGGasCdIrpTHaXeTzM8T8YBu1VLnb2V2
      eYjR2BGyxRGigU4qhohuzJEvL5PMLRHxAoIf3RRfm71BhyZK/OKXsqs6tpAc49jX9/Gen/00
      H/nMH76kgGwRcGYAE8NyoxkiU5OjHPrjT3FfwIEqybh/8ROccyjo2nrc3itH+y8HRTIRGWYx
      PU1T5GYyRYXqCq8jClP8w+P/P4VykY/s+yAuR89KEQ08dh2vPcuZ2SM0huqp9bcyMPUcdsVO
      2LuZeFZd1XgELGq8JSbjzyIKIs88dAhf/RY2XXPbS460UCQLn0OjzlfgyTNPMzh9Dr/LS9Rf
      gyRKeB1+6vyt+Fw+jo8/RX/z9Wi6iGXlWUxPoxk5ylpVISuJEoKgEvEGSOUT1Po7OTd3HEUS
      UWSFUqXE8Owo9+y4E5fq5tTUIIVykaZQO25HG8t520pF+scHRTJpCmYZmDpMRa8QcEWIBjay
      lLOhGQJ1vjJHRr7Luflx7tl+Bw61B9OCRHaAeCZGX9NONMNDunCav3zo7/jgje+itWYn2WKM
      g2ce5qa+a1nOJnDYPNiUjVePBejftJOtu255kS8kiRajCw9z6NzjeOwF8qUxVGeO9bfciHP7
      Nah9fcz57NSFG/F6apHEl+oOV0cG0xKQpRAOJYss5jCsIJYlVt0UI8Cent101kX4qx/+PfH0
      eba1NSOKLnJlmWzJQV2giZIWZ2R+mA3NW5BEkeHZZ2mrCVDRHS9T4KmmEsPuRU5NHqCjrhdZ
      6ecf/vdfsa67n/rGrhcdLQBeh4ZhjPPc+DHWN25la9tuNCPFtvYbCbiasdtszCbGGIudYXh2
      BF3PoMoGsuTCZW/ApjThsrcS8jQT8tRS47UxOD3MQyefYCE1RaaYYXp5HpfqYHvHZoZmzvPw
      qQOcmTtPR10Lm1q3UNSiJAu2lw2sXy2cNg3dmOOBoz/g7m33ARoT8ZMIxGgKuphcOkGxrHHn
      lnezmJllIXWGGq8PWW6jLhBlLHacirZIS6SFkYVRTk2epqIv01HbSWf9LtL5BSpGGUUSKFZm
      riYL8Ck+8uk/eokLVJXMymI1GFNkE1HQKJZTJHOLaEaRE5MDdEfbEYTqiladJhIu1YvXGcTj
      CGJaChW9quHRDJGKUQ1MX0qQoKvMeOwxehv3MJd6seBMFk1C7gKnp/fzTwe+zVu33cKe3rtJ
      5DxUDBFFMgm5E5ydPUJbTRu1/hqePvsMjcEWJLmLTPGlwbRF0KWRKQyQyidYV7eLeNYNosDv
      /dp7uPOeD7Bt110XjnXaDNzqIkPTR2mJtOJUq5ZIFC0kjuO2B0gU2gABUag+t7nlJ9jQsoXp
      pQWS+QVKlSIWoEgqDcEWTEtnLjlJoVwiVcjQGmmgvaYFv8vLgeFnmU0s4FKd1AdqkESZsdgk
      dptK1F+D2xEgGugiV3KQLckvQ/K1wEJkgK8/9TU+evN9eJ3dJHI2/C6NTP40Dx5/HAuLd+54
      F7lKI6YpEPEWiCUHSeSTdEW3IYhedH2B4dmTbGrpRRYl7n/mQWRJZse6rTSENlIoz3Nu/jRt
      kcarhwDv/sCn+OhnXkqAK6EqtnPbDWKp/fQ07CFbklEkE1nUEAQNzciTLiyRzCXAMrBW/oiC
      iChIuO1uXHY/iuRGkhxIgoOKIeJWEwxMnaQ5so90UX5JBqUqJ/A5Ejx86rs8OfwsH9n3PhrD
      O1jO2TEtCLoqpPMDZIpJdqzbynh8glh6mY6664hnXZiWgCSa1HjSnJ45RFOoFVHqvEAQUeJF
      BFAkk4Azw1ziFIZl0RrZxmLWedHqaxH1lxiefpy22ltIFqoBsiyZZPNP0BHdwWzShSRaBJwa
      tb4cp2fOcGT0FKZpUjE0ppZm2dt3HVta1zM8O4okinRFe9CtKPmyhEMxsckaUCCVX2Aps0Ay
      n2Jw+ixhT5CtbZuJBtoQRQ9l3bYiYhNW5BlrI4ZL1fDai2SL88ynJhAFaeV+JDY29/Ls+eOI
      ooQiybTXbiZb8qIZAkFXluHZZ3AoKu11mxAFlfnkMKn8MtvaN3J07BRL2SRu1cmWtt2IosmR
      kaevnizQ2tr3BBAk1JUm6kxRvqh5w4ZbNchX/FhWA16XhSxaKLKFTTKxySaSqFMspylWMuSK
      M5T1PLphYJomCDC2OEm+9H1qfFFCngheR7hqRYyqFcmVA+zb8H52d1/Ptw7dT7HyMB+66YMI
      QiuJvA1F2sq62gTPnD9KW00Tm5p7OD7xJF3RDWhmDYY5wdm5MdY37mQpF0CrXOpKCEDEUyKd
      H2Z4Zob1TdvJFCPMX7LLgcBSViXoCQPzQDMgYJoCpiUiCjou1SDgzHN27ijjMR3DNOiOthN0
      ++lt7ODxoUOML04jCgICAqYkcWb2NC77HO21PWiGk0LFRqHiQDfCBDx91AVNtrYbKFKZXCnO
      4NRhhudGANjY3IvT5iLoriXgrkczqqQoahKVV+jTzZcV8mUFl+qkt8HB4ZEjuO0uTNPgweOP
      cnP/XjKlMHYlw2T8FNlinu76LRS1CNHgrXjtCcZjJxEEmY66TTQEszxz/hghT4Ce+nU8PPAU
      B88+Qn9TH3t6bryKLMD7f4mPfvaPX9ECiIKFz5HCsJy4VYNzc08R9t18Yeu7oCvHvz7z1/zM
      tR9nOfdyPQUvfJAkVAtINtlEkUzsis6pySfY0NzLUjZHIreMaWmIQvUsy7KQRQW33YnH4WIy
      PsO/HPwum1v7eNs176KkB6noIj6HxnL2FKl8ip2dmzkycpLpxAI99esIurexnLfx0hVSkiwe
      /fcvsfumrWTJ0lrTgSC0k77EhXox6nw5Tk/vp7X2NjJFBVGwkIQTSILBXDKGLElouoYgiHTU
      tRDxhjg7N0q6kGUxvcStm+5mJulDFi2CrgqSaJAtLjK9NEZJKwDgsDkIe2rxuRqwcJMvS5S1
      qjRckSx8Tg27nGU0NkSmkGI5l8Jpc1DjC1UXGMsi7AnjdkSq8nJTrapoNRHDrGZuExsAACAA
      SURBVAoGn5dpLySPU9YrtER2ksjbaQwkefLM4wRdfkRRpCncjyj4UKQKM8uDZEsZov4WVFsb
      hiniUJY4Pv4sI7EJVNnG3dtuZ2BykP7mLn548kkeGXiKD930rqvHAqyWhR67zj8+8Rdsae2j
      raYFv8uHKpsru38JKJJJS7gRTb+cROBivDCZDAuKKytUFTb6mnZxdu45GkJ78bokJLGaoaha
      EQtJ1KnoWYqVDCFPhI/efB8DU2f4/X/9XTrqWtjRsZmltIRTtRPxBvnu0UfQDZ31jZ3EMwka
      ghXUsvwiCbUqGwTdaXbdtgFBEugN7SOetV/wryXRvKJbkcg5caouHEocmxRG0ycZnB4hU8wS
      9oRwqg42tfSiGwYnp4aZT8VpCPYQ9gaRxAMYph2bZBJ0lXnoxDe5tustZMtt+D2t2BUTl81A
      EvMkcrOMx45RrJQQBAFRUGiOrCPgqidXllnOBfA4rqchqCEKKWYSZ0nmEtgVlQ3N3VgWLGfj
      LKbGKGlldNPArjjxOUPU+JopVtKcmxuip2E9mVIDsYyMQzEYmj7B9nU3ki4GcKlJpuKnKGll
      GkOtNEc2YZoms4nTLGaeJOKpxWnrYHfPPnKl71Lrj5DOp9nbfyOD0wO01zazLb+BRwcPXj0W
      4N73f5KPffZPXtECCIJFjaeMTTY4M3uIWDpOrS9MyB3G52ohV5pD0y00s/9HkiBXU6MnEQUJ
      zey/QnHrhcGKQrUzK+TO8t2j93NqcpiP7Hs37bUtPDZ4kHy5iNfh5ezcCD0N6xiNTdFW00TU
      X4PD5sWmuFnOzpDKp7imuZ+JeQ2Hfx26UfWlFclkMv49arx11PhasckudKPqlpV1EdOEen+K
      7x9/gHp/DdlSHkmUmE/GeP/193BufpxYeolaXwO1/h6WcyplXcRtN5hffpSOunbOzY9iWiYl
      zaC7/gYyJS8vDdyhqh1y2AxcqoEsFpiMnyOZj6/IVAT8rgBhTyN2W5iSVu1LsMlFppbOUChl
      kCSJqL+esLcRzRARBZNMYYbvHP0hbruTdbUtyJKMXbHjcdTgcTgYi52hObyHZEGp7n8qVy1V
      pjDGfHISp+qgIdhB0O1jLjnH2bkh5pKLvHPH3ZhWiFJlmlNTg/TWd1AfrOX+Zx5EkeSrhwDv
      et8n+fgvvzIBnocoWOj6UzQEu7DwUqosMJ8c5eTkMFvbNtIc6cUwfaSL8orfuXYyBFxlzs/9
      kA3Ne5hP+1d5jWr9wCbP8OXH/pHlbJIP772XaPAaknkFrz3O8OxReuvXkSpkmEvG8NjdjC1O
      0RxuQBAEDLMa20iihKYb2G0uarxh5pJT+JxVty5bzKGvHGeaJulClsHpswBsbeuno66Vgemz
      HB8f5M4te2kOtYNQTyJnw7Sq++d4HQVOzxxhcOo01/deS52/A4dNZimnkinKF/UYvPx9i4KF
      XTFQFRO7olGqxIlnpskWM+iGgQXU+uppCrXiUFWwykwsjjOTmMcC6gP1LKTm6Wvso6g3IYsW
      qmJQ1pLkSzEOjxwlGqjBrlT1WSFPLY2hdZQ1mZImIUkWiphnMj5ArpSjPtiAS7Uxm1hAN3Q0
      w2Apk6AuECHoDpHMLdNe08Th0ZNXjwu0VqiySbZQwsLLQtoBtLGurg7TsuiM9jM0fRJBMFAk
      mZCnAZe9mWxJplCWVm0ZknkbG1v2MDR9iPaLMiyvBAsoVvLctH4XIU+EfzrwLfqbznD7pntI
      FCJ0N9xKLP0ciVyCfLnIfHKRu7beyWK2DkGEb375C1y/9za61m9GkS0Ms0AqH0cU7aTyOQSh
      uiFwvlSgWCkxEpuk1hemIVhHb0MHD53cz2hsEo/DjdfhwTQNZhMTOGyLKLIL3ShzZmYSt8PF
      tvYNYBkEPRupGCZ/8M3f5PZNNxL2BLArbpxqAKcaxMJOWRMpaRKaURX9yVKV7IYxy8jCIC01
      d67sxuZCkVuoD1Vl4k7VIJ2f5eTkUUxTw7RMfE4v62pbSOSSjMXG8Dk9jMfHiHiLOG1NZEtO
      8uUo9X4nzeF5OqK3IAoWDsUgU4xxeuYoFa1Y7XyTZRyKizp/I2Utze9++4s0BOt467Zb6G3o
      JODy8NjQ0yRySZpC7XTWdXF+YZilbHLtBJiZOM9ypkRnVwunT40SaWzASYnZeIb1/X3YpFfp
      dqzRENkVA93QL9LoWGQKM/hdYaaWg/jcN+FWDZxqnqX0OHPJ/YiCSMQbxe9qpVBRV9KccOUV
      TmAx46Mh2EixfBpZ3PiyOh9RsKj1FRhbeBaPw0tb7T6yJYVfvquX4Zn9/PF3vsA7tt9BTdMO
      NL2CKtsoSxVuWn8tp2eGCHkWcdn7ODUwTEPHNgINzytZHUAQj6OLoFsDa4Zzc2cxLRObrHBd
      1zaaQlH2Dz/L+YVxan1h2muasdtUzsyOouk6lgXDs6fQDYO+pk78Li+maXJ8bPBC9sYmq3z0
      5vtoCTcgCCL5Up5MMctsYob9p5+lPlBLQ7AO3YSwJ8JSOk4qu5IUkCRsskmxUhXWVRcBqdpj
      kQPoIOJbh10xCXsqZAvjPH760IoLaMcwDWRLJl9KMhkfwzAN6vyNDEwusqVtO9MJ5aL9hlrx
      OFuwydX6iE3SqtaivMRydolt7Rup9YV54LlHeOC5R9jWvoH1jZ10Rts4MzvCXHKC9pomuqJt
      aydAfXM75tg50rEYeUugXpFZXirQ11nH5PQy7c3BV7U36FrPsCsGD53cz8/v6wVasckm86lx
      Oup2EMtU/eaqAtMPbKYuYOB3aqTy05yefhJJFPE5/US87RiWj0xRvqx+RzdF3PZexhZ+yMaW
      VmaSvkuOAXAoBqo8xcDkIN31W8iWoyTyVXLGMi4aQrfz39+9nT994C/5h8e/wafu+CA9Ddej
      GQILyePPfxpTi/t5z7tuQ1dfaACSRZOAq0KueJ6R+VnGF6dpDEWpD9RS649wdnaU+eQSt218
      O0XNh1stcHbuWba0beDwyElGY5P0N/dzXfcNpAsJKnoR0zQQRRHLqu7l6rI7kESJdCHL0dEB
      VMWGbhqYlomIgCIrlPUKi5klTNNCEi18DidlvVJdRARYSD6JTbbjsPnwOiIosrcao2jV1lDD
      BIetzNhCNZd/68b3kSzYcNhMnIoBZJhZHsM0TWRJ5tjYcwzNnCeRS9BV30m9v4tixUWmqGCY
      IsUKK01MNsCFJNZTHzzDra4gIc8Gbt+skS0uMpeY5Mnhw/zNw1/llg17CHuCDM+MMBKbXPvu
      0NPj57H5o9QE3NQ2iZw6NYDdZsM0DQRRrm6N+GqCzzUyQJY0NjT1IgpBAHwOjUxeoqRdbuMo
      gXxZXtHod1IbWIfPqWEYS0wtDWKaOoqsEg20I4phMkXlQlYJqrsZ9zfv5sTEk3TV304if7Er
      ZBHxlEnmBsgWiqxvupl4xnGRm2XhthvIwhTPjgzz3t3vRlUc3P/M/Qgc5r173k/Yt406cZnB
      qSOsq22m0FGgo64eS9Bwq2WWs+c4PT1DLL1EUyjKTet3UaiUWEwvIUsOehquJ1V0kiyA31li
      KTPJ8fEhyppGd307qmyj1r+TVEFBUcBuq05gVTap8VYncGOoj7JWpFjJUNEzZIs5SlqZicUZ
      XHYnxXKRsCdA1F+LIkmUdY10IYssvfDOqxsjG2h6hoXUMrlSAZusYFgmliVgk1VOT01w4/qd
      OGz1pIsSimSRK0lkCjIWERQlQnONSdCloUhPsK//RhZSC5yZPceDxx7BqTrY2bmDtpoNVAw7
      hXI1e2dZUOfLc3z8PD0NdxDL2Kj2d7vwuFq5c+se7tmRYmrpNIfOH2U2ESPg8q41CDYZPnUK
      Q7RRX1/L/NwcnlAdbrHCTDxD7/peFPHVBcE/c98v8PFf/bNVEsHCax+hpJWpGH0ARH0x5pMT
      SPKONWlUZNHE69BxKAXGFgcxjCKiKOF31RJ0t5MtyeTKcjXQk0+jGxomm9BW5A9hd5ITE0/S
      GV2PbrZTuGgzKptkEnClmFg8gSKrNIW2EMs4MC2IeCoksoN869C/sbFlPXv73goozCyfoFDJ
      IyAwHp9GEqr3Uh+opTPaymhsEtOyaAx2IkuNZMsSXoeOacYYj51GEISVTE8Nw7MDYFmUtDIb
      mm9gJum55P4bAznOzB6iLrgXh2IgCkkWUqMkckm8Dg9Rfxs2pWblm2oqZIvLJPNLaHoBCwPN
      0C9kfySxKsEuVkqosg2n6rhgZWYTMeKZBHX+MKJQ7Vl22Z0IgCIrqLIblz2A2x7GQkWR8gxN
      H6UxtI9cWcZhM3DaDFRFYz45wszyOPHMMrIo0RxppjHYxkT8LFvbtjGXCr1oAVNlA7fdIFVQ
      EFYkKJa1yLHxZ66eLNB/uu8X+MSv/NmqzpFEi2xhP931m5lO+JFFk2L5IG01/cwkV5utuRTP
      f8Gz214ilZtkITWDLEkEXGGCnjbsio1TkwfobdxJtuSmXBkinonR3XAtixn3BeJVU7VF5hIn
      KFRyrKvdTLoYuqSnQBItIp48Q9MHeHzwKe7edgftte08e/4QxyeG8Du9IMCNvTuJZxKEPGHq
      Az3kyh4ELNz2HLOJM8RSC9T5o0QD3WTLHvIlCadqMBX/AV6Hk4ZAHTOJZRz23SuZHQtBAJfN
      wOdY4uTkEdx2N7lSjoA7SEOwC92oZtAudQurtk0UX6iwq5KJIhtYVhnTKlLRcmRLCfKlLPOp
      OIvpJRqDdThVB2W9giSISJKMYRpVC2EY5MsFkvkMJa1M0O0nllpiXV0LQVeQgDuE1xHBwoFp
      qVT0auHMpVbQjTjDMyc5MnaCTCHH7p5rcNmcRHx11HibsXBjWgn+7Lt/zs/tfS+1vnZ0073S
      YG9ebVmgS/eQvByqX/+jY1rVYpfXobOQrKbMPGqFbLn2VX26aQlkS8rKnjN91AV78Ts1CqV5
      RheOYpo6HruLJwa/T1M4SsAVpLVmL/Op510iC79Tp6ydZ3xxjqi/lQDbWcxevoprmALxjIuN
      LXtpDNbwj/u/zfTSHHdu2cu7dt3FwbNHqegak/FZNrX0YlM6MTGpaKeJpWf5+8e+wR+997eI
      eLeRLMgv2hIwX5ZY37idH578Du01LVSMAvXOCoYpoMoFlrJjLKYTDE0v47A5WVd3DbmSnWxJ
      foWGlmoPgWEKGCaU9ZUYF6gG6/7qAuAtoOnHaI00s7v77ehmNUiGCrligkwxQUUvoBsVLMnE
      ptgIuPyUtDKx9BL5cgEsi1wpw9jiOMl8hopeQRQE/C4fDcE6gu4wbnuIHR3bURWFza3rGZw+
      S75c5Pz8ORbT89WvzxIEbujdQbGSZSx2fOXZm/hdoauHAGsxRHbFxLLMlQDIwiZlCbr9/PDU
      Y2xu3YqivLCzsShUVyxjjVuQgPBCFoNW/O4W6v0lErlzzCTmSeRTbG3bgKrMUOuto6Qp2JUE
      I/Mn8DoDtEb2EL9iX3FV1x90FUnlz3N4ZJTppTn29V2H1+Hm6we/w7GxAX79bZ/AYXNxZPQY
      xyeGWM4dpCXcQHO4nb7GPfzyXUHOzZ2ju6EBw3zpRrYC+XIQp+ogW8wjCiKziaep6BWwBFoi
      XYS93dR4JxEEidnLuEdrRzUr47TNcWZ2gK7oRnLl+pfsAOcAvAhCK6oNnKL1IhmK01biyMgB
      dndfS7FSIJlP0xi00Ryup6xVKGsV8pVq6nguEaNQKTIwdZYaX4gjoyep8Yap8YWIeIMXpB9e
      p5u+xk4qusbU8hz5UgFBEMiV8lcPAdYSBNsVA9O0KGkiogDxzCjtNc2UtQoR3zZSherDFrCw
      zJNkikl6G3de2O+zpIlrihMEqhu6jsaeQ0DgQzd9klNTB+iOtjMenydXHGF0cQpREHnXrrey
      lPOylLvc/jYWDsUk7CkyszzIowNDlLUKG1t6Cbp8lLUKDtXL3U37iLQG+fvHvkF7bTNhdwBR
      EKnzhTFMA6fqZTnvRFW2010/x5nZx+hr2stCuupTO1UDn0MjXZjBodh58MTj9Dd1YZMUOqM3
      kswrJApidUpaRUKeGrLltXnClmViGJUL6WtRFGgIWYwtPEtaFOmO3kA8777CAiCsaKrANAQ0
      QyRfrj6fqC+L2+6mYnRRMUV8rupiocgmtpV/RUpkisvky0nGF0cJe4LU+sNgwWxigeHZUR4b
      epr+pi7aa5pw2Bz8x5Ef4rDZ2djcQ3d9O9FADaIgXkUEWAMDLKuAw2anpEm47TrT8WX8Lhc+
      Z82KaOyFKyqSjZJW4vTMQWySRFEr47Q5CbprcaoRLNyUVgo8l9vBzSYbBF3LDE0fpjPaR7HS
      zOSyyPrG3RybeIr6QJR0wWRv321oeplnzh9DlkS8Dj81ntYLKVaHYuBUU5ybO8YTQ+fxOT2s
      q22hrFeo6DotkS5UJQKY0Gown5tnT/d2NMPg2ZFjvHXbzbRFmnhufIDnxp6mLdJKwLOFpw5N
      0ddRy+DUY2xu2cFiZp75xAIxQUTQZHoinYzEJri+ZycHzx5haGiAk6enAFBkkZ27QyTiyzz2
      5Oq2s4fqghBfGMMsPEo4LONwtHPtjfdyaiJBf72Lh7//FQ6WzrP3ro9QzGc5fvhRSqX8hfPt
      dhe7brj7kk0L3HaDc3PH6G28lplk1WropoBu8qL9QAVBxS57qA8EmIyP09+0jqVsEgSLxlAD
      z40N8OWP/w/y5RKZYoJsMUNzuAHD1NENg7995OssZZMEXN6riQCrR7GSxGX3UzYEXLYihmky
      tTRHR911L/liBAHN7KU20HNBq+NSDbDyxLMzZEvDFEoFZElGN018zjA1viYsy0W+IiGLFunC
      Kc7PJehvvolY2oVpVXuINT1NLB2nolfY1HI7C2m1WvIPtONz6GhGnOnlISpaCVGUOZeOMxGf
      obehgw1N3eimgSKpdEa3IIpOylqKM7NPUtbKuCw7rb6NYG/BNKGvaSdPnXmIA8OHefe1dzOb
      WGA0NoY/t0TPuiDx0hJFvcT9z3yTt2y5lVRhD2enypwfX+T27W6669sZnB7GqdpxhgLMlaux
      k90SEMUk2bKPuXLnZZ/1ZSFYPPHQl/j7L0XYdd3PcGAoiChrvLUri0N9gNC9Bf7qK+lqa5Is
      E65tQKuUgaqr+9B3vsL2625GtF3sdlW/28tldxHPunhp4K1IFh67jtNWYSE1Qjy9yBND5+hr
      7EGRg3RG+1b6OcpsbNnFcs6GYQm47K14nBaSYCFJFm7VYCmb5I5NN2BYV1EQvJoYQBQsTAvy
      pWW8znoqRYt0oSoqW0jFSRUvtwdQtShmUP0O3WqAqwJBZNmiNmDisFV17aVKgnNzJxAFk6JW
      Zi4RIxqoYUvrJjQT/E4NVS5ydu4QHruXWze+k8GpgxhmCqgFBEqaiG4oBFwhgq4k5+bPcnZu
      DL/Li2GaF0hwbddOMkWYTZwnnlnEaXPT27CDXMXF5z7zQW572/vYtqsdgMVsmGvWvQeHMs39
      z3wXv8uLS3VyYuI0pmXxju23kUwECUoJzs6fI+gMcX40TkXTSWcrBGvcJHJprmnfyKmpMbyu
      MJlcBVWRMEydctlcdSVeUd14Qy1cc80u7IHbeOBInl2dDhpDDyGKs9UNYkzrgkG32ex09V5z
      0Xs2OfzUQ9VvuLrI6rvtOuOxQbrqtzOXqqaY3aqOTS6SL80Tz8yylK4giRKtkVZUOUydP4rB
      evIVgXwFIp4Cn/vab/De3W9HlqSVnIqAYZoUKyVypQIehwu7TeUfnri/GiBfLWnQe+79GL/4
      61/kSoGqz6ExFnuc3obrmFp6lrbanWSLdhaSj1UnhL2WdLHtRxx5dfMniVFGFkbpbdxGSSuR
      Ky6SzCcYWZigomv0NXbR09CLJIVxKCUOnj3IptabKesSqqwzlxji8Eg1g9MVbcMwDcLeID31
      63DaHDw6eJBz82OIgvh/mXvzKLnO6uz3d86pea7q6u7qeZ5baqk1z5IlC8vGBg9gMDYEEsMX
      4ELIDeRbuRm4+UjyZV0SVnKBEJIwmNF4AmwLbCxZsqx56pZaPc9zVXXNc9UZ7h/Vkm1kY+yQ
      XO+1aqnVdeo9b5969zvsvZ/noaWigX1dO4lnjBQUEUGAE0eepKltLZXVTUCxDDoQmyQYX0RR
      FSRB4ux4Hxsb12A1FR2hpbwBj+amuaWWEyPnqNRXkIinqCgvZTG/RGtFI4F4CH80SI2pmkgs
      jsGgJyZFqXfUsuxfQaeTyMuvVZfU6XTFjLBaZCvQRAMOTzXLkasU1DzrGzrRiX4EoYCm6Sio
      Cvm8QjhqxmovcroKQE5+BSMej67gcHlQVPVGu6qWZ2x5gvbKVrIFmZW4n5GlCQw6PRWuMsoc
      Jeh1q4zQgo6BuUHW1HaQl1cLBwURg05HtpAhk8+yFA0gIJDOZYikYthMVqxGMxajmUp3MUqY
      lwvvoBXgTc4ABp3KhYkLrK/vRVVVCrIBuymHX4B4OoHbtv4/dX9B0PDaMsytnEUvGWirOkAg
      bsBulrGZ8gTjQWLpBCaDiXQ+w+Nnf4YkiNSXVdM/M8TJkQsY9QZCiQiVbh+hZISeug4WI37q
      SqtYDPs5PniG5vJ64tkkXTWtCAjEM0l+fvE5IskYqVyaWm8l3jYP/vw458+fIJlNU+etQhRE
      vA43Op0eTdPobVzLcizIyXMXWFvbxrnJPpLZFJvyPViNZo7Pnqajupml/DJXZ0coyDLX5kdx
      WOzk7QVsFgsFIcvY4jRWoxnBoaForzCTioKAYfVeeiQ0JAx6PaFklAuTz9FaUo/bbSRbWLhx
      LSgIFIW6JVHEbCiytGmrXKUAAgJitkCpw4vJAIqqEIiFODbYR5XHRzAepLqknqbydra27lvt
      w3U8RDF7PTg/wIM77yaTzxCMh/HHVoikk4iCiKwolDrLcdt8OC0evPbKG3gKRYnwv3/2Zf76
      /V9E03To3lF5gDdZiGRVYGf7Jox6E4qmkpNFUrlZrEYLqVx+lUz17ZlRp+CxBhmav0RLRTeJ
      XBWxtEC1J0r/zGnKHKW0Ve2j0bcPURCQVR2tlcUtkV6KkpcL/PzCr+ht6EZVVXwub/Hl9KKT
      9ERSUWq9lezr3kUs7VktySiazwMWg0KFM8vMyiTPXDxC0p4ilIxy27o9NJW3sBgxkbxexbq6
      u3ACNV6NNmcno7FBNA166jq4NjfKu3r2sKN1Iy8Nn6OzshkNjRZXLTXuClbSETRVw5wWsVgs
      UNVMqeQkFA3d/My1Isu2IAj4KnxMJZawGKw0lj7AX/zJB/mH/yWw8xbPTWv20nKaJx7fyv47
      /09WJ3gkUcVmVLCaZOLiChP+cVQUdKKETtSxpraT+rKdxFfL11eSRcyBSVExG2QS2SCzwUni
      mShLET8riQh2sx23tZy2ygYKOZVgNI2GAb3BhMVsxKAXySugl4o8ToLOyGcOfZSrsxeJJCNF
      Fr63PWp+x/Zm+7DrBK56SV0FSmvE036y+Rwd1VtXowZv/a4ea55EeoChhSDtVXtYSZnx2jLM
      Bi8QSRZYU7ODQOJVVOKiupocm+Dw5TNM+ueo9JRz75ZDTAZm+fxdn2A5WjzwZgt5apxVKKpA
      tpDn8lQ/kijhtLhxmCswGWwE41PMx1eYDWqYDU4+vPfjXDxznLv3vIsnLvyCsaVpPDYnJXYf
      Dksd6byJVFaHogkoGnznRydYu/Mh1tdOc2b2BG6bk6PXTjHhn+HQur0cHzpLJp9FLBERUyrp
      XAZZUZgdWaRQKFC7sZX+/n68Xi+G11HmtFqtmN02rgUn6Shv5D8eOY5Yu45cQUHTJDRNe+3c
      JRTnMovZgMNcwKzLk8kHCMZniaVyCIiIBYHWul5ysgVJ1BhZeJHNzduIZfKY9csoSpBYMsJi
      LgNAXpYpd1XSU9fB2fEL3L3lQ8QzZhS1OLBlNci5qeN4bR7ScppcPE9eLiAKAnpJj8lgRFUl
      JMGGxeBGog6H1EYwnn3nOMCbeYAoFPeSmXwMm8mFzaiwHMmjqAqJrOUt30wSNXzOBJcmX6St
      sgOLaS05WcOsG2FofoqWim6yhUoWosXwm14qUoGHEsM8e/EkiWyKMkcJuzs201BWg8fmIpKK
      88jxJ9jauoWWih3EMyYyeQmnrcio7HPmQItx9Npp5kOnKXN6kRWZcqcXu9lGhbsCf3Qag0/H
      +ekrFBSZ9qp12Ew+4plZxpdOI4oiBp2FutJOcrIFi1nPdADOPv8M//PT7yYtFfjllZcYnB+j
      b2aQT+x/gGcuHUERNBKJBBXuUvoXhtm6cytaXmWxEOZb3/oWbW1t3HfffTfESERRpKKykunE
      IpmMQqengcWZBZaW/VTVgslk5rmjWfoHVhAEsJjNtDQ3U1+/hrxQQefmAgsrx5BECZe1hOqS
      Tgw6G7Kica3/JEp1nnh6nqnAOHOhBXJyHp2ow2Pz4LKWUeFuRC8ZUVQBVQMBldGlK5gNJsaX
      +sgrOTRVRRAEcoU8sqogiBZqPHWUO22cGzERiIoEYhCMakSSGumsRk7WcFgEOmoEWquM7xQH
      KKbVs7kcb5it1WQUTWUmOIfXXoeihklkUtSXNhGIqWhaDkEQMOj1byLUXVREFBjj2tw06xv2
      kMzZsBpC9E2foa60gZaKA4SSejSKWWeXOc5c6Co/P/8SmqbR7Kunq6aVdXWdzKwsML48jdlg
      5cCadzPhv4LbWk4gbsWgUyl35sgX/CyEx1kMyeh1JjY1beWWLheqphBJzeNfrZeZCS5i0uux
      m23odTo2NKwBCmhaHquxkbqyJswGhXwhzND8eURB474P9ICWYNrVQyadRi7IPLTpLq4Exjg+
      dJa/fOwf2di4lhdHzrK9cR0XT53H01zKUipEi7cOYSWMz+fj8OHD3HrrrbhcLmw2G0aXhWsr
      E3T6mogGwiyFlm4cWAWgs3sDd3/o4+iFHHklTKoQIaPkGA4JlNidbGtrQBD0xDPF89NSZIR4
      Jo6iqIglAuP+K1R5fJgNRh7e/wCyAtFUknAqQTQVwB+bWQXSq4iCSDKbthggMQAAIABJREFU
      JhAPsbl5K25rOaJgIS8X4aAFBX7++LeYKFTx8F3w7OXvYVQ/zvGrKkY9VHgENrSINPhknLZl
      Aolhrs2N8OiFkXdIFOgn78Pe9jDe8to3vO7zH11LVd0KAFq6how0iSAozE96+dqPRwHwum38
      xWfvxGx+feSWwHXAyhnMBgvl7nXoJZnB+VPYTRZ87nWEk1ZkVcBukrGbYpwbP87xwdO4rE56
      attp8tXhMNsZnB9bxaE2otdVEcsYkBWBGk+CS1PHaSxrZiowhUGno9xZis9diVFnIpyKMhuc
      IVdII4oS5c5KLKZKZKXINCeJGs88+hV27d1HVU016XwIf3QBDRUBAZ1koNThw+sox6wXyebi
      TK3MksikkESRclsJJvQosoLebOCX107w7OWjrKltZ3trLyWSA4fbyenxy7xv6+30TQ/y6Ncf
      4cknn+Qb3/gGa9auYTqxhNlgpszgJOAPoKoqkiRhtVqZmo9Q1dyJP3oNvUFEFEVK7R58rlIA
      poPzhJOxG2Fto96Az1WK2+rAqDOwkogQiIfIywWS2RTBeIi60mp0oh672YHF6EQv2dDrbGia
      gZws4jDnuTR5lLV1+1iM/nqOABBU/t9//ioBwx3cttXOHVtWmFgsx6gvoDDNVHCAgblhhhfH
      SWbT+Fyl9NR10FXd+c5YAURJj9frxWXlDbdCTot04y1fiYnpmIJeMnDhahCnGUZmImTSWZQ3
      UKc06RWcpiUG5/rpqlmPKLoIxgZZii7RWb2ZeLaElYSI21pAVuY5du0FLk9fo85bxZ0bDlDr
      rSIYDzEfWsbnlljXcIBIykC6IGATFTzWCCvxKa7MBCnIMkMLQ9y5YT+hRJz58AKXJi8hCiIO
      SwkN5WvIFSwkczqSeYnkq1gkRQlOn7mAq6IDg3sDUI7L3l7MJBsUDDqZUGKe4YUrpHNJjDoD
      ep0en6uUMkcJS9EAS4kggiDi1Gzcv/XdHFq/lz9+5EuML02zq2Mz7664hXgmyUoiDKrG7Ows
      Bw8epLGzhYGVCbp8LaQicdKFNL4KHzlkwpkYS7kI5kqBcHoIr8tJJp8lV8izEF5mPrSEiobD
      ZKPE5iKVS6NoKgKwHA0SiEXQ60w4LR5I6FjX3sPZ8VPctv5+wknzDba+ePa1g9uoU4ilrtJY
      1spy7PUTZFaTzPvf3YvJk6dAH09fusaV2WFGFycx6Y00lNewrq6TW9ccxG5sJRx3oAFltndI
      FEinE/irT+/gXTub3vgiLcelqRCZfJbyMj1nZle4ff0t7Pi/SskXFO7+1FMsBLKv90FKbHki
      iT6mE0k2Ne8knonSP/kLumvW0uRbSzgl4bLkyOWGeOLMUWaCC3TXtvHB7XdiM1lZjgVZCPtp
      9q2jzOWgIIvk5SI9+FJ0Cn8kgdVopr2yiWZfFTPBBY4PneWpc89R662l1FGL29ZDKlfUH16I
      vLVybVkRSdxI4gG0YTG1UuJU6T/7AlVNa4lkJkllZollk8iKjCiKLOUCzEWWsBot3L5uL7Wl
      VXzn2GMMzo+xr2sbJ4bPU+Pw8d6730vt+haSapb9XdsJRFYIkSSeTREKhknnsnhsLiRRJJ5J
      kivkcVrsuK3OYs2/IGLQG7GZ7NhMHnSSlTLBjKIZipSUikhBFlA1gWRW5Xs//C6f+SMvDosT
      f8zyhlrMAhouS5CxpTg280ZUrXgWs5lkTLqimufg/DWuzg3SN32NUCKK1Wimu7aNPR3beGjn
      R1DkOqaWTUwsaCwsQm+LRqV3jqHF80ysRN8ZDiAg4LAaKCt5PTRX0ZZXkkiihFFvYMI/jdlg
      orrUh9FoJJdX0Es3P0SdqOK1hRmYO01HVQstFU1cmDyDw+ykt/EO4hkdDnOGxfBFnjxzjMVI
      gHf17Ka3oRtJLNYNlTpqWFu3noIsAAUyubEizC6fw2mx01XdxFIkyEoiTP/sEHrJSIW7gfu3
      P8SF8eP43D2roP3f7RNTVIF0TuSlM4M4whtZuPAsn3xoNyVmKxaLBYvViiKo+BMrFDSZpWiQ
      2ZVF2quaGZwf49+O/ohyp5c7NxzA0OQmkUvRNzvEv77wA2RFKW5bbE5KbG5aKuqxGMyImkBe
      L2BzdbE81U93506y+eucqwIFVSCS/s3OrQGbN65jNjxBR/Xu36js6LXnGJq/wI72XcTSSdK5
      aSaXx7kw0c+FyStE0wnqvVX01Hfy4I578djayGQrGJ4TOXtV5akwVHsFtrbDoc3LzITOMxeL
      gK6Kdt8+rk653hkOAG8eBk1m08iqjMviYHhxghZfPXr9G8X+i+SwqjLK2PI8uzs2M7I4ydjy
      FJ3VW8gUbIhCkpnAKZ6++Dw2k5VdHZuQVmPSblsJle5WBEFPXk6zGO4nlY0BUOkuo8pTwVxo
      iZVEhGQ2u0rO1EgmbyKVk4ikBWIZaK/qYT50EYdlG+nfIMD3uzJVVclkMmQyGUKhYlxfEAQq
      y8vZ1tpLR2kD6XyW5Lo0Q8uTfOWZf+dvZ7+2Ktqno660iubyOircZbisTiwGE2aDCYNOX3w2
      gohsUJDVECVlVkSimPQiJr2EgISGCEgIgriKFxCKFZ+agKIJqCooqsaW7d0kChFiGQviqjoN
      WhFkY9arWIwFBBKcH3+JkcUxnr10lJHFSVK5DD53KVua1vE/3/MZGn1tiIKLrGzgn776HaYV
      G6IePHaVbR0CDx2IMRe5wMzKLGq4jIbSrSCXcuSCxlIIBOEdsgV6M9M0jXQuQ66Qx+V1MOmf
      5Y4NtyCKN88ekgDljiSjiycpd3lpKq/jxPB5OqrWUOXpIZOP8PLgz/jV1ROsb+hiT+cWrEYL
      TouT9qp2zAYH4WSEkYULqCgYdQZsJgsFWU86nyUYD+O0ltJQtoFswUQypyOSvrkfqgapfCVo
      05j1c2Tydf8poq63a5qmkc1mEQWBYCDIY489xq0Hb2UlGWZz8zouTw+ssusZGJwbYzowT3tV
      E2tr27EaLavl12ZK7G5cFgeSUSOenSBbyLE0PoesKiir0SFZkVE1DUkUKSgFNK2YUS7qEIBe
      0oMA1+bG6K5pxWIIYdCbMOpMmI0W/JEAQ/PDXJkbYXJ5hqycp7umld6Gbu7ffifNvjpKbCXE
      MjoS2SJaTVUFVMDrsdJco2dtS5qV1DkWI/MMLdloKd+EktvPmWvwRKBIJyMKsKlNYFvnyjvJ
      AW5eAzRNI5PJkE6nSWaKWNNALESTrx6Pw33T9U01dsqc8wzND9NZ3crQwhiaprGzfRezKwv8
      9PzPuDDRT0d1C3duOIDL4qCrppVSh4fl6ApXZq8UMaqSDkkUURXIFQpYjDpqvGtQVDuJbJHO
      cDH65oM5nddRVbKBq7MvsKa2DH/8rSuZ/y6sUCigiCqLi4vMz88zlQ8wujTF/33fH/GH//Hn
      vG/bHcTScUodJVyZHebI1ZNM+meLFIKNa2jx1aNqGqFEhNwqKkvVNNxWJ6UODy6LBwk9qWSG
      SDhEJBLA7q6nqq6douKJhijImA0ykeQi5c5SHGYb58f7OTV2iaH5MYAigW1VM7vbN9NYVktt
      SQV6SYesqYwtTzEZmEVRiywW0qoaqKpppPMZSjs1IslH+PoLg2xv20BXTSsWgwmBBD7vOPfu
      MYNmQsSIKGaZi17CYCh75zjAq4OxmqYRi8V49NFHOXv2LE6nk93vOYAkSowuT7GurhOd7pWu
      C8Dv3dNBdV2aUHIOu9nG+PI0uzu2cHV2mL976h8IxEPUlFTw/u13UuUup7WigfHlGQbnRwGB
      nJzDarSgahomgxWvvQ6dVEIiW2Qd8Mff3sANJCx0Vq9nduUcbtvO14Dm/7tMlmUkk0hVfT13
      Pfx+/vXFH/HPD/0V0VCE+rIaLAYzVqMZq9HCluZ1/OGtD3Ji+BynRi5yZvQyPzjxFGVOL7va
      N7GrfTOd1S0k4kkU5kjIASYDAVK5IgObqiroXDoi2iyWhIDH5kMUJWaDowwvDvHitdMEYitE
      UjGayutor2ri7k3vwiU6KHHU4S2tZj50mY21vfzxJz/DRz/5V2zetBeEopifKGo4zTI2U5pz
      Y5fpmxlEEiXafW2oSivbmjTMRgWdlEevK6DXFcjJWbL5EEvRAH3Tg3TXtiEJIsMLE+8cB7i+
      AGiaxszMDJ/5zGdQVZW/+Zu/oaGhgdOjl4inkwzMjtBhrSUej+N0OlFVlXA8hK18Dk20E07G
      2Ny8joHZEb7w/b8lmUuzuamH/Wt20FhWSzAeYi60xODCOEadHpvJisPioM3TgyR6SOUMpHIS
      oRT8LmZrTRNI5arQS7OYdLNkCg1vQ371P2e5XA6Tw8xCNsRXfvktPv/uj7M8vYDZbGZLcw+n
      Ri/yuYMf5fRUH2tr2zk7dpmNjWvZ0djLSGCaxYif/tkhLk0N8OipZzAZjOxo28jOtnVsbrHT
      WR1apUXxks63EYgluTw9yDePfIuLkwOIq+LgFqMZvaTjYM8ubunaTl1pNZJoJ5LS85Mf/Cs7
      99ViL4TJFnLUVqzhox/7BA01HmymLJomAyqprJ8nrrzEdGCWdfWd3NazF01TSaQzpPKzCIJK
      TlFIF2RktYCqKcTTCRRVYcI/w/qGbgRgPryEor6DzgDXF4BUKsXnP/95BgcH+cUvfkFLSwuq
      qiKrCjMrC3RUNfNnf/Zn3Hrrrfzpn/4pV6aGGJwfRRSKeruLYT9//uMiu8Qd6/dRYnejaRoj
      S5NcmRmmpaKeCncZzcYSHJbqGwfX67U+/xWWKUj43BsYmH2e9Q0VLER+11Gh32xms5lAMs5f
      Pf4Vbl+/D31E5ftPfB+Px8O7P3IvBUVmJRFmfVUHF6avcUv3Nq7ODqMTddQ7KuiqbGZLyzom
      /bNMBecoyDIvj5znb546i0lvoMlXjwAY9UbmQ99iLrREQSlQ7vSyvbWXpvI6qjw+xpanaC6v
      I5gI87OLLxBPJ9BLOupLqylb5+K5kR/jP7fCuvpOgvEQ9mYLK+o0g30XOTV6EZfFwfqGLupL
      q+iubgNEoukMep2JVEpBxoWGEUWVEAUDpU4/RwdeZHfHVhLJVvZ1GkgX5pjwz/KR3fcSTsXe
      GQ6grRZDa5rGT3/6U55++mk++clP0tTUhKIoxFMJVuJhBuZG+JM7H+Z41WE8JR4eP/ksoWQU
      j83J+PIM33/5KZrK69jbuRVJkhhenKTUUUKtt4ptrdspsRcpEZNZHemCQPpN5Dx/lxZMmOiu
      2cTIwkl87r0kc6/36IvHZJPJhF4voROLgh0Cq+B+ofivKLKKcIJtG1pxVImknJuorq5GEIVV
      EIjCavEoy8kV/vbRr2PWm7hzwwFUWeGjn/sEBUVmwj+DzWThycvPs6amHVmV+Ydn/m2Vxj1E
      Jp+j2uPDoDMgCAJWo4WYkqDF10CLrwG72caZ0UuMLU8jiRJeu4s9nVtYU9tGhauMGm8lbouD
      cCpGfWkNFe5WRgb7ObTu/QhiETetaQIGKctkoB+byUIsnWB8eYb+6UG8Dg9jy9Ps797OuvpO
      vHYfGi4KirHIVSpLqJrGd773dZb1d6AzvoIyu39POWuq93D2WhM9TXHG/VexGj2sr9vCxalL
      GKS3AYmcnx4nnMjR0trExPAwbl8tJi3FfKDIDap/uxOppiHLMt/97neRZZndu3ejKAqPnXyG
      bzz/A/yxFYx6AydHLvLHf/4Fnuk/yvzcCNF0HH90BbPBRFd1643IUHtlO9taD6LhIJXVkS2I
      bzkB9UYmrPLqiKvaZaKgrb5e53ciN94zG5xYjUbM+hm89nIUNU+ukCMvZynIWXJyjkIhz0c+
      fQ+aVGAh9CyqqqBoMqIgrtbFFBFOoigiIOBqEFC1Y1hrNS77hxGEYi2+XtIjiSLTwXm+c+xx
      rCYzH9xxF3K+gEGnx6QzICJiqTLRWFbLzy/8is0Na8mkMmyqXUP/wjAf3nEP0ViUweAk1SU+
      7Jj58c9O4W65nwb1eRo67eQ0gZ66Dp7vf4kyZwnxTJJmXz2qqjK2PI1ep2c5GuTi5FXW13eR
      l0cxmnWIgo5MQU+uIKIhYNEHyRZyxFJxrs6N4LY5+eje91HtqcNoNJHJxwgno0wFJlhJhFFU
      tRio0MBrL+NjD20kr1oIJiRSmeJ+QlUtSDTR0XAJk8lAV/U6ZoMRzk+eZHPTOpZCzrdeC6Qo
      CkszY8SjOcq71hCcHAEEmupKmAkKNNZ4GJrJ88l//u1rgQZ+9iG+/6Ofs2djGWvXriUYDHLy
      5ElCQpLPffevb4TZrptBp6fa42MpGmRdfScdVc10VLZhE6qorKgjKxvI5IvoKuHXByOvHZSi
      qAEqaMWBpmkKippH0xRUVUbVCuTlHLKSJy/nULUCmqZSUIoA64JSuBH+uwHrWSXLvF7IBUXW
      BFlRVhUkJ2irbLyxLzbpjcVBaTBi0hkx6Y3Fn/VG9JLuVUeRIunkdUJfVRNIJpMoool0IoTL
      YaYgy0WnUVXC2Tife+SvaSirpdZbydaW9dQ5K1abKlIZ6gx6BhfHODN2mfs2H8IoFWf6giZz
      aWqA9bVd6A16hhbGyBUKVLsqESQTSiGF0aRDEnWcGr3EZGCWbS3rCSdjPNd/nOqSCtbWtjMw
      N4rdbKPU4aHeW0VOLjDhnyGdy9xgc0hkkvTPDBFJxeiqbmVtbTuSJKGuOnpxMKs3hb0VtVhq
      sZKIMLuygFFvpKakgkw+y8zKAtFUHFEQaSqvxecqZWRxsrgiWZ3oJOntnAE0FmbGkWxleLXg
      W/vom7YMkUiEfD6PwWBAkiQeP3X4psEPRSjbZGAOgEBsha7qVlRVYy41RiA3XpxJ5TyZfLao
      QqLIaGjk5QKSKK1yxsuoq8SwebmAXtKhakVSVm11AOtXeS8lQcRkKA5Gg86ATpIQBAGjzlis
      Odfp0b3OF6YXdTeKwgShmBTSSRINpdXMh5ZoLK8lkUmSyCRvvF9kbSs6i04qJs+u//zqtm68
      r4Gqaeh1OggW35NEkangPN89/jhratrIywV2tG1keGFiNcRbbFdTNcS0wFI0yPr6Lp48/xwH
      u/egyEWoYnNZI+enr7C1qZcyow/MMB4cp6umFYNoJREP4PCUkMym+Piuu0jEgpRYHeS7tjG8
      OMkdvftprWjkV1dO4DDbiGdTmPTG4hZVlDgzdolALISsyty38RAWi4V0LoOqqRh1Blw2Bw2l
      NRh0ZnKyRConkckXVwz1RtCkyHR3+PBhgmwga7Jw19Y8F6cuYDeVYTZYCadmOTN6mVpvJU6L
      naI8rYFyZ/lbd4BkIo2aXqahqZ6p4Ss3tkCD4wE6u7sQ354WBRpF8MV1z1dVlWQ2/aafm/DP
      MuEv0nwICDgtdsxGExWuUiRRh04sQvn0kh6H2YbNbMWmt+Ky2DEZTJj0htVBrStyzUs6DDo9
      ZoMJvaRDL+kxG4yIooi0qk4oCiI6SboxkABUTSWcjCIK5auyR8WZ+vryej3yc329XY5epMLl
      RaOumCVd/b0gwI+//Y/0bt1DY+vGG9ff+Pyr2hBEgScefQRHw90oqkqhkMNtVdnatcK/H/0x
      +7u3E03FeXj/HxKOeWmtUHnymz+mv7//xr127NjJvvffxvqaDl4aOks208DhcwXQwOM08Z5d
      NQQTk0zM1TI0L3Fg8zqyhT5yWp541IzdbqbE5mJhycrUXBK7zc7t6x5iT+cs/3bkh3RWt/CB
      HXdS563im0d+xEJ4maVokM6qZtorm6hwlyMKAk9/5wmWwzIf/cTnaayrxCjlmZq9yrnYNXRS
      cW3NF/J47B4c5nLMhlLyioFsQSCniAyNLbFjn0Zt1SCXplJI6jbm/QK1vmFkRaC19A8ZmlXx
      eQSqvQIeS4ZEduytOoBIZ88r2NvunnWrP3ko8b21lm42DbfbjcPhIBwOk06n2di4hktTA2+h
      BY1oOk40HV9NgG1aVUN0UmL3ABoFWSavFEjl0mTzOfKyTF4uijYoqoqsyOQVGU3TkJWiouJ1
      oHix6MtQhPFJOkx6A1ajBYNOT66Q5/krJ/iLe/8CRTWgamKxBEAtlgKoq6UBqgaKJtBYvpbz
      40dZW19FIGrhBpOdBOcu9FFSswZvzW+GeYoiLPkjZD1gNHuwmVU2dk7wr0e/TX1pNQ6znY2N
      vVybbcZiyONxgNdbgsXyShQqGAygaSrLS8u0VTZhd0YoKesp9hV48arKzs4Mna0BjI4tnJvQ
      4XNvo6eiD9HrZzQ8xsamDQhiL+7KYpuxAjjNDv7gFht/8v0vUeXuQ9U01tS28cCOewhHoszE
      5liOBujrO0ZPXTs77tuP1+BhZXGYx868SCiSpLyijh1778Bs1GFaVZ9R1DiJjJ/ZlVH0UvEA
      XJBV7v9ACwWu0ljeysXREly2NFbbBUShleOX2hiYUW6MEocFPnVXgecHjr/WAdIRP6GCgZqy
      m7Os/6W2qqhgMBg4dOgQX/va17h27Rrvue1Wzo730T8z9JabXI4GefzMYQBMeiNdNa1sbuqh
      vqwao86ATpCwmayY9EbMBhMOsxWnxYHZaEfTJGRVQFGKA/Y6qFpVC+TkDNl8moKSI5PPkC2k
      i+IOkpH7thxicP48GsUt0HVdYgGKe25NRSdKiILINy+e4RMHHmBg7hQ+9z4S2f9cQM5qVNnT
      NclT534AmsaWlvVMBeZwmA5weVJPtStJiVPE7X7tdxsIBNAhsRRcpqe8lfMTJ6kp6WY6WOxP
      NC1yfqydDc0DtFReJi/3Mh8SOf30Yf7x7z7HXz36RZp9zdjNBVJ5HW5Lnry8xOWps5wd6+NA
      9w4Wwst8+raPMBfyMzA3iMfsYmvLLsaWrtLbsI6RxVHCqRgzKwt47W66d/ioLWnCYW0gmi7K
      IBVVQPWABSjH6+zGbSngtMQ4PngKi86GKJgZXhwjUTjFxEyIPZ1byOaMbGwVKHcLzAQ0cgX4
      0C1RXhp5gv2dv/daBzDaXCyeeZmXXgjgKa/i1n270f3XhcdfYxpFGN6DDz7Io48+yvPPP8/k
      5CT/6+Ofo39phO+99CR6Sc/I4sQNbazf1rKFHBcnr9I3PUidt4o9nVu4de0uGspqSGVV4pkc
      qVyCcGqReDqORvHcUTwvKBh0JhxmFx5bGZJoxmSwY9B0GPQiFkVAEjVyheKML7wqYykKGpL4
      yv8lUVvlwilwYI2DRLYch9mPoE0gCa0obzNBZjVq7Oue5ci1nzIdnOfTt32Yw5eP8d6NH+Hw
      pSJXUjRRpDH8dQfI5XLoZZGCQWBxfJbp9Bz3bUkzHXxFYtYfk7gy3UV37UXW1g+QLXQyJquE
      kiHW1LbjMJsYnD+MrCiMLk/gc5axpWU9dpOV7tpbgSj/fvS7fGD7+yhzdrPov8rJkRdZigR5
      76a7KXWuAWRiqSmuzl5hKjDH6OIklZ5y7GY77ZXr0PASTeuR1eIzdppzBGJXGF2Msr5hD996
      5DAHD+4hkr9MfWk3Vl0NsUQCmyWC2zWJ163R0wqpbJ6nL5/is7f/Acev2F7rANl4kLlggl23
      HKSixMnbVTt6O3adxXfDhg184Qtf4Mtf/jLT09N8+tOf5t7tt3NtbpQypxevw0M2n72xKmQL
      ud/6HoqqMBmYZTIwy7ePPUZjWQ23dG9nW+s2Sp2tSFkjep2IdJ2wVdJuMBonMiGWovPkC2kU
      rQDa9eyFwNnxPt6z8f0kcnW/ZU/MiNIGVpJQau/h2twv6amrZClm460eoJx2M4c2hjgz/jx9
      09f483s+w1Pnfsm71h7g3Fj1DaG7dCZHJpvD5XLd1EY8HMNW6ebFo4/Se88ekrkrGHQ7yMuv
      9GU+pMNs6KXGe4bNLWMYtnVwfvw0mqbxswu/wqDT47G6eGDHexHFWmKpcWq89fjjRqCcD+36
      KN976Vvcs+m9KGnQSTres+luJgMjJLIJ6r0tOCwtbGpuw2osMBO8yvBiMTI0sjhBlaecMkcp
      DeXdZPNpRhev0VTeic28kUxB5bZDTYTSfRiETXzzGR2RJIADSXRQ6qxj9xqRDW2zPDd9jNvX
      3cPwwjRlJfnXOoDZVcE9d79nVfDg/x+TJIlPfepTWK1WvvKVr/D1r3+dBx98EIfZhqoq7Gjd
      wPDiBMlsGrfVgdvm4vn+l5AkiUwu85aEZiYDc0wefZRvH3ucWm8lezu3saV5MxXudpI5C7GM
      tHr4LDIai1IDFl2RGcIgaRj1KnpJwWL0Iohvb9sYTBjoqdvO6OIpKktuIVX47elddJLKgx/c
      xaX5UxwbPMNf3vdZzo730VLRQDTVi/9VqvLpTBZV0bDZbTe1E1haxlzpJJlM0Whr5NzkKZrK
      tzC0cL0vGobVaGyFu41f9P2EpD3NmavT/P6+D1FV0kU6b8Ook5kPX0BVF0nlUrRU7iedKI6l
      QLyUD+/+OI+dfoTqkgo2NW1nIVqGxVRKrTdLLD3J0PwRyl3lGPWtOG0b2da6AasxyUxwgNGl
      MaaD8xy+fISa1e/KZPBiJM3Iwml0mBie3MSxAYlXBw4VFZxWgbqKUZ69dJI1lQ/x1Z+K6HVF
      rPBrHECUJJYmr3H8/DXMdg+3v+sA+v/6Mvbrz/iGmUwmHn74YW6//XZOnDjB+Pg4LquDvCzT
      UtHAk+d+yb1bDvHMpSOUu0r5/Vvu58zYJTY19XBk4CTxdJJA/GaemzcyRVWYCswxFZjj28d+
      QpWnnN0dW9jZvpNabxeJrLnIy7NKRaKoEnkZkquLjyCuJ575DX+aphVrWd4g5RKMO3Ba3KCN
      IwnNxSpHVUFV828IlNBJAk7jMufmBnjx2ik+e/vH8EdXSGZTrKm5g8MXXysUnk5nMQpGVJ18
      U1sL8wtUr2/G56tg0a8nmU3RUB5nZNFDXalMe1WGrDzI1dlLPHU+Q299LyuJQBE3YN+CP14c
      Rgl0OK1biaVOsRwN0lYZwSCVk1eK28NA3M1dG2/jm0e+R0NZE2ZjJem8xFLMgiB00VzRCvgZ
      WzqNoqo0la8lJ5fic2+hxlvBxYnLtFc2MRWY4/Dlo0jiMTK5LLevPSl9AAAgAElEQVSt20tk
      Sc/YfAFVfe2AXdcosGf9IMOLQ9S5Psy/HhaQFcjkIZ7Wbo4CZXN52rt6cDqsvA7I6r/Mfv17
      liSJmpoaHnjgAQqFAj898xzBeIhQMsK7e29hwj/DhsY1q7w5Lu7ZfIinL77A/dvuREPDajTT
      Nz3IscEzhJOxG9q7v40thP386OTP+fGppyl3ermlazu7O3bhtNZRUJzkFQOqejOT9BtZNBLg
      6C8fw2B8Y8Tb2o4a7NUrOEmDqOdqXz/LS6/vxBaznoP7u7kUHOPU6EXu2nArXruHZy4dYWfb
      Lbw85L2pb5oGFDQUvVakO5RfcYT5+Xm2ALV1dcyGDPR2rcEfP8PBdbVcm7/Ai4NRmn1tbGy8
      l7kVN8tRAVX7MTpRwqzz44/ryWSLM4Cj2k4kGeWWjoOM+a/htftxmFpJ5sx4bAnGl6Z4aMM9
      HBs9w5YWBaupl1Reh6YJq9pr1fhcFTjMKVbiw4z7X8ZiMOOyOtjccjvhlIkNjTFOjbzAUjSE
      TtJzevQSFpOZA1tnqHJt5vSQwMCUiQafRm/7RUaXZnAb7uUHR7Ub4WaApgpudoCqugbGjp8k
      X9lE/RuTNPxO7dWx7VfbdXoTQRCwm6yMLk1S7angPZsO8j9/+Pc8tOtuoqk4K4kwqqZy35ZD
      zIaWODF8jk8efIjehm4+tu9+xpanODF0nkBshSuzQ0RS8d+uX5rGcjTID0/+jB+e/BkCAo3l
      tezt3Mq21h343G1EU3pSeYnftHdPxsMIehc9O+9De53E3nWr9shMB1/kS3//NUYXi8wWqUSI
      08//A3Z7cWYrKanmjjtuYS4yzdMXX+Dh/R+k2uPj6YtH2NqylYsT3cReB6ADkE/mEUuKxXGJ
      xCuZ+kKhgKSJ7D60j2sLY4wtLXBx6ip/dd9fUlfyQTJZPQMzIgMzxaTTofVxTowE+b3tbYys
      DOK2GtAlvoUgQDD+IE1uie/96FFuv+ezuCwRBmaP0OxrZmh+nO6a3XzpS/+b/+OPvkAweZH+
      me9ysOeBV2ElhNVgQJ7lWJAWXxulzkYWw0MML5xALxkIRvNsa7uD5ZgZi0HFakwxMnuW8eAE
      E/5H0ekkDm6t4OrsMF7HrcTj7+PxE8qvDX6B9+8bv9kBxoYH6Ni4i+mBs+TkdkzviHK5ohUU
      GZPBSF4usH/NDn519WV+f9/7+drz32M+tIzTbKfWW8mHdr6Xv/vp1/njO/6AqcAsJr2Rzx76
      KP0zQxxYuxOjzsDLIxc4OXyBUDLyW99fQ2PCP8OEf4ZvH3uMmpIKbunewc72nZTYm0hkzWTy
      ry/ELQgCoiCiiW/sKONLIm1VawmnruC2bSSWFsmkkuxcf4EHHqhFVcqYCq5nMjjHM5eOcu+m
      d9HgruYXA8epK60mkuwl+BswtisrIeqqq1eL7fRs3LiR7t61RKQ0R4dOYzdb2d12gPaqu4B/
      oSDDqRHjjTAwFGkGE9l+mry1LC/+iD3rt/Or/iba136MUkeeF67kKPedQRLdyIrIcszDmtoD
      XJg8vMorJCKJAvGsDp9nD5Ko5xeXv8cdvR8imLBQYsuwGL5MNFlgTe0eAnErS1GBSncnyeyZ
      1cx+gWBsGK+thVjGij9u59Efj1PZfgf7N5pAuspXn3uESnc5xwfPUOed59N315JKNXJ2RMdM
      QOP+vWEKSgHpi1/84hdf/ZAcNisXz53F5q2ltrL0bVXEB6Myz57Nv/mFQCEbITD8JHe+9346
      mkpRVe2ml6IoTPvnmA4ucEfvLQzMjbKpuYeXhs7ic5XRWFZDMpemb3qQ5op6BEHgzg37+cdn
      /x2nxc76hm4uTl6lyVdPXWkDkWSYzuoWPnXbh1lf34lBZyAQC72liJKGRiydoG/6Gj+/8AvO
      jp9A05ap8xqpdDtRVOGGwFw8usLi4hJVdV2/uU1NoKBY0ekW8bl0hBI2kokYdulZNm9sZSp4
      H3OhLM9deYlNTd3ctqaV5wb6sBot1Jbs5sSg/Q23ZZmEH6s8RGldKXu27KS2t4WgIUVMTVPj
      KGdv62aMehNHzpcxE61gZ7uRgfnzWAxrSWZfcarmCpnJ4DM40wYM0kVamsLUeV2cHDYyvJhj
      e5sNSX2OC1eqaWzbDhpYjRFSuQjdtT2MLl5kY3cHFns12YIJp6WaUgccGThMW4WN0aWLNJR1
      oNd3EU6ZMOo1nKY5Lk+/THtlDyZjD+XOJvSSzEzwCnl5Dp/TRGglTt9COb2tGqfHn+dD2x+m
      yrUThzXPQniB/pl+cuokXQ1RdnXneLbvKSrtt7/WAZLBWc72DbK05CeZydHW0vK2zgFv1QGW
      rj1BmE5OX17imWMTPPtrr7mlOJ7SHAvhZXa2b2R4cYKVZSsOh8Lp0Ut8YPudDM6PsaaunZ+c
      foadbRsJxsN8eNe9PH7mMBenBrh3y23MhhYJRAN01/Zi1Fs5M3qO6pJK3tWzj/dtvYfehi6M
      eh0r8TCZ/OtRrLyxRVNx+qYHefrSL3l5+AgCfuq8BsocdpLJJHMLfipqOl7/GRRyxKMBspk4
      0ViSUpuTQGqAalc5gyPTuPRXMZf+HlP+DKfHLlFqd/Oxfc2cHo+RLcg0lHXw0mA9ucLNX5ZB
      p9FYLrOtS8FaluP5qy8RkZNUOctwJHUMvtzHM0/8HJvVhqPSQzpXTzJvo73KzfHBp9jetp3p
      gJ7i9kRjS0uM+dAV+l+8THdnnMYGMzpxFq99O7+4PMCm5jKQr3DhSgWNbdvxWHOMLL5MZ/Uu
      /PFSar2VBNJTmA0pXNYScopEmUOPP7rAr64c596t97Ec85GXRcocGULxc4RTK7RX72UlUUJB
      KSbFsrILj60en8vLQngYb4XAnnUKR4ee5OCae/jGMyUcu6JncqGGem8Pezp70OuzDC2McWrk
      HLIiU+bKvdYB9BYHciZK7/ZbMMpJPOWVbysR9lYdYHHwcWYSTQyMhrkyHLzpZdCJdHVJrCQj
      1LjqCadDXLqco6XWSyjtJ19Q6K5Yz8tjpzi0bi9fe+4R3rPpIKNLU3xk7730TQ9y+PJRtrX2
      0lBazZmxszitHurL1pOXU/zZD7/Elpb9aEI7m5q3c++W29nc3I5Rr8cfXXlLKwOwujIM8vTF
      X3J2/CWs1iy7ejupKy9FliFXgFfODAIzY2cJDH0Bl/4IpH5JfOUIazu2EkwtI0ReoKHrXlbS
      GmPLU6wkwvyPfe3Mh8yMLPvx2j0shnpZjLxWvLumRGFnR4ZKTx/TK08zE7pCtddHQ1k1trDA
      d/7lPzh96jR+vx9VVXE6ndR1NCGI9awkjGQLAlbTGD6XiZlgJSBgM2nYLacod1bw6Pef5da9
      Io0NZlTNy5mxBvZ29vLyyCIVzvX0X4vQ3rmJRPoyla5qwilfUYUzI3Hl5CkamyuLypvKEvFM
      iJ6G3bRV1vPEmSfZ1tqOSR/nyvSLNJS1YDT0EE0bee05SyCviCSyRhyWSkrtGj869STdNW0Y
      dDo6a0pJZATmV2BsUePEgI4yRx0bWwR66jZgNkqcn+j/tTOApjLQfwl1dIGa+mYM/11RoHyI
      HY1TPPyZv0WUbo67+twC8dxZjDoDiXwWl8XFbft9GPSl1OVmuTDVT8u2bu7oPchLgyf5yJ57
      +dunvsZfv/+POTF0nj+58+P8+OTT/P3PvsH7tt7OwZ499E8PMh+aorN6M1/64P9DPGNDVsXV
      SIQbm3kfD+7eyf+4NcvI4kWOXXuZE8PnCSejv/WfpcGN8Op3eZwabyX7u3ewtWUHVkMT/piB
      eFpCVfLcecjIvls8N6IBqvIi4YEDtG2+g2Q2TSKTpG9mkH/6vXchKzpeujhOtcdHckniij+P
      2WKizKnQWplFEkcYXrzEkWtROirb2dr8PvoHV3jsX77M/Z/8AP54nFQq9Zq+zs/PoygKFSUG
      hhZgPiRxa89Ozk8cp9a7jpmgjiafzJXZfvZ3fYx09vqJUiCR2UsqV6C29Ek89g38si/HbQdv
      x2kOEoonsZk33MhyXy9RN+gMqwWEIbpquklmbchqG/du0fNPz36ZTc097Gx/NwsRy2vOIL9u
      Rp2KyCTfOf4TDnT+PudHrHjbMuQ5zV07bRzKV9E/UcL4osaG1lk0XHznuTpKHU3ctan6tQ4g
      iBK7du3j2aMvMzM9Se/aDnT/LTkxGbMuj6/MhSTdnAhyWQrEA+C02MnLGUoctYSTC6hKA5Xu
      KuKZJJPBa7RX7aTSM46iqhxYs4MvP/1N/vK+z/DC1Ze5f/t7qfT4+O7xx1iM+Hn/tnvJ5HOc
      H3+RtsouJPHVCaJiDVAkZSCSMuCw7OFDu3bw+7ckmPRf4Rd9R3jh6sm3FFrVgNmVRb597DG+
      c+xx6suq2du5le2teyhdX47T1gxaFOFGVWiUGq+VR146zo7WjTxx9jBf/dgHMOnn+c5JqPVW
      4hL1fPXJn/KRP9yIyz5O/+zLnBkL0lhez4aGQyxHSxlb1NM3JRBaXGZufgGj3oD1dZJhwWAQ
      nSBh0qeAorBFvtDCfPhRtm/NMhO0UlMSYTFiYWihyMYdCucIBJ30L5roroDl5T40Buit/hCX
      5oaQowobmw6yuMqwbdCpeG1xYhvLSOWTrKk7hKqJRJP9hJNHWFu3gXPjg9y9+TaODJxka0sC
      QTDDGziASa+gqdf4+YXn2VJ+gH96XKWAyvGrRpoqtrGzW6HeN0NHwyi9bXYKqsyV8XX/H3Pv
      HR3XdZ57/84503vDFLTBoFcCJMEKdlKiercly5blGttJ7MRxnJvcL4mTm9zkS+wkjq+dYrnI
      tqxi9S5KLGLvIIlCgOh9AAzK9D5z7h9DUZaoQvtL/PlZC1xcawaDM/vs9+y93/d53oeZxTwz
      izLXra6/+hA8OT5MBgkJGV91zW9kC+Tv/gm+qkY6tt+GKF69AmiUeUKxUXRqLdl8Cpe5kcnF
      Piz6SjyWIqaXBplc9FPjqabEXkPX+FnavI3MBOc50n+GezfewuG+k6yv6aC5rI7nTr9K33Q/
      VS4f9SWrmVocJhwfptxeRCLztiPJW8jLAsmMRDSlQ62soKN+M3et3Y5Nr2M2FCCaiF51zR+G
      K2eGs6/QM3eBvLIVjWIHRm056YzEXPBmuifCVLsr+McX/pN/uO9zmDUHOdhfhUlrQqNUYzeb
      0Xt19PkPEU8vsaJ8K2bNdYzMttA9YWZmSUEyUziIJyJzjF14mhtuvZ5MIs3pE+90hcxkMmzb
      tp28JDA67wAEUhmRYpsfgzZHOF5MXniDMkc1F8bKWRw/hMGyHoNxK5F8jv6uZd48ruVcr5uZ
      mQSlFWUEYyFK7I0EI2ms2jCpTC+js31k59PobeuJpXUk0iJOk51UZo6nTj7PjW1bUShaaK+q
      45FDP2FNlZd01njVKqBTZUmkzrK3ez8f3/x5vvP911jOVyMpCgXA5ShcGBE4P2zl5jWlDM2d
      K+iP3UFWVhlIpFSMzSmuDgA5l6PEW4Wcy+PxuPmArN374tcJgMrqBjq23/6BAWA3mplensNp
      biSamMBtKWc5rkISA+TzecLxBWzGWoqtRk4OneGuNbvZc+EQEwsz3NZ+HccHTtBQupo1VSvZ
      33OQvulLGDUKajxrMWhM9E+fwGkSUClMpLPvLWyQLxtop7IWqj0ruXvtblrKvOjUGhSiSCaX
      /bXPDM+ePsxrF6Y4NaTilXOd1HkqeWjfY9y78RY8Zj2L0TIu+QutPSYWZliKRfBZKnFZbiQQ
      buf8qI3JRQWp7NXXnYjMMdP3Itt2bkYURI4fPnrVe9paW1EaJSYD5eRlgXhKYGOdmTe6X+D2
      9tWcHNqH13EDI7MqEvOdfO5Lf0w4O02VqwWFuR1vdQcV1RtpbvQSCM+ywtvGoL+TUoeS4fkL
      FJmKyUQdjPlTFLmrUEhQbInSM/kmVr2DTfU3MDzXj8gyOnU5LeW1PHLop6zyFZPHcoXXpFdn
      WYoco2uihzvWfoq5sJETJ08Rk2qvBMBb2Nwsotacwqxez6EuLx6bGY1mmArPJLUl0tV1gGhw
      lsmJAOGFWZpWtPIeW/L/36BSqAjHo2RzAiqFDkmMkcxYqXS1Eowd4hfHX+KTWw0U2zrwOSc4
      MXSev/rIH/KVh/8Kh8nKXWtv5FDfXlZX7uBP7/hzHtr7XV7qfAP/8izbmm6hvmQnc8HzpLLT
      VBStZj5ieF9DbRmBWEpBLGXBZbuBT23pYG6xm/lEgP7pIYKxMJ2jPb8SJUOWZcYD04wHpgE4
      M9LNH9z0GbY3reehfU8wFyroZn9/9620VsQ4fGgPf/TVZ9n54KOotR9esJFlmVQ8iVqrfs/X
      lwKL6IotmHR5lqISeVkgEC4mmoihUk5i0OgZ8r9tRmLSxAjIMpGUHShMFIcxQe/kGdqrtpPN
      ZVmMLjO+cIg71tzLSECHxirQ2l6DUZMln+/n3OgQK8o3sBizM7UsYjdtRmCI3om9tHg38Pld
      X+CnB3/MratvQaBg5TofOk7fVC+3rn4Qf0jLlX3ju1BdLNBe34dC9PKvz6qIxGU6h1R4bE3s
      bJModY5cHQDuEi979j9Ocf3aX1/g/mvgWqTJFr2JaDKGKMp4i2qZWhxEoVhLMmNFq9Zy59rd
      1HpamQ4qqS3eSHDwVS7NDPN3932drz/y9ziMNjrq1nHs0gFaK7bxuZ1f4+XORzjYd5LleIjd
      rTdiMaxGJS1yceoI5Y5KEKouc/XffynM5kROXRhlcnQcgzpHc5kPdaWR9bWrSKaTXJoZ4c2L
      J1iOhX7lcfnZoWdYiiyzHAuxytdMc5mXtTWvIopzpNN+5Py1VyplWSaXyqB2WC5LMN855tNT
      U5S0VlFkKgQAQN+Uko76NfzLyz/g45s+xd4uCchjs+gZnb2Az9mC/zLpTqPMMR86T3NZLXPB
      S8wsz7Gxbheh+CwDM+ewGNYRTSlwmuJcmj6CWWeisWw3c2HVlfpFLKVAIdbS4vVwcfIoZY5y
      vrDrQR7a9zOuW7ETURAZnx/mxpWfxh96KzN09dwx6uDebYskMnmePe4iEn/7Pf4leGR/Dp3a
      y1VTfGRogFvu+yxWMUrqV6Pd/3/DNdA4tUoNqWwapSgjy0YyuRhqZZ5QQkG1qxGlQslidLxg
      Kxo20FrRzlyokMb841s/z3defZhLM0N01G/kwvib5PJprm/7FHetvYnTQxd48ewLLIRPksnb
      qPbsIpmJMbd8ELcpjCS+P4VBEPKcP32Q5pVbUOjL+L0v/iGpYCmrK3fjLapgY+1q/uber/Ht
      B/+S29uvo8hkv+ZhWYoG8TnLuXfjLaQyaZxmFQIZuPrWXRNSsSSJdBKj0XjVa8PDQ4CM3fg2
      TyiSECm1rSUQWQKqyeYKfVpuuWkzeTlPKGEBBARBxqjxM7EwwcWpQZSSgQrndcwEbeTlerRq
      A9FkJxbdKF3je6l0NaJWrWUhor6qeJfNi8wEzfjcu0ikU5waOsPvXv8Avzj+DD879Bg7mu8k
      EHl3WvRtSCJ84aY04eQwXUNNXJp678kVT73HKNY2tTHUdRKT24f6N7r9uSwL+wAoFSpiyTgK
      KU80pQQZjJosICCIxShEifnQLA5DmrwskMqW4y0q5+LUIHXFlXxux738/XPfZXR+nHXVHXRP
      HEQlxfE6d/HlG3+HztEejvafpGf8RdSKDJLURo1nJRenjqCW+jBpM+95jQvzM8h5GYvNSVVd
      C05XKa+/9jwzQS0q5TrsmhaUGRWRRJQtDWt5+Evf4ruf+V/cuWY3NsPV/PxfhigIPHH8JV7u
      3E+Ryc5jR4/z3KmtnBp8gNKqr/HVr3yKTU1Q48lgM+RQSgUhzvshEYsjI2M2m696bXJiklw2
      j0X/y+c3GVlOEIyFUUghQMZtkVHbkvicrcTThf5FxeYwe86/hMfipqF0O9F0LaFEoYCWzIg4
      TNX0TvbTOXKKVb6dLMVKSWU/eIItx1SIUhuNZa389NAz2I1WfK5yJhYHrpgmvhfu6hBI5s6R
      Ta9m37n3f3DBewSAUmNk246dSMl5ElczZ//bcC08foVUsEhVSjmiKQm9xgByYVuxHFNh0Tsw
      aQ0EY31Igkw8raDY2o5Ja+TU0AVuX3M9O5s7+Ltnv83JwaNsrt/C+dFDGNQRVMqV/NU9/w+X
      /CP0zwzx6rlHMWn8BKIWaouvI5dPMRnYi8cSeudqIMj0XjjB3OwELz31Q/a9+gusdheH3niK
      eCxINi8yOh3hW9/8Li1FR9jSKDE420cyneKOtbv5xR9+j09tu4c72q/Hojdd9Z1bvY3c2LaV
      VCbN8Nw4jSU1JLNg1JTgj8nYqwwIisOY9a9SW7KHjfUH2bmilxtWznJda4KVvhRl9ixWo4hS
      qWRxcRFBFN8zAGLxBOlYBoX0dq3DYcrTP3Oc21bvYsB/CItOZpVvCUGAWNqMw5AG+RyPH/sR
      25t2YtJvYi6sv5K10ShzFBn9nBl6nc31WyizlxKOT10WGn04tMo8vZNdyMisrWpjTdUK+qcv
      oFMNvedntNcIlLg60Smb+PHr4gfOK1HgairEE8+8QFdXF4FojubG+t8MFaL7J1RU1tOx/Y4P
      zAKV2L10jp6jsbSBaMpAOjvN6eFjlBetIJMT8VhtTAT6iaWilNrLiKeVxNMKKopMzAYnCYSX
      uGnldVycHmB6aZYV3m14rGVcGD9EpdPFctzNTW0bOTZwlNlggGA8gMcsIIpusnIx5XYbPZPH
      sOjSGDRWkhmRbDbFkf3Pc9f9v0tVbQu+6kYaWtbw0lMPUVXbSllFDeHgIp2nDkD2ErOzp0ku
      DaLIGjBYS3jk8LO0V67g7vU3sqtlPYHwMuFEFKfZjlFrYDG6TJHJzrbGdaypaiUQWeJI3ymG
      ZsepKipDDqsQVevJ5uvQqUrRqy0IQpxoapxUZgiZAUy6YUrcIXZev5W6ujqC6Sg1xRWFLhhK
      Jel0GlmWiUSibN95K7IqxdRiCXlZoL0qRd/Mfj697V5+cfx57ly7gWD8LDVFVSiVKXrGD2LQ
      aCgyOZDEOqJJGTmfRRAFHMYM0cRZphZGiU+meH3feVLhJEpTBrtRICtbPqDIVbCwvTS9h3Ai
      zLam+1BIPvSqDLl8ksN9x2gqdSBjJScLnDp5CrOzjo/umEUp6Xh4TxHB2Ht/slYF6+sF7t8R
      e+ch2FBUzgMPPHBNE/e/Hh++BmRzAh5LEaH4IuDGZvDSXKa8kh5bjKowaAwYNFrC8UFEoYW8
      LBBKuCi1lRIIBxhfmOKrN/8ef/3kP9A1vo+6kt20VWzj3OibtPk2Mxuy8oXrvs5r5x7lcP9J
      9GodVr2f5vKdzIbs1HiuJ5LoZmT2DVq8m9j3ZieyLGOzOwElsgx6g4mWVZvZ+/KjtG/chSzL
      VNRtI2ffxESy8ORZXZRnYnGUT2z+EsGlKU4MnEEhqfjyDQ9S7nCzt/sEHksRz5zaw9j8JL+/
      +wGmlobQKFTc0LaV3qlBxhZnGfCPUmTup6Wsg2y2hjPDDuZDLtTKPBadjEWfx27MoZMWCC+e
      ZTYTYHh5kmp3Ba03rGeNpEREIBNLkY9naKiqZGBxkNriDPMhCa16jHJ7KedGLThNdpSKIXL5
      LNOhKRLpGNsbV3FkoAtzeokD+x4HQKGwsGXnJ+ifGsXnqkYt1hA1+Wld04AkQWhqElkYptqj
      ZTHqIXtVpk2myJjm5MAzgMy62rsJRFSAQFKsosqtJ5aK8/Cbj3DvhrvRKZvQqiUeuClNIh3k
      SFcrs8tXzyePDa5fJeKwDiOIIfLor64DjPWd4ZV9RxiZ8FNVWfmbWwF89Wza8cErgNNSwVJk
      hlxeRqOqIJk1gOAhLxcuMpcXKbWbmQuOsxRdpMxRQTytIJcXsRkcLISHSGdT2AwOVpQ38djR
      Zyiza1Eqqih3lHBu9CBV7iLmw2YaSpvxWFT8/MizeItKuDR9jjZvOctxA4LgoaKoiAtjRygp
      UjE9PMzU9DwV1c3Icp7OE/sZ6DvLzOQwoqTEZnezuBSirmUrRrON9gY1/mgP1e5NdI/reen5
      n/OJG85RX+5hclHmjQunmAsFKDLb6ahrYy60xOtdR7hvo53Gsl7cFjuiUMTEQoD1NSupcpXT
      NdHJ+fHXKHfM0VGvR6fSMxeUmFmWmFxUcvrCGI//258QnJlly46tqIIy3cc6kVIyWlGNTqdD
      0CmYjvi5MN5LmSOMVT/CwYv72VDbjkGjx21V8u1XfkSdpxJdRolVcZaJqIqGUi31FU+zvj3J
      6pVNmDzbmA4HaCrbRDhZSkbWY7Y4MVucWGxOnn36UTavu57RhQuU2U0kMoZfOgjLFBkTHO57
      ErvRTkPZLSzF3j7wyrJAKmug1uPDYVTy0P6f0eZ1097gJZAaZnZhDXvPvT13VAporRT4xI40
      rTWXEKRh9Co3XUNVPHvUdnUaNJ1MIkgK1GoV7yUNnp0cZS6SobW6iCOnhynzlSMkllgIxqhu
      asOk+fVOztdyBijk/1Xk5QySKJN/D3O1cMJYcGi3e4jGBxCFZvKywGJUxQpvB90Txzg3epYN
      tTv5WMedPHL4KT6/00Q210abbydd4/tpq+hgNmTH57qB/3mni7979l/Y3bqV1y88z4a6DmRq
      8Yes1BRfTyLVR8ftG/Ca60kIMumsSG3TKnw1BeqzJCmIhJYAEASZuuIYw/OHqXVv4eKEjrx8
      OQUszKJVv0yV637ODOfY0rCOgxdP0FxWx8c6buW7e37Kd14d5au3OLEan2RbswuN8kZEQc9S
      LES5o4RVvmZy+Rz7e58jHI+wwttCpXMTEwEzRxcK7ijhcJhUKk0unWXfvn3vGLtMJsMdn/02
      a5u1lFg3olUl6Ry9gEohMbN8ssCFigRRKhQsZMLEci0kU3FcZg9KaSexVBEH+nO4TTnySxoC
      Fgv5/LuUaZf/mQ2qaPRto3tiH63eTfhDVmQZii0Jnj31IxpL6il1bL18kH7XXJEFZkM6iixb
      +MqNRfxg349pq2ii1nUjD71UeI9ZD9etEqlwTyFIAeS8RKnUOpcAACAASURBVCJey9FeNT1j
      MtlcYcZdrQewWgkuBHCWVuJ2WK4KAp3RzNLCHBatikAkiUqpJJPO0VBfxsx0BLNJSyCY45VT
      v+oZoI7NO+5AFK/Oa7+1AlgNPgLhEZSShEHje4+lEzI5gVKbllhqmZnlGUrtFSTShTx+Iq3G
      rk+DkGd6aZz6knUopDSvnNvLal85kZQHn7OM82MH8RVZCCWMKBUebl3Vzs8P/wJJlMhkE8AC
      JbYSlmJqBMFFhdPJ0Pw5LLoURq0NWTKi05vR6c1odUbCoUVm/X52bKxkNHCYavdG+iYNV/a/
      0xODHDsySC6/gRNTSW5euYOLU4MUS6Wkwllicgib0cajR54nL9djE7VMT51DTAtMRQ3YDeuJ
      xGuw6tUE47OYdQbWVK1Ao1Syr+clApETrKlXs3HlKgQZKuuqEfJw/Mixd4xdOBzB7LuZ2so8
      2XwxocQISoWMWqm60o9VqVCwurINr83LpdlhSu1muiaC7LmwyNFLsxg0BlRKHWazHrtRgUkL
      GlWhH2vBMgnOnT5IXVM7WdFCtauYC2MHqXK60KvTPH/6J6yrXovdtOFD6i8C6ayITm2j0qml
      f3oIs16m3OFia4vMltYRFMp+DBorI9M1PH/UyYEuidnlwnUUmWHbCuHqABjoPoOlrIHZ4V48
      3uqruECCIBAIBLBaHTg9bmYmJxHIo5Zk0koTNpOWQCj3a2yB6ti0870DQKtMsr/nZVq97cyF
      JpBEEauh4n3SaAIapYbxQDelNjcCCdJ5O281k9VrbMyHLmHVm0ikw9R41rMQGefE4Ck21Faz
      ELFT6Sylb/oYlU4L0ZSeZNbMbe2bODZwhO7JS9R6KuidPEVbRTWRpJpIUoPbUkE+v8T04gV8
      TjvJzNtKqmhokXqvikC6nxr3OvqmTO84/JV4W2hacRspdZj64kqmlvyUO1oYD9bQ1TNEvfPn
      7N5Qwirfbn504CXU2lZWNWxjerKX6JKbtGqBxUglR/tNRJNeXOYKlIoU2XyEUpuH5rJaYukY
      3YtD6Eqs6DRaLAYzgem5K2Z6AMlkElv1baxp0eEwZXnz4gFUCiXl9nY8VjeB8DyrfCs52HcE
      vUZNW4WNGk+GqUWRSqed+zoU1Jco0ChgIQih1AL+4BAL4RGC0SHiqWFkeY6munKqy9wYdRLp
      nJJKl5PTwwfZ3/M6Wxo2obusE/6wFjEKMY9KGiaTS7G9bhMH+g5xaXYPzV4DmbSPzoEqnjps
      oGsUYimwGGBHq8hdm5IUu04wE37j6gDQqhScOnUGtdlJlbf4XSuAzMTIIMlUFr3FztzkOCUV
      VThtBuZDGXwlzoIu9Nc4A3h9tWzeeef7rABZ0tlF3JZaosk5UpkETnPV+zovJjMiLnMelUJg
      dH6UUruPxOX3JjMiVS4Pw3MXSWbjOIwOGkpWcX78NH1TF9lQU898xIyvqJTeqaOU2w0kMkbC
      CS3bm9YTTwV47Ojz7G7dwuH+AzSXFQFmYikleRz4nC76p0+gV0Ux62ykshJVJRL+xCVq3Gvp
      m3yb0/L29wOXbZhocpkyu4d4KsfcciWZvIKlwBiV7kNUV87jtgyxsuI+/vezP8MflLA7N+B0
      ODHqdFj0IaYWiwgnCnv+4Vk7yUwZLrOHTC5EKhOm1uOjqbSGscA0z53fS8OqFu657S4qSr2E
      QyHmA/M0r7mZtnoTJ4eOMR6Yos37RQZmjERSh7DpO4in7Rzse4ZWbwN6tYPD/X7W1+ppKn8Z
      laILlaKfZPQUTz+voLbpPky6KpzmStxWH8XWUoxaHcuxBaaCIwRCIyxGRxieHeL4QCd6tY41
      1evRKiV0KpB+Kdf/VkfstyAg4zItMODvxmG0Mjg3QqWzAZNOSy6fpW+shsM9Mjo1dDSJ3L05
      TqPvArORfSxEhii21GJW7bw6DXq6+xKBQIBUVqau9t2KMAGz1Y7L5UKjVmFzONColChUGmwW
      85Vg+bUCoOL9AyCZUeAw1hNLKVEqFvEvz+BzNryPyUThOi16A0OzFyi2upDEFKmsjbdE17GU
      imKrhCBnGZq7hMtSQ2t5E4cvHSYQmmR1ZQP+kJ4qZykXp47jKzKRyOiJJFW0lK/A69Dyb6//
      jI66dkbmhtGrojhMHuJpBZGkCqe5AkkMMeQ/Ta3HTNfECSpsTQzNucm8q7ouCFBfGuLMyCFu
      aNvGubFe9Op1BMKFDtQLs8NYVIcxmxVEozGU8hitvvt59Nir3L32BgRRYGh+nJODJ7l5VQvB
      uOKyhFEgkhAZmVMxHnCRiWkQly+hMWkQJRG9WsvWxvVcmO5nIDZFw6pm7r7lDsoqMqRzUYbn
      J2jzttE7WUd7dQCEMJ3DNbjMOYbmjpDJZjBolFzXuozN+AKiGLtC9o/Fspw6X4qvdiPZnEgy
      IxFLKQgn1SSyJp762aOsaL6NMlcLVS4Tz5/dw/0dH6HKXcVLZ19GqUjiXx5gKTpILDlMPufH
      ok9TbFGhV8tolTmMmkVePPs0Zp0Rl6WCzpMLPHKoAruxHrNxEp1ukFvXeKkqO0cgtodwcowS
      azkW9VYujq7gtTNWzgy8qyuE3lFGVXmMtRu3MTt+6VdqMvXfC4Hs5aemSWMhlkqQl1MUeOvv
      jaWoGpPWgtvq5PxoL5Vu72WxS4HenM37iKbGqXFXMDx7nBLbZj6z7UF+dOAnvNH1JNub78Mf
      0tFSvpPuiX00la4kEPWwGFVS5b6Zv/5IGX/z9LfY0rCWIlOIqaWn2Vh3K3NhPaGEEoVYz8Y6
      N9/f+0PW16xiYiLEUkJNLvvO4k1bnZHjg69wW/t1HBs4i1tXT+fA4lsWAyhUJh5/aTW/ePXt
      p19t9RRfvv6z/PkT/8TXd38FKb+TO9as5cWzD7HK10Kbr5HJgJtLM0oyuUJT3osjIX7y9D/h
      LjLzu7//e3gdpQSCi1QUldHqbcS/PM+rfUeQRImOunYuzYxwe/sniCRyLMcuoFOtR6+WWY7t
      pdjqYikaIuk/x8/OvnnV2EciafKy6v3aIJHJZMnn80jCDA/te4zPbP8cwbgHWYY715oYDwzS
      XrWLeFpCrcyRy0VYjEzTNX6UuVCAUDxK10Qft6zaSbmjFEFQUl5iYZdRha84i17n4MkTz/JM
      8GU+v+N+2r0PcrxP5Dun5MtqvLcv7J1bIDnPay88weD4LDlJh6/83Vuga8N/9Rbol2HVZ+id
      6qbKVUUiczWf5S3kZYFyu43eqXMUmWxoVBBPm3lrGU3nRModboZmu7AbzIhiHFmootyh4eil
      U6gVCcrsVQQianxFZVycPIa3yEgyYyCVlVAqnNy0cjUvnn2V6aVZNtatZl/3a6z2eclkdVgN
      abonjrC9eRcapZqF9AguVYyecydYmB1keX4QZW4GlW2e+pIq4qk4aoWeN9/s5tGH/ppYaIxs
      colUPIDZYsdksl35yWRlbDonzbXlPHriaa5v3cqBHhebG/SYdWqSmXmy+V6aypOU2c0sRCRC
      y/PM9L2AUiFQ7PHgKHczdKKHjavWcX6ij0wuQ1NpLWtr2khl0+y5cJBAaIK6khRKhQKTtgLE
      I2RyCXa13Mmh/gNsX/kgofwNqEw3vePHWHQrVXXrUKqufkAJIvjHe1i9qojHjj/BJ7d8iqVY
      oRZQ6KZtxmrIMb00gFpZTjihRKuWWI5Ok8okKHeUUeEsZV3NGkpt9UCShcgMZ2dOM7L0OpNL
      Z7g0M8j1rVsodxTjDwYwqptZDAtIIiQz8Estka5WhLWv7cDuW8FkfyeZPL8xPtC1GtVoVUZE
      QSCZ+XAHmsVoQU1U7a7g+EAnFU4Py/G3tbNzIS3V7hb8y8MsRoPUFTsQhHVsrFvg1NB5DBoD
      bts25sJamsqvo3dyHw0leZZiJaSyEtm8jz+/+xv8cP+/8/19j/G71z3AK+eeY03VSob9QSqK
      GghECj3DV1aUcHHqKDfesRKHqZVwUoXERUbnRyi1ezg3epESxza27m7nzddfYO3GnbRvuOkD
      V2GHIc1SNMjDB/+Bj238CyYXmjBo91FuX0ssqUchTjATfZkNdU5WlthQ+dcx0N9LOBxGRqZ1
      6xrOT/Vjiki88vIrrFixAnPHNkbmJil3lHBfx63suXCIqcVZsvk96NRavrjrD+me0LHat4LJ
      0DClpVvfMxv3ftAoctx6Vwd7et7gU9t+h4Wo8x0JgXRORKmowm5I4V8+hCgILEZyVDhqcZpX
      oVammQv2UOaoZtA/yOmh08yFFmgtb2ZD5UcYndVhNwkYlDHUlllEYZhXu/+e3W1bWFGjQK1U
      I2Iim7URS7yHR1iRw86+PS+jNzto/g3Soa+tEgCZvIBJaySTfZ869y8hkZGoKW6lZ3LgMgNz
      GqjgSlEFgXi6BKU0hcfipG/qNLUlO2gpv4H50AInhzrZ2WxCo17NbEhNXckOBmcP4nVkiKYq
      yOZF/EEbn97+h+w5/xj//PIP+NS2j/DquX2U2tzUlmwhmAAQmA4aKHXsRM4P0TvxOi3lzezv
      OcNHN9zOwb6jtJRvZSaoQJTeaqUo8wE9tABYjCrxqRvwG+bY0/Vdttb/EXrNWsYXTxKO7eLU
      YA1VLh9KaYmMtodN92znNuEWNGoNh0bPsq64maPP7uXcuULl6MyZs3xct5qEIco9625kLrTI
      zPIc5UXFmDQGtGoNPzv0n9gMFlb6mnipcz+f3bGRhaiKD8vYgIxOlSOVOs9r5/fywJbPMx+x
      /dLkl1FKMjZ9ilB8CH9ohoXIEtWuChzm1YTiCuyGNEf7X2E5FuSlzv3UuH3sWnEjaqWHb3/v
      UfoTGRTqtwZNg1KqoKbExz0bfJwbP8Ent3yME/1ptOooeu0CGXnwnWQ4OZ9lORxHkY8TjiXI
      XRtf6b8Eb9kDfRiyOQGlpCSZiSF8AOvxLSTSNkLxQnpxbL4fk/adDL9ERsJpWcUl/whNZbVM
      LZwgmVFwQ9t9SKLI/p43UQgDKCWZhYiGavd2ppeGMahHUUl5ZARmQwZ2tHyST2/7KP/y8g9w
      GK00ltbw6rmf4TEvFtweEYgklSSydayv3cK/v/EwVW4vPZN9VDrrmP01OkODwDMvn2Jr7WdY
      ii7T5/8p4bgOu76USlc/WpXMgF/JK50uBscbWFvRRvfiMKdnerDqTYiZgi3t2x34oLI4h0al
      ptrt5Uj/aT7WcS+3t1+PWqnGrDWxs2UTG2pX0z1xib7pIQ73PYZZO4zLlESlyL3PPZQxaHJE
      Eqc5NnCCBmU1g5P5Qjt5ZIyaLE7TArHEIYb8h1BKKmo821lfe3ehO9/yGUbnnue7r/0dM8uz
      rKvZyKe3f42m8nsJJysJRNUshWJX7SIyObg4IfP4gSpayzfxowOPIIlKvvOsnf/9aBVP7G9/
      ZwCEZi7xxIv7kMiyZtN2FL9pNdg1LALZnIBRqyeeSqCUPjxCwwkFlc56RuYnMWr1qBWBq/5Q
      IKKmqWwtA/4R9BotkjDMQlTHxzo+SSgR4Y2uNzBrphCFQjdnb9FmppdG0KlGLjMS5ctFHoGv
      3/oFOkd72NtzlO2NG3js6MOopT50qixvPQVPDh7lgc33oFVpOTF4Fr3GePm7/OppB1mW2d+l
      5YHNf8LJwU6WYq8gCtUsxabZ3LiMUpJpr0qyomaG7uk+KkUn4licEruHoCrJrZ++h6/92dfZ
      vn07ZWWlJNWLFFudHO4/Q6XLh0Ht4+LUIA7jXYRiu1FKjaSzMt6iEtZVtxGMhXnt3Cs8tPf/
      ZWD6GZzGWRyG1OWgL1Dczdos/sUDdI50ctf6T/Pm0V6Q8xQZk5i1I0wv7mNsrovyoga8zu2o
      lRVAiAtje3j53H6ePPEiU4t+drVs4eZVXyKTb8Yf1Fw2zfhwTMzL/HxvORuqd9M1/QhfujWL
      UoL54Lvo0JbSJv74K79DRWUd/WePkP0NCmLka7z52XzBaUUSRVSKD/8dGQGFopTxwDSrK1u5
      OHX2qlUABJbjRdiNTnQqDSNzA9gNywQiDj634zPMBgO82Pk8LtNSwZUwqsFbtAX/8jg65TBO
      U4qJhUOUF1XjsW3nf9z+xyxFg3zv9Z9yx5rrOT54nIXQQZymNOnMRSRRwG0pYy44zyc2P8jw
      7EVS6VMUGVOXDTR+NWRysK/LwR/e9Oc8cfw5lmInaCxZSzB2ktvWjqJQ7COXgr2Pv8b/+fZ3
      eO3V19ArtRSrbMSngqgsWuq2tfE//vYv6BzvwVtUSonNhctsZWb5FC7Tak4Narg0o+Tlsw4O
      XWxnqDPCvR0foW9mmLaKRu5adwMltiKePvkYjx35ZxbCe3EaF3GZUgzPvo4/OMdNqz5NMK7h
      o/fsRqsfYHj2TaKJIG5NFRXONYiCxOTCYZ45+T0eP/oTNKLEbY0382e3f4VEJkmVq5pIUnFV
      04JrgX8JfvCqk43VN3N67Cd8+fYEBs176AEkhYqmlWu5YdfW31xrdHjf1uHvRjYnIgoF8fm1
      rABQYIm6LG6mFucwa02opHne/bRNZ0W0qkYmFvysq1lJz8RRrPo0sVQ5t6+5ieVoiJc7n8Jt
      jgAyC1EVZY5NzCyNc3b4RcrsPqIpH5GkklDSy1du/CMcRjv/9NJDNJRUk5Oz7Dn3MJ2jnbRX
      baJ7opOG0lUMzxtxmLdgM7jon9pLkWEWh/1qXcCHIZkR2d9dwp/e/md8d8/3CYSHWYgs0zd9
      Gr1qG08dUHLk6EmgYN+UjicJRcP8+/f+jQPPvU69p5KTI+dJZJIEwkvoVBoWIssoFXqOD7je
      UbyLpwSOne5DEIspsbmodlehVzuIJuO0ehu5ZfUu0tkEjxx+iH995RucGTnPzatuAnmJheCb
      JFTLeKzlrPBuxmEqxx8b5hfHv88P9v0H0WSMj2z4BC2mjXzjy9/gxJEjdI6e51NbH2TQ349d
      7/9Awc8HYT4I//6inc01H+XU6BP83m2xX1NX99+EayLE5YUrelaldG0DkZcFHKZ6hudGaCpr
      Zni2C4P66uVtOa6kvmQ9JwfP0VJez8zSKSRJxqxfwyrfCkLxMPu6n8ZlLnR9yMkCklRwoszn
      81duTC4vMh8u4sGtX2Zd9Up+/OaTLEdD5OQ8s8F5Lk6dxag1E0l6rojrgwkfzd4dTAQu8fEv
      3snGNY3XdMZ5C5lUhGAwRDzl5f6OO/j6I39Lq7cBi96MRhknGo2QTqdJJJLEYnFyyQxqvZZP
      fvKTdNy2g0B0GY/VxQOb70RAIJPLcWHsIla9lWp3GrUQJhlbJJ0MAzKZVIKui8Os9a3iQO9R
      JiYFMsFS9BkX8Uiy4HWsVONzloEMf/Xk3/GPL3wTm8FMrc3HRGCMh9/8D3544D+IpCLsrNlJ
      onOBXNjLfKSIWM7E+g0d1G6opdLVyMSinfrSrfROdmLSLvLrbBeh0C7ley8a6aj5KIcHHv/V
      neL/u3Ctdt3ZnIBaoSKRTl6zqghgOaZFpVCTy8uXPb+WiaYK/W/ehsB8xESFs7rAepRElOIo
      kVQ1TeW7mQ3NkUgnOTnwPJsbbmVs/ixWvQNv0XrG50/gMOWBGlLZQodof0jH1qb78Vhc/OTQ
      k6wor+e+jtv4zqs/5v6OuzFoc5ctVQs8JX9Qi928ibTUxWSki8ZSJbGUh0Tmg71n8/k80tJe
      du+oIJicoaW4hq/e9Dn+5pnv8O0H/5Ku8dO0uQIsVZSBXBgzURYJ5WLoqx3YVSaC88v0BgZY
      W9VKXs4TSyXZ1bKJSGKBnDxIR5OF0JzAkZND5MruYmykl4FTX+See7/Cgb5+GhriTM8/zXxI
      QZHzLroXoyTSSUrtHkpsbqw6E8lsmv/52DfRqTWIgsjXbvk8dcWNTC3rWQgmOd87yrmev+BP
      /tcPOXnwGe77zD1odHpi6TJyssBsSEuzdxsTgTMU2zawEH3/QuhbUClAoyp0FyxxCLgseZyW
      DCplivW1K6/mAv1X4NcphJV5q9hy3d1I0gfHZF4GUZghnIhQUVRJMK76wPe/hVxexOe00z1x
      mtaKdrrHT+Mw+ki/i1ItywIalYW5UD9NpTX0TPZS6XQzH9bR6q3jxOAhFJJE3/R56orryAsN
      BOMqHKZiAqE+DJokgmC73E5FIJMTcRiyiKLMyPwkB3qP8wc3fpoB/zCTCz00l1YRS7/VfFYg
      K4t862/+gnUrNhAXFkmkxym1e97Tg0AQYOTSeXZvraWqNoosJai1lrPgn6fY7ERvNPDwm09x
      /YrNOEtMbFi5hjVr2rnttltJa2FkboKN5W0szS9iLXYQyyZJZdK4LUVks1lcJjtyXsajtmPQ
      aYmLy5T61KyttZCOzHPDdTHaWvScGzGwrmUlG9q9iMZd7BkYo9pdwX0bb0Gn0tIzOcDZ0R6Q
      ZepLqrhjzfVsqlvDsYGzHOk/jigsUlfipGXFBp77xQ8Z7DvHJx+4lYwqi920jtgVyotANKXC
      pIXZ5W6KTKWFg7Ag09t9HrOzlkavmg0NIltXwPbWCKvrplhdP0VDxSwehx+zYRa1KkoiBZlM
      6W9TAFRfUwCAgEKcJ5NNYtCYSWSu1ra+H3J5iVhyBKe5jGA8QJHJSCx1tWtLKividbg5O3KM
      rQ3rODN8gjK7l4WIlu2NjTx27El0ai1uiwuVooRsXrws/C5hKTqEVhlFIdnJ5QUchnlODB7h
      1vZ7sepUjAUmuTDex9aGdTjNDl448wxrqnxkcnpysoAgwhsvPYrVU0997Q4cBiVd44fwOrQI
      guFKy3UBGbshjbcS4tlRdBkN+rzE0lLB7yCRSNBYUs1iMsjxwU7cFicVxWUYzSb6l8aocnkB
      GWJZFAoF3QvDVLnK0ak1TC76KVHbEQWRaDZBdCFELBzFojQgphVkFDGMZVqKPbsw67VIgo9n
      Tx9jOVrMj998lY117cwG53nu9Bsk0ik66jrY0nArLuta6kpaycfDJHJx9BotzWV1SKLIa+df
      Z3j5Ivfffx/bN6whqIjTXLb9cveHy48HAZSSjE5twKhJEggP4raokJihpk5LTcUsFZ5ZiiwB
      FMoZ7EYBs9YN+WLC0VIm5zz0jbk5P+RgYMrMwJTqtycASsur2HrdPdcQAGBQR0ll45eTbG6u
      NX+eyYmUWJXMLI3iLWpkPNCDUVtG5iphjUA8raTMrmZicZyKohIC4VEcJifTSz00llZycXqI
      VCZJiU2NIBSRlwukL6veQzg+glIM4rEaOdD7IlsbbyCXz7AUneP2NXdxaaafk0PncRgt3NC2
      lZ8feYIatxGd2kEmL3Lw9aeoaWjF4aknmTHhc3mZXuolmZ6gzOZCRsCqn+fS9FGUsgb/8kqe
      ePRRVtS5r+T0AaLRKOtqV3F2oodwIsrY0hQKpYJ6ewWk8yynIxhFLWaLmVPjXZh0RnL5PHVF
      FczNzGI2mpiPL2EQNWSzWVKpFE+9cJiI8kY2+EyEM1GePtnP8NwkZ0d68AfniSRjaBRqNtW1
      c+/GW2ksXYFKaUMhCejVOZSKDPOz0/hKqvC5POTyOWaW57DoTaz0NTETmucnJ58jkohiN2rR
      KsOIwjz5/BTpzDj+5TOcHj7AhfE+eqcu0T1xnnQmjk6tQSlJaJRqsvkskigRT8dJZpbJE0BS
      TOO0BvAUTdFYsUBlySRNvvnfnjMAyNd8EJBEDXq1lmBsGYsecr/CeSgve1iMdlPtbmF8YZpK
      1wJmnYVsrkC4y+YEsjmRbF4gky8lkR5DrVSTzaeZWjiKTm3EZtzCRzcU8fzplzjSd5jdbSaC
      iXJyeYFQQoHVsJZQ7DQvnX2UDbUbUEhGLozto7l8G9PLBh7Y+vvs736SN7qP4F8O8Du77uf5
      069j0Q+zqurGd0zigrmcFot+MwbNNGdHXkOjVKNX62jxbuOb//JDVN6a96WSLAQC/MGNn+ZL
      P/xzqlxe1lWtZDGwiFarRUBArVaTIFNompXPYdToWfDPI8syyWSSbD6HVqslkUhgMBi467at
      KKyDjEUWSaaTSKLEsYGzTC3OMrk4g0Vn4sDF4xzuP4XPWYZaoUKtUpPOplGKChAENEo1uvkz
      KEQFerUWhaRAq9IwvTR3ebUqwqw18sKZV1iKhggnInx0/c1saVhHY2k5kiihkCQEBC5ODSKJ
      Ig6tm2BSQzwlIcqQzRTa0OdlqC5O0Ddzhgr7Vkan5cvmJTKyLPz2BMC1HoIBFJKWVCaNLBf2
      1rncteeFg3ElZfYKlmPjJDMpnjz+C1q9DeTyeSRRIi/nEAQRSZRYjsjo1CpeOPsGzWV1nBvr
      4eaVt6BR5bDpq9hYt5reyQFeO/8St6+5l9mQnbwsEEtLaFUGMrksspxlItBJjaeJ+XBB++oP
      6tjc8DEcpjc4dPEEPzrwiysmH08f/08++6k7CWXf2cFZq8oRS0ZQKQqTpcA8Fsnm8qguj91l
      AukVWK1Wsho4O9bDt+7/n/zFU//M82df57ObPkJ4KVTYUiiVHB0+jVFrKAiNBD3zqXmgsI1S
      KhU4HA50Jj0DgXFG45OMjk0yPDfOQmSZjrp2vnrzJymx5TGoNQzOpjg3OszZ0R7OjnTjshSx
      sqKRddVttHkbsRrMTC36mViYIRSPkMkVgq8wVjI7mjpwWzzIcob+mSGml2YL7NNYiH9++QeE
      E1F2NG/EbrBc8ZYenpvArBvBYbQiCAL5fIEBm5LzKEU1owspDvQep7UiTKVrHXlZg5xXI4kq
      BPlaWWi/AnrHkvzuv344WQ0gvjxC56M7WN9xHX/5j4+hVGk/9HeKLVH6pwvUXYd5+2XJ47XD
      bU7SO/EGq6t20j99gmr3CoJxCwpJRiHmkUQZhZhDEvOIYpzOkTP0TQ9SZi9mZH6S1ZXNl/ek
      Iof7TxVuYDbLdSs2Y9SaUIgK3uh+k09uuYtTQxdIZpJsbriFSFLxjpVGr86xHO3kyRMvYtDo
      uGfdTejVOh49+hx3rr2dnFyNKMioFQEmF/owaq2Y9c3EUhIW7Ty9k2ewKp10jtZwas+/8LmP
      dSCKIpIk4fS4GFyewKG3YpDVBJeDmFw2vv7437O2us2d5AAAIABJREFUqpXPbryHiwsjbKhe
      xZ89/g/UeHzc3rqTqbFJANRqNY4iB8cnu5gNBrgwdpGFyBLpXIYNNatoL2+hrUyFwzqARj2C
      QqEBwYFMKdFEM0tRHVOLfk4Onadrop98Ps/4whTRZJwadwU3r9rJ2qpW3FYXA0OzCEKcucwC
      VkUDOVUxvecPcXLfo2zatJbylioEpYhWqUYhKTjUd5JEOsX6mpWsqWoFQcf5sTOUWN2M+p3E
      kjJqJaiUMqKQRRAzyHISmRT+UC/BWJDmslqSmexvUQBs3MVffvPxawoAjyXJxcn9qBQKim3b
      31M4/UFQiHmy2RO4LBUIKBgL9GLWb7lKYqlTZclmu8nmC3l/i85MnmoSaRGFKKOQZAyaFI8f
      fYiKotKC78D6m3nkyLPsbN6GLGc41H8Kj6WIpWiIGk8FoiAgy4XKtywLKCUF0VSU50+/gUKU
      +MiGm1lZ0cQPDzxBY2ktZ0e62NqwjrqSlfiDpitpUwGZIlOS2aWzxNNJ4tNJ7GY1RqMRlVlH
      3+wQLe5alucXSaUK169WqxHMKv7okb/lbz76NfJyHpvBwp8++g/89T1fRYrmUCqV2Bw2To51
      8fzZN+iZHMCsM7K5fg27WjZRYS0nkrYzfPEopSUgaCVmIzEUCsPlAmUGg0aPWqFHr7GjV1vJ
      y9rLYvgQc8FhLox3c26sl4tTQ5h0BlrK6tCqNdy95kZIGRG1Hrq6uwlHCm3nnS4PTfVVaJUh
      RuYuEoyHKba6mA3O0zXej0JSsKN5IwuRJYyqRi5NGlEqQKMUUCu5/H8QxByVnjSRZIDTQxeo
      KPL+9gTAuo07+cY3n7imAHAYUwzO7EOlUOJ1bmEh8t7djt8fMh5ziEszJ6j2bGfI/yZ1Jevx
      B028tYkomC/0kMzEMevaUSpkhvx7aSrrYCZofsdnuc3LPHzg32n1NnBy6Dwf3/QR1Ko6JgIH
      qXK3EE/bicQ70ShFnJYmUhkJhZRHIcoIQpZwIsjAzEX6pi4yMj+JSWtga+M6eiYHOHrpDF/c
      9XFUSiUapQaFqECh0KBS6FAptMipOFarjs7RHrz2EmZDC2jVGsr0Tvx+P9lsQXzy1m3W6/WE
      lSm+9dL3+cKuj3NisCBF/MyWjzAwN8axwbO8dv4gerWWDbWraPM2ksykqXSVsxQNIiMjIJDN
      Z9GrdLgsHmwGF9l8QXyTyQmks4VtiCgUeoaKoowogCgUHhqhhRHKSopI59JcnBrkieMvsRwN
      0Tc9iFVvZnXlClb5mii2lZDNpcnlC98hlU2TzWWRgUH/KMF4hDK7h6lFP3OhBSx6E+OBaZrL
      aql2V1y5Q28xBxSiEoVU2PooRDVKSfgtCoANO/nGt64tAKy6DP3TL2PQ6Kh2by60yP4VoVNl
      mQvup75kPblckuG5bmzGbaSyEmpFDpGLJNJRTPp2wonCFstlWmDQf5byop0E42+vOpIgY9VP
      8n9e/S5FJhsrK1rwOX3E03FEaSXprIRBnSWd6SKVSWHUryGafOe2TRRkrPo0s8snOdR3HKNG
      z30bb2N6eY4X/y917xkk2XmdaT7X5E1vK7OyvPeuvfcNNEADSwOBpEguJVESRy5WmghFMGZn
      NVzNaHaH2tFKmqUsRVIaUqIFCIDwaAM00N5WV1d3eZtVlVnp/XX7I6sbaKABdGNGEb3nR5mo
      ujdufvec7zvmPe85+wq/euCXkKQA2WIJTS+g6UVKag5VK5BXi0TTq1ycHsFpc7ClfV1lJKtp
      ICBgt9hwWR24rA7sshW73c5rV9/ib179AYVykR1dm7gwfYWlZJSmYD37+7bRUdOKJIoIgsBM
      dIGNrf1YZAumaZIvFSiqJVRNJV8uo+oqmq5+8IILlXNLN3QkQUKWZCRRZCa6QH0gjM/pRRBE
      rLJCJLnMuanLnJm4TKaYoz3cxJb2dWzv3EBXbRtWi518WUE3FAxDZTU7SSIbRRIl/E4PPzn5
      PNlSnqGmHvb27OH6vJ/XLhosJ0w0HXQDNL1yMtwzBrB1x0H+6Js/vCMDcNk0ppefJ+DyUusf
      ZDnt/whPaVLnizKxdIX6ql1MLr1Cb+Mu4lkXkjBKKh8n6Nl+i3tlkQwUaYSSWkIQN9xMnwqY
      hNzLPHv2JyTzaZqCdaiaxv1DX2A5/Xa10q7omPplCmoer3ML6du4bm67RiF/ntevvUVJK/Px
      9fup9VXz16/8d/b37yHk3XbT+CTJJDr1Bp5ak3wxR1egGVMWGI6M0dfQScjpR9N1dMEgmU+z
      lIwyt7pINBVnbGmKUxMXKasqggBhb4imUD0d4WZ8Tg9OqwOrRcEqWxhbmmFT6wASIuWSjsUW
      wiikaKhvQRIVLLINWbRgmJWslWEIb//8ju83QGzP/uw77D7wGPXVRcaWrlMf2EO6YFnL5gko
      so7LquOyqaykphldGOb81DCXZkfJFnM3jaGnfgCvox7NsHLireOEGnopM4puphlfmmZH10bO
      TFwmkUsy0NiPQ17P5Sk3Z8cM0vnKet8zWSC4c3SHrguIoohdsaHpeeCjGIBAruRHM8pYJI2O
      2nUsrA4TcAVZSq5Q699FIn/r8qi6iEPpZin5Gl21cSKpCs15tafAa8PP8/jWzzCxfJUfn3iG
      voZO0vkxLFL/TUMplCUcygAO4QrJ7KlKuvRdRpAry3zvr37Ck5//OC9PvM5fvPAdvrL/CX7/
      oV/n+288xfTKDHv6HieZt+KxrbDojuOy9jB9+TINgznsdge7uzdzeOQEiWySujUuH0mUUCQZ
      RVYYX57mzORlPHYXjQ11HOjfwWomgcNqxyJZaAnVV2osplnJNgGSKFHl8JJRS+TUOqbHJqmp
      3046L6Lq4jumsH9wRk6UYHpmkQeVLGenLjLU/AAracst15U1ibgmEc8pCPTRVd/LhtbHsVqK
      ZItLjMxd5I1rp/jrV76PRZLpb+yiv74bQfLhkQfwOi301m3k5+d+SndtK/3WLkzT5Mzkj9FE
      jS89uAWLMMDrl6V7pxBW39DC/gefuO2QvHeLKEAie406fzWaYVDS7pxv/51S0kSq3Qa50goW
      uZlrC6coqQWaQ3uJv2cs59vXNAdDDM8epznUgiSajM6/RG99P2WjCYuYoKgW8Lu8jMyPMtAY
      pqx7bu5+qi6iyCEUOUUmP4XfVXsLrl0Q4ekf/h3eUA+fvf8xfE4L1Z4qri6M8cmN95MqpHnx
      wjP4HXlmYhN01baSL6dRfAJJLUday7MYXybsrqK/vpPF1ApNVbXMrUb45+PP8Oy516j1hXBY
      HTy2+QGWUzEe3ngfAcWDx+1mqKmHpVSMXDGH2+5kqLkXxaLQGmoglc8QLyYQ5RV81RbS+SmK
      5RkkYQlZWsVnV6lyizgUUKS3wYHvpDQRRAj7QLVF6W/Yxkr67bjr9lJJaVZmtFkp6wFC3l72
      9B7gl3Y+xraOIWTR5OLsCM+c+zkvD/+UhcQIJS3DuqYekvkMg43dZIs56gM1DDT2kMjFeHPs
      OTzu0XvnBDDf8fXDRDdBlizYLFZW0inemwG/UxFQLM1MLL9ET52V6eg8cnyJsP/QB14Tzbjp
      rOllJXUOu2LHIltQlB6s8gqzqRSf2fFFfnbqB3TUNPPU6Z/xxI5fZikVvMl/mS9LOJQ+HNYR
      EplT+NxbSeUtsPYfgYCfKp8T3XCzt3cXh4eP4bDa+fPn/57O2lauR6Z49tyr/NaDX0IwZErF
      ZpIz5+ltD1MsFjFNE5/spKCWSObS/Oen/4r51QidtS383se/wltj53hk0/00BevIl4u8ce00
      dUUPA0MDzMQWqfVX0x1uJZJY4cT180wsT7OSijFY28XE/ArLwlbi13/KF770JUQ0DCNPWcuQ
      K8VYTIyjGSrCO9pOfc4AfmcIi+RGEBXKTTIhT01luIYANykw7vCdlbUK1eVqVkFgkP7mPjKz
      Pnbu/hpVviSLyasMz4/ws1Mvki5k6KlvZ1PbIBtb+rHKFmRJ5kD/dqrcgbuPAZYXplnJqPS1
      hLlwZRxPVRibmSOWyNLRvw63VfpIMcCW7fv5oz/9EYri+NBrRMGkWHqT+kCAhfgydtve953l
      9WFit+jE0ofJFXOsb72Pkmaymv3w9kS3TWNh9RWmVuZ4YN2XME2DkflXGGg6wFLKSY03yb8c
      /zZbO9ZxfvoKn93xKywk3r6vgInHrmEaV1nNJmkLbyRfSpLILaNqOYpqqYLylCRk0UahnCWW
      iTO5Msuu7s3UB+p5+vTztIWasbCPZ3/4F3zty/dTFQwxn11hNDJRoXjPpagP1FAoFwl7g0Qz
      cTRd50D/DrpqWxmeu8bJ8Qs8NHSAzEoSl8uF6LQwEZtjoLaTQjqHzeNgIjZHupAhkUvjdwYI
      ykHa2jYTz0pkcmsB8BpWR5EM7FYJmyJikQwK5QSrmSUK5TQL8UWK5RItoQZkWcYi2XBYvbjt
      VVhlLyVNpKyJlDRxjdLlDt6rYPAXf/6XLCsPY7G6qfJAd4NIX5OJx7lCqjjKT049S6FcJJ5N
      0lnbymBjNx676+5PgGBNI7HUKCtzS3Su30Bk7Dp5BAb725hZjOFoCmIaHyGuvis4A3gcXkpq
      ibJWxi2aH6l/WRYNnNYFInoZm2IlXbS9Jzvzfg/rtJaZiS7gd3qxKxrjkXN01w2yknYCAitp
      H5/d8STff+Of2Ne3jadP/xOf2vZFypqGpmWI55aYjyXRDZVkPs2lmSvs6t5KlbuaC6dOUtvQ
      g6+6G00XCDizXJ49ztTKHJ/Y8CAlNU8im+DX7/9Vjlw5zLXI9/g3X3uYaDHG2WvXsVqUm0e+
      02rHaXXwme2f4OzkZUYWxtnVtYlCuYBernTG9dS1M7o8iRLTyWQyuFwu+mramE1GkESJPlct
      cmKRTmcDM8kYNYFupmIXuHL6u4Q8AVq8LcxPTjE7cwK1HKFYUnEFP82OA59bc3/siGIdnbVx
      CuUCqcks4baNuFxWTLNAoZQimpomU8yAaSCKIoZhYLXY8Tn9uGzByrxgrJQ1iYIqoWqVuONG
      K7lo5EnPvIhksZMEJi7CL6i4y2G/wG9/+YuIdp1Gfx3np64wujTOsasn794ApLWxkXabSCqV
      pazpSBjk0ikkmx9JkhA+wmzVO22JrIiA2+Yjmp5GEAQU2aR0l9NsZNGgyhXh6vxl+pv2Mxc7
      i0tJkS1+eDzhtWucn3yJbZ3bcdvcvHntRWp9YUzqcNs0bIqOLJTJlwt01LTwo7eeozXcxF+/
      /GccGtyDJNnxO2uo8/dT0iRUXaSsXmc1s4zTMcg/fOfHfPzxL7I/1I3AdS5MT9DfuJWm0AOU
      VAmX3UAWxzg59ia1vmqS+RR//Oyfc//gbjx2F4VykcHGbk6OX2Bv7za669o4MXaOeDbJA4N7
      6K3v4Jlzr1DjDWGYJlVuP0uJFWoa60hG4+i6TmRhEa/LhSvg4Y2xM5UTxO/l5cOncUS2M3H4
      Nf74323AHazirevTRJUkgYEN7Oh6kGrHMj953kQQzJuxT9Cd5/T4MTZ33M+f/OD/xte4D5/u
      BtxANYLUQdBjVMh4ZQOrbABFssVVlpIzGEaJklbCME1EQcQqW7HITvzOEC5bgN/9jc+wGk9Q
      1ipBuWYIt8weM0wPIXeOhfgy1fYhujcd4isHlLs1gAo3qK7pCIEG9KVZmlraUMwC89E07a13
      38r3jlvflThtXq5H0kiieMetkTdEFg0CzkVGFy7SU3+QSNJGnb+H6eglfK69H9BsXXk5mcJF
      HFYrtf4mSmqekfnr2BUbmeIRTCq5d0W24ncG2dl9kIaqBk6Pn2Vz2xCr2RTd9TtJ5mWShbdf
      kFXuocZnYT76Bnt3raerycVc7BX8Tj899Q+wklbWPreOy5pkNrpMUS3x5vUzNFTV8tWDT/Lt
      Iz9ka/s6+hu7eOPaGb648zEUReHk+AVsig3DNOkNtXF9cZJHNtzPajbBpZmrPLr5EKqmMZ+L
      0hIMk8tVKGey2Sy5XI6BunYOT54mamQ4dP9uzsdEJqamWY3Os34wSGs4SFkbYinRzJGReSaX
      lwlXh7CKw3jdrRimhemVEww0bWEp7brtu67w/kuUNHh77LgN8CLJbVgEE4+zYhiKrCEKJcpa
      hnQhxlzsOmBg8YNsgihIeBwVt8oiuZBEB6puQRTNCru3IwtSG3Nx+W4NQKCprYumtd+87V03
      H7TT/VFSkbcswS2/eWwFTDNKUWu4DVy50uBimgaSKN9xaySAJBoEnBFGFy7S23CA5XSl7lBQ
      A5TUIn5nkUjSgSSu7UQWA7vFAPLEMovEUkscv3aSPb1bGJ49yfDcdR7a+CBjS+M8sO4QK2kH
      RbXiwxY0AWspQ1u4lXgmxmo2gd1iYzn5Fn7XrlvIfStdZO3U+k269/SQJ0FfeBO5ch2JvEDQ
      XUbV5pmPT4JpIEsyXoeb+wd38/3jT9NZ08Kfffl/5w/+8Y+5HpniPz7xbykUCpyZGqazpplT
      ExfZ2bGRYiFPSS+TS2ZwSlY6aloYXZwgmUsjCAL++gCFQv6WNYuvxmkI1NDf2MWJ4nk+3hoh
      tq0PqCieJK5gV16hpRq+FKohlenl4lgrVxdGmIm+hChWyMlcNh+qoSPeVbhWgY7opkC+LJIv
      AyiAg0r6uxGfuxJ3KLKJVdaRJY1CKUGmmKBYnqesldAMHQFhrZlpnJ66DK3VvfdOIWzTlr18
      47/+BMXqAEzs8gQ/P/MjPrvz395Sdb0htb4CI3OvIUsyvQ17mY9/eAFNFEyCrkVGFy7Q33iQ
      5bQNh6JjAg5FRxLmmFqZo9obZjUTpVAucCPDZLPYqfMHefHSMR7b8llKmpuyep1CWUWU1uF3
      rHJt8TwNwYPvKHCZFIrHuBa5zsObvsDh4Z/hdbiYjS2yu2cXOgNrE+krQXHQXWB+9TSpfBK7
      YqOrbi+mqbGUuEIyH8dtc1HWymSLeYaaezg/dYVcKc/H1u/n52de4dzUMF/Y9RipbJY3xk7S
      19DJoaE9HB05gdvmZuz0LJs39VK2ahx97gxtLQ3U9FZhL7qYKk2Tzmeo9lQxd3aBxeW3adNl
      SebAw9vwWdycODnG0I4uCmqCzc0a9eGXEIX0LescWcrzrX/cwSc/9Xv4bLNcnBkmnc8ytjSF
      z+mlJ9RGW90mVPzkijL6B7A8SKKBRbyGVXZhtVSSCKIoYpoVMOKNpEKl8n0j81Q5UW70VMuS
      iU02KvATScUwVF4fPUWhXLp30qC3ioBBK7+06w9I5G7/iLohIggiimRBoAx8sAFUlH+Zqwvn
      6Ws4QCRlI+TO8t0jf8a+vm2IQoVtYmJ5ilp/LY3BQQTBQVGVKKoidkVneO459vXuYSkVIORO
      cT06R3vN/cRzEqu5IAFXFbp2DYvUt3ZqCQS9u6ir2sFc3MKevof56YnvsKV9iJcuvcqjm92k
      jOZKl5OyyJXZcww0DaGuqARbfPzkxN+wvqWftuomylqh4ts3dXN59hovX3qDXT07qfH4efb8
      y6QLGT6363FShTTddf1EczEuTI+QKmQIe4PY5I3M6J1ssC9jFeuJORqpcVrRzStMJJtorlcI
      t1n52ekX2bF3O+6ZEJemKydUCfA4BZKFCHPGQUrj1XTYj3AGWEg/zsbWa1jkk7c08ZuYBJx5
      zoxfYrDpEOmSlZ09KiV1kXOTJzn+xl/jcbjZ3rmFtupBMkUbqYLlPUPzZNHk8swZPA43QXcA
      3dCRJZmSWkYUBTCp4HwkGd3Q0A0DRVbQDR1N17BZrJS0MgICFtlCSS1hkWRcVidTy3P3jgGY
      75oTXPEH35+XRdMrzBBBT4BsMQG8f0GlovwrDM+dYl3L/USSdirza208tOkRqr2dFMoWyprI
      xtbAGquD/2YQpcgG6dxlXFYXiD14rSrDc8cZatrDQrKy25c1kYBziMmlV+ltqCOS8sMa40Ou
      AsZkKenmsa2f5acn/4UHhvbwoxM/5Mv7vsRCfIaVZJKDA7uYWlmEgEGumOOBob0cv3YGiySz
      rrmX2dgivzh/mM6aLh7d8gTR1Cx/f+QHdNV0UON+hJPXbDyydYG/P/odvnboSzRU1fLixaPk
      igWq2h1sHvRQ0ieJZ8O4AwqyXUMURByuAIrkYDFxjv19O7i2OEG4LsEXundwbMRLMgcmBQxh
      kqpQmFTe5Bvf/K/8zZ9tx2Y5wDNnm9jT00uV9zkkMYogCHQ0+bkweYQNrXuYX7UQWZhE01Qk
      SeDCsUm+9L/8OnZHmUszZ3lt+L9R5fKzsW2IWl8XZd1DuiCjGQIlTWSo9fNounBz3JIgmFjX
      WsEFgDXDe2fu5cbPglB5i6JgIomVSTWSWHGZBpu23Dsu0MbNu/k//uynKNb39ujeTjw2lZno
      y6xr7mE2lkAQN75n4jhUFqDWG+fi9HEGmw5UgrBb/u/WIkyNN8/o/BGaqw+RKlgqrolrkTeu
      vcqenidIFiwY+jkciouc2v2uPLVJjTfJ1fk3aas5RCL33oZ9WTJwKxM8debn7O/bzrde+id+
      /6FfI5XPUFRLNAZqCXoCnJm4hGKxUu+v4VpknGwxh9vmZl3LPmRJYnj2DUbmr7OrbSu/eH6U
      6zN5fumxnYieWdqrWjgze5Gg249uGBiGwfnpK/zK/i9yaeYiLz8XY3k1T1driL33+5i7JpFM
      ZejfbKW/po8fnnmaz+94jPOzw/gc1Zw9W8BtLdPQZXDklSTXJ1eYv/oL9u5IU1fno7H5U7gb
      G3DawM8w169fw9n4OGF/C9lyB7lcntdf+wmF3A2dEHjwka9gtdmxWQx8DpWyGuHqwiVGF8cx
      DIP1LUMMNG6hqLlIFWS0d8WBAhWUqUWqKPaN7xWYegVpq+lFimqWTDFFppBG1YqAvuZCGYiC
      eO8YwIbNu/njuzAAu6Izu/IcBwd28tb1S3idB97jS1aUf5XzU8fZ0HqQxeSHF7gskkGp/BZh
      XxvRTA013jwvX/xnDq17lOV0FSFXhOmVq4T9+9ZmWN0qsmjgsFwnV8ogyxtvc4qZ1HhLXJh6
      nqfPvMyeni1cmh3l33/69yjrKhemrqCWVTa09rOUSbCcWmYxsUzYG2RL+31kizGOjryGVbZw
      YOCTzK3aKJdKhD0lxmOnGWragq6bXIucZ3Rxgm0dG6nzDxDPTfOdI/+dRzd/DI91iHRBxmmD
      TOkUzVVbiaYFNPMCHTU9XJg+S8gdwuXoR9OnmItNs65xiJHICPXerSwlK9xM+loXFwJU+23Y
      lWVGFy4T9lYjCBJWZTMFVQLM99Dsvw2PqEClJdHErugEXWV0I8qp8QtcmB4h6PbTU99JQ1UH
      pimg6gVUrUBZy1NSS+iGgW7qiIKIYRqVdlKzgvhUZBsumxunzY3T6sFqcVRwS4aAZlRSpfeM
      C3RXPZFUXCC7YqvAa8WK9b+zNbKi/EkuTB1nfcs+Ineg/FDB6tQF+phcOktbjZ8LUy+zrXMH
      sUyAandxjVblfiLJ27tnmiGC0E4qf4TO2hiRVDU3XrRVNqhypXn+/I8pa2X29m7DMA0eGNrL
      //P8t/nEhvsYaN7F9PVLHBk5wdXIOF/e/0U6ah7AaV3h6TPfp1guMdTUR2t4J/MJG4IoEK4q
      8Lev/Dlfe+A3MfAyGjlMc6ieKncIiywzFT1Lf+M2DvTv4M3rp+lvzLCu+WOkizJ5TcKiKIgW
      B/WudmZi0ww0beMX537CgcF1FEu99DXWczVyiumVeXrqd5JW33uKFjQoG61s6bDz9Oln6anv
      JOwrIZeUmztyZYc2kESDkpanWM6QLaZJ5VMYhoogmCwnREzTxGN3s6NrI/Fsimg6xtGRt0jm
      06xrrrRXNgVbKaoudFO5tZ/bENENAcOooFB1E9JFgXSx8pxQcY8cio7Dqt1DBnCXoukCNsVK
      PJvin9/8OX/w8E7iuUogLGBS40lyYfoYG9oOsJhw39Y9ej/JFNwgsIb1cYDQhdNa4Nzkiww1
      b2Ip5eCDjCldtNBRu4NLs6/R31gpXilSlPPTbzEJHBo6hM9ZRTQ1x3eP/ZBYJs6W9nUsJpaQ
      RAvnE5fY0bWdbT1PkC1K+BwxTo6dQNN1Ai4fvQ3bmFm13XwG03Txme2fQRTCLMbP0F3XypW5
      MXobHiRdtFAfmOWN0Rdx25z8+v2/xS/O/5SXL32PT2x8nHROxDQrLHmiGCBXGsEwndgUG4I5
      jWkUyZX6aK/Zhyi+zunxl9jYtgcBD6Koo2pFVD1PWSug6QV+fOI465p7iWXinJ/6O6q9VYS9
      IQShkqnRjEpxzKE4sVudeOwB6gJtCIKlQkawpsyVxnWBal/lM27vUtH1FcaXrvLy5ddRJAsD
      TX3UB7oQhAC5ovwejieoGJ1N1nFYdSShSCq/SDy7yFw0SVkr30sGcHcnQMVzlwEL/+sn/5Bc
      Sbn5l7A3zaWZ1xls2nPXyg8VyvSQp5YXL77M41t/k2hGwm1dZWJ5mv6mh++AnNUkkbMz2NjP
      +annsSlWzk1dZk/PNoaaNzEXm+PK3EXCvjp++8Hf4WenfoSqazx//jC9DZ3UFryMjuTZvAlU
      7RwnxyawK3Ye3fwkhlnk3OQRBpoOEFkzxFTBikVeT0mdQBIFpqMLDDRtZSWtYAJps4li+S3O
      T43QFu7n/sHPMr96nr995Vv0NXTSVVei1idis2iomophLNJV28q3Xv4240sz/P4nfw0EiKZW
      KahFXr70DLlSgaGmHmwWK1bZjt1qZWR+lAfWPYBFCtAUsrKlQ2B+9SK5YoYNrdtZSDgor0EY
      DFNANSCeF4jnP2Q5gaWUBDQS9tfTVbebXHGa0cWrnJk4T7U3SL2/lvaafjTDh2kKWGWVfCnK
      dHScSDKCXbGiSApBT5BafycdNX6sFvHeMQDTvFsTAKvFRaZQJKe23rgLtb4sF6ePMNS8h+WU
      /66VvzKpPMdrw6form1bm1QoUNAa+OSm3yWZf//MlICJw6rjsWWZi11mJZllKbmCx+Hiqwc/
      R6qQ4ezkWwTdNQw2P0i2KFPWEvicbl66dIzHeCQNAAAgAElEQVRfO/gkx6+dIdgUwmWxMR55
      kStz13HYHHxiw+MsJBUkEfqbNjE8e5jB5gPEczZk0cRtS3N1YZze+g6WkivYLQp+ZwRVK1Ao
      Z+mqa6eluoGnTv+EhkAtVWszDF669DqzsUU2tw0iCDKpfJaplUnq/M3U+cP84SO/hWYG0XSB
      nrosE0tXqA1sp6zOMLlyndbqfgpqkHzxIj11veRKbbfsxDZlK3X+BCfHXqfO34TL2k0ifyv+
      /85FWEtLOxGFPja0dvCxdSWmoxOcn77C02derGCfbA4skoVqbxU7u7Yz0LSTQllGM0QU2cAw
      4kytnEczSvdOELx+4w7++M+fwmp1ffhFAJi4rRPkSwl0tlBR/hyXZw7TW7+NWC70EWi0K1z2
      o/PP0VXXi2lqGKZJQev/gHtVgjifo4wsrnB9cRibYqW3vp2rC+NIosSVueu0hBpoqW7HIjeT
      LljwOQpMLp9kfnWB3T17MdF5+vQzPLL5EP/0+s8YaOzm0NBeTLPiouTKCiU1T1nLkS+lWUws
      Mr40zWBjDwCjixM0BSusFf0NXVhlK3arHZvFiUV2IItWJNGKKCokshPkSmn66jdxdeEC56cv
      IUsyD216EosocHHmLULe+xAZ4fLsJQabn6SgStR4i0wsvU7Ie4CSJhL25BiPnETVNRRZIezf
      c9suNzCpcpZJ56+wkl5ioHEHKxnvbSv8t7sWKvUAh6JjVzRMM83c6hhzq7OU1BKSKBLyhKj1
      1SNLIjPRKS7PjXJ2cphfPfAknbW9CILI5PI1BMHEY/cQcHkqnER3qSH/enJrGeAORECRHSSy
      iyiKSdhTUf6Bxq2sZD6K8q/l+/PnKwxpZjtOq8q1hddor+26TUrTxGoxCDhKLCWHmY0mcdpc
      bOnYRUlNcOzqKRTZgmnCts71pPNZvI5GdFNDywzznSMvsLF1gMGmbpZT8xiGjtPq4JvP/A31
      gRoOX3kLRbbgdbgBEUGQsVoqCh1wNVAX6GF9S5aL06fxOtw8vOl+lpIr9DasJ1dqvOlH51UB
      3tWua7MMUe2Z4cTYEbwOD5/a+nH+6fWfcWb8VbZ2bEAQTNw2HUHoYGL5GQ4M5JmLuympImBi
      sxjkyzKLSRc9DRs5cuVFXDYHzXKUsiV8GyyVwGrOiiyup78xw7XFk3gcfkLuIWIZ5V2ndCWV
      abUYOK06olBgNTPLYmKGRDZJUS3hsDpor+5gX++D6KaTfEkir0qUdREDg/WtHdw3sIuXL7/O
      lflrvD56ErfNyea2QZqCDRRUne8c+TGaod87BnB3aNCKyJKdbCnHYDjD+amjDDZtZTld/Z5q
      4p2IIJh4bcu8NTvG9q5PE8tWgiqf048krAD13KAjcds1nEqKyeVLxNM69YFWmoNN/Pzsc8yv
      Rrg4cwWLJNNZ20K1p4pYJsFifJkzk3/L+NIUH19/kEc2fwKbxYVdcWG1iJTVFNFMnEc3P8Bi
      Yokv7f0U3z36E37tvt8gkvRjmBVMTFGDYuZGgc5Jc6iZVy4fwWG1UyiXKKkNH1hABCiqEqre
      Ql+DmxcvPkXQU8PDm38Hu1JmZP5N5lcjtIfTxHMBdvds59zkUeqDn6CgSgiI2CyV6S9Bd4nz
      k2+yu+dBTNPCWOQETtsMYd96omnbe9xPzRBZTHqorzqAaUxwZe4F1jVvJ18OoMgGslQkV1hm
      cmWchfgCqq5htSg0B5voqulDsQTRDDvZYkXZF5KV7JpFMvHYVGyWLIvxMS5MrWC1KFR7gwRc
      PjLFHEuJFebjS5ycuIhDsRH2BZFF6d4xgI8iFslGSS1xfuooA01bWPmIyg8m1e48h6+8xMGB
      R1hKVWhWNF2ksWqIqwvHaQpVo0gGRXWOhdVJZNFCW3gd2ZKXki6QL8/z7NlX+NS2j/GVA7+K
      RapCMwQskoFTSTG/+gKpfJpvPPF15hNVFRh0yQSiHLv6Ah3hFja0PohpSpTU53jz+lk+u/2T
      /OOxf+Dzu3+LxeTbWZ8bz+x3JLkyN8vnd3+O//zUn/LlfV8kf4djg3RDZDkdZFvnDk6Pn2ao
      uYxm9FBXtR+H9Qynxl9lR9cj1Pq28d9e+C98tWk/sawDUbQgCkVcVpml+Cnaa3pZTvvRDajx
      H0AUJrk69wp9jZtIF8JrdYCKCELl9JBEE5ejnn6LyfeO/QNumxOLZFlzZYK0hbsYat6FZlSo
      DguqSKIgQqHyuWXRxKnouGwaqrbM5dmzXF0Yw2G10xSsx2Nz4bQ5scpeGgL1yJINpcMkU4gw
      vjTJfDzCqfGLZIu5eycGGFq/jf/0Fz/HarvzGKDOl+Ofj/8Nn93xOWLZ8EfuCvPYVcYXf0Fr
      uIuS1v2OsZ8mfofKYvwYIFDSSoQ8dfhdXSTzViQR3NYE56aOIokSQ03bKGghskUJWTKpdue4
      NHOUTDHLlvbd2BU7l2ZO0hq+f43W3cRrW+Ly7JsMNj9CqlCZEpmae50lc5aQtwqP3cXFmasc
      GvoSseyNPmWTKleFG6m/cTvL6QDV7jiXZo+zrnkvS2nvHbqAJi5lHFkqkS7kKWtlqr1bUGST
      U+M/x26xsaVjK8dGjlHjq8Vh24VhnCdfyhHyBMmVslgtm25RclEwCbnzzERPYrPYqA2sxzQN
      VC3B3OoEUytTJLIpZEmiLlBLU1UzXoeX0YVhNrdvIF+uJ5m3YFLJ11skA7tSgUAL5MiXVpmO
      TqDp5TWEp0hDVSNhbz2y5EQSZUwTVL2MqmVJ5VeYW52nqBa5HpmkWC6xo2sjAPFs8v+fJ0AF
      21NkZP51GqtqKWtVH1n5FVmnULqMw+rEpLOSKZAMqtxlSuVlplZGbpJBddfdRzSjkC/rVDmT
      XJk7wd+++gO+sv9JuuofIJq1IAoQchdZjJ/jyOwkg03rcdm7iWUtyJJJra+OYnkEizSEqouk
      izW01z5OqvD28//VX/09v/3bX+bq8nU2tg7QWFXL+alnGWh6lFTBgkPRiabO0RLqIJqpuEfL
      mQAbWvZwbuooG1r3EUl67yADJiCJFvKlLDZlIx77FGORl9neuZcql5/Nbet58/ppuuvaePrM
      y3xp3xbmYzqzsRlUrUhz9X7iuUql1ypXFNWhaKh6GqfVyUuXjrKU/BkhT4CGqlraqtvY2XUA
      p62agiqTL0mUNJFMCbZ21jO1cgbDmKGzdiPJ/CqrmQjFUomVZJHZ1UWi6Th+p5ftHRtor+lC
      MyR0w2A1s8rc6hQlNYdhGDcrwpPLs7hsTlqqG5hcTlHjCxHPJhmLTFHl9tNS3XgPGcBdHERe
      e4K/fOG/8PsP/QbDc1eR7qIf4J0iCCYe2yInx0bZ1vlpYtnKTuayrfIffvRH/Mr+z9PXsIuy
      buX64is4FJVqT4Kp5StcTCxhkRT+wxNfR5YaSOYteO0qmj7JsZETNIda2NP7GaIZG6vZiiJq
      uoDL0cf0yqv0NTSymAxgIqxx/r8tpVKJa1N5Dh18kBcvvsB9Azt5a+w886tHqQ/sQxJnSBoa
      Ou03TyvTFFhM+djYupdzU0fZ2LqPxdSHnwQW2UqmqFIuS5TFdgYavbx57Qg+p4elVJb2mvtJ
      5y+xmFgmnrlOa7iXWGaB9S1byZY1wp4kidwisfRKBRoB+JwB6vwt3D94CK/Dy0pqDlmSaKha
      TzJvI5kHu2LgdxbQ9AzZYpTRhSiiCKl8hh+d+EcaAjUEXD5KahlBENjTswWHYmc1myCaXiWe
      O4UgCEiCSLW3ip66JiyyhXgmwavDbxJJrhBw+RAEgeXkKl213VR764hl4vicdWi6l4J6D9Gi
      VNfUc98nPocsfzjNoSKJtFRX4bC1s5wco8bXRrZ0t7ZsUuPNc+TKM+zte4ho5h0N64LCnt6t
      SFIX2ZK1EvSZKY6MvIoiGWQKWRqCjbSGD5AuhhFFmSrnKsevPUUqF2dP70MYdJEuvjvDURlm
      11Zdw7GR52gOhShr7lv+Lohw9KUf096zjnDDJpqDVl65dJSHNh7kyJU3qXLrzMZm6ajZSzL/
      7rUSyJZsdNbUcH7qCF21tWSLt6d3uSEeW5lkbhlZakI3RXIlB23heuZiY0SSi1S5u3Hbqxlo
      DPPdo/9MrhTD5/QSy0TI5Bcpqhkc1gB1gV48zk5sSicGjWSLLhRLNRbZQ1MwjM1i8Mc//ROC
      7jJldY5ccY5kbgHTLOB3ueiua8VhtZMpZFE1jXNTw6xmk9T4QiiyBVXXUHWNak+Q3voOgm4f
      qq6RLxeIZ1O8ePEYF6av4LI5sVtt+Bwe+hsH6a7bh93ah0EDuZIXk2oKqpOSJuGx31NQiDvf
      xdNFK7K8iVS+guiT7/oEMPHaVc5Nvsj2rl3Esj7eqST5sgUIA+CxLfDNn3+TL+x+FLfdRTyb
      ZGPrLmK5IJki1HozXJg+TDyb5ODAx0jmg0RSHzTTS2A160CSZDL5JRDff8BHSZVwWvvZ1Jbk
      hYtH+cKex/i97/wHfudjv/G+87FMU2Ax6WVD637OThxmY9t+Iinf+54EsqRQVEtYlUoPr1U2
      MAyF7Z1b+dbL36ZULuJzetAMjZJWZjWb5ODATmSpkdWsQkkTKWomZsHAruh4HVnKapJMIUoy
      myKiFlmMW5FFiT946Ks0VtUgCiL5coXOcTGxQjS9yvHRM2SKWVpCDWxuH+KxLQ+g6RqvXXkL
      t68CkIymV1lJxZClylwBn9ODpusYpsGjmw9RKBdZzSZpDnZgkZuJ5xSW0+/+3ELFhXZnGFt8
      894xgLsPxSuD5UxEJOHuBhorkkmmcBGPw4NmtH1g/CAIIf7w0a8xuTwDQF9DP8uZINXuMjPR
      01yanmBb505EsZVISuZOKpwlTaS34TM3AVwfJLmSTG1gO/Fsgu8d+yl/8NBXWU6t0NNQIpZ5
      vyFxApGkl/Wt93Fu6jU2tO5hac3devs/KuhLuyJiYuCyTrKYmCdllIlLEhbJQn9DF03BOuLZ
      Cp24x+6iWC4RSaxgskpDVSeRxCypQgJBMCmqJdx2Fz6Hh/pAkAFXOyW1wp4Ry8SZic0zvjTN
      8Nw1REGgKVjP+pZ+moN1iILIUirKTHSBaGqVudUIVtlCrS+MZhgsrM7x0KZDFFUHRTXG8Oxl
      dMNgqLmH0cUJxpamaQ/3U181RCpvwSjebl1NfA4NWVzk8sx5UvnMvWMAd34CmESX5ogsTLJ+
      825cNhdFNQfcWfZIEEz8ziWOjVxlV+8vEcu8/xLYLTqSsMDFmRH6GzbRXe/m7179f3lo4wO8
      OjxMT10P+/qfJJax3mX6VbjjKecAyZzCYNM6Ls1eZTa2wPaujVydf53G0L7b9hxAhZBqKeVm
      fct9XJo+TH/jdjTDh1UuUdJWSeWWWU4micQNLs9eI+Csprd+IyVNoVCWUHWBOv8CsUwEm8XK
      v/uXb/Kbh77Aq8Nv0hCoIegO8PrVt/j87kfx1jeQzmdYzSaJZ5MsJpZZScUQRBFFknHZKlQx
      AIps4RMbDqAbOql8lkiiAvfGFKlyh+mo3YCqK5RUmaJaGTvllA0GG5M8dfoXaLpGf2MX2zs3
      cnVhnJH5cVrD/eRKVSQLH7wB+Rxl/uX4nxL2hQh7g+zre/geMoA71P9SKcfhv/8GgcUxXp35
      HPc9vpl8KQXcgB1/sIQ9eV688Byf3PgE84nbK0+Fe7/MXPQEcVNjXcsD5EoWKC8ytxphPr7I
      wf5PsZpzsZL+1x+1XO1Jc3l2mN889Gs8c/ZZJpdnaQ7VEU2fwe3Y+o4pinAjI1OB++oYRh6v
      08OPTvwjrdWNhL1BfI4gPmcjIe8QTmuFh6fa24WJiabHWE5OYZpllnSV65EpNrT08YeP/CbX
      IpPs692GaZpIkkSX1MZTp1+kOdhAXaAOnyNAY1UzTquF+XiE10dPMReL4HG4aayqwWV1rhmD
      FZctQJXbR0mTKZRFynqFRGB29Z1MGTphb57l5AinJ2Ksa+7Frth46vRLpAtZuus2kSr41oBy
      Hw5QdCgGbeEmGqsaaKjaQSR117Qo/3pyJ5Vgw9B49Yd/ze7EDIO1IU69/iOMPS2kAgaS/OFu
      lNehcm7yBfb27mMxefsWSptFx2tf4fLsKdrDvVjkFnQjw+TSK6yk4/xvn/73JPIBltJ3voP/
      j0iVq8zV+eMMNu1gZrWK+wYe4IULz+G02rHKIoZ+hYCzF4ukYZgpMoVlEtkYy2p5bR6Xi7Zw
      Hy3Bdr7+g2/wJ5//BiZeylqSRHaM6ZUoowsTle4oQcDrcNMRrqOklUnm05iLkxTKJQrlKDbF
      QTKXodYfZEPrBnRDQDcKPHfuZczVBSaWJpHESvyjm9BT18+Bvo8jiK4KiK0sUlAl8qpA/n3Y
      1G9U2hVplUhilGiqWEGs1jRwdXGCaDrOp7Y9xlhklEQ2glXxAB/8LmTRIOiOc2H6ONs6dlJQ
      m29m/P4HDMBE1yv5VkEQMExz7cN/5Nt94CkgYHLhzReoOvUM/dVVmMCWgA+XIHE+HUPSZ/EF
      m3i/ncAq62TyF3DbvahG221clgo/fyJzgWgqxYbW/ZhrfDZX5kc50H+Q9trmO/bz/2eIzaKT
      zF6kKdRGLBtAwEQzghzo38mrw2/Q19DJxZkzNFSNE3D5cNs8eOzVhOvbEEV5bSiGRjy7wkpq
      gSd2PsQP3/oXOmtaqQuE8Tu9yJIf0zTR9Ep/cCwdp6Sq+JxBQp5GdnWLVHuDOK0BssUMS8l5
      zk5d4tzUFeoDNUytzCGKAiVNxW1zct/gA8zHHRQ1EV0XWEzdWUFOFCrGXlLnmI2O4XW46Wvo
      BgyOj57BZXfRVr2eTMnLalairaaBYmmUiaWXGGreSTTju8mw8c77Oq06kjDJ8Ow1hpr3Es34
      0I23n+kjG4CRX+bYuUU62hspxBfJFUvUd66j2nO301puPOoHb99zM9dY+PFf8IVQ4O0pioKA
      XCojueHUX36dpkf+Dd1DO9boMt4WUTBxWRd4a2aUnd1PEMve+rEtkkHAGefy7HHawx201wyw
      lJzi+OibbOvcwqF1X2b1PaCtfz0RRRFFFnBZ51nK52ioakZLXyVXjDO+lEFAwG13cXbyMl/c
      8ynOTQ3TWdNJtqiTyi+zlJykUC4iS1KFFl1W8DqcFSh1YxfDs9cwMcmVyoS91XTUtrCuZV9l
      EIg5QyqfoVDOE88sU9ZVXhs+zpb2dWRLOWwWhf6GLpaSUa4tTvCrB58kW6omV5KwW5Y4OXac
      rtqNFLXQHaxXBRrhdxZYTo4wthgj7Ktld88uEtnVSo1HtLCx7SCxrOOWUzeRU7BIAww1N3Np
      +nVq/bUEXQPEsgo3quUhd4nF+ClEQWKg6RC6UckA6e94ro9cB9BUjWwuS6FUxiIp9PY0sxLJ
      4PXaiSZ1fnHq7uoAoepaDn3yC8iW9xpQNhPj8F9+nc8oGg7LrXBba0cHEY+VnWNTnH31Z0Rk
      G3WtXYjCjcUyqfHmePXyzzkw8PAt+f4b8GfBHOV65CI7uyrG88zZp7ApCpvaP06+3Ei29FHx
      63cild3PYdXxOVT89jz96xqxeAucnjxD0O0nW0wSdLtpCtXTVt1CyBPCY3dybXGS49fPEPYF
      eW34DfwuG0W1SFlTUWRLZbI0Ag6rC4dShd/VRMjbzWDzBqLpWTpr+kCoJ1OYw2ppI1WwsJy6
      yFJyiaZQJwFXCzW+ZmSpSEv1bgqlVaLpOH2Nuwi4BtnQOsCF6dNUuVwUVQ+5kpeWUJjRxVP4
      nRqK7L852Pvdn9lt0wi5ksyvnmAlNU1DoImOml4K5TxnJ89gIlJftQHdbCORt70DnvK2GKZA
      pmilxt+GJGYZi5yirdoH2Ai5k1yePUxzqANJ6sciafzpM19nf982CurbFDofGQtUSCdYiqeI
      J7M4ZR0EE29dN7V++0fCAvX1b+D//NYvsNlvpVfU9TLP/d1/ZNfkCTrd7vdc73nwY5zurGbo
      hTfJX7/OG4kM80MHOPC538Vmc+FzlLk0/TQDjevIqR03U56SaBB0Zbi2cJwaX4jmUD0vXDiK
      JMlsaT9IquC7q0zNnUlF2a2WSpCqSCVyxWUyxSiZYgbDqNAq1vqrmY7Os6l1gHQhS6qQIVvM
      g2lS0sqkC1ncNid2xcbRqycBKlmR+TE+te2TKHIthTWfu7jGtvxuIF3YU+Tq/Gusax7keuQ6
      DcG9rGaVmzSTN7D6kmhQLB2jLjBAMh9AFMx3oE1Nwp5SpUfAU43F0geUyOaH0U0Nw4Cwb8vN
      XVkSDfwOFVWfY351AllU6K5bh0W2EElME8ss47H7CXr6iWaUu4K3SKJJjbfA6MIbZAoZSqrK
      zu6PsZL2opsCNouO3bJCSQuRf8dU0Y/sAtncXoJINDQ0ImJQKKm4nHc/q+uG3N4KDU6+8lPa
      Ro7SGbw9aa1ZKAAgOZ1IosjegIeRK4f5xV9G+PhvfB2MWUKeIKrRvragJi5bxS+8MneNTW0D
      XJ0f5/z0CFs7doPQxHL6f4afX2FCuJGRscolND1NJDlNMptBEiUkUaTOH6YlVIdpmszEFsiV
      Cpwav4Aoirw1do5CuYhdseFQ7AiCiENx0hBowWkLIIluOms38trwc4DJL+95nLNTw3TW1hPN
      3HAFbicCy2kb3fUHuTjzGulChqZQ5Q28u0lFN0TCvlYy+TlUvQoQ33UfK/VV+ymWh4mmjtMe
      buWF86f49PavUipHuL74Cv2NOzFMmdXMNSaWooQ8tfQ17EQAZmIjrKQitIe7aQ7tIZ5TWLqj
      uOFW0Y0KN5NdsTEWmWJbx26WUm/joSqdZLXvue4jG4AgiLg9N3ZrCZd8d6NK3yvvNgGT8atn
      yT33d3wiGOA9vBpURvjo6RQmJpLHe3MSYr/PSzA3j6xeYWxpiR1dnyWWlRAEk2p3lsnlEzit
      dhqrannu3GHWt2xgT29lB/zofv7bgDC7oqFqCWKZeTL5PNFUCVmScVkd1Hj9FFQ7q5kEumFw
      dWGclfQqhmHgd3oxTAPDNOmqacNh9RNwhhFF91pOvLKb51SRG5T8omCys3s/R0dewW1zMdDY
      xVjkODX+PaQKt0/zVkQgmrHR03CQ589/F9OIoEhNt2ksB6scZiJ5hYbg4LtSrpX7pAoWbJYh
      6v1zXJi+yC/v+SIzq1Y8tgYGm+D7x79NU7COzW3bCPv6kUWN2dgVcqUsdf5WAu4NJHMWsuWP
      tvayaBB0xbkyf4Ku2n729u2kUJbu6F3eM2nQW/XfJBFf4uL3/i8+73ci3ia7ZJomstuDs6sb
      URAJPPAAns4OEm+8QX5sjI7Pf45n0tP0l3288vJhduy7D7u8wLnJs/TUt3Ni7Bxt1a3cP/Qk
      0YyNWPZOj9vKsspSpUXPZlGBLKuZeVZS0bVxoMLakDkrqgZlTSWZSzOWm6Kolqj1VeNQbNgU
      OzW+WrpqB7ApfnwOk9dHj/9/7Z1ZbFzndcd/d+bOvpNDzpAUFw0pRrKs3Ym1VUqi2JbtJo3T
      PBhpHSRAWqAFguQhyUP61gKBWxToawsjRdIiadEiAZI4iZNAgaxEsirIpmRRXIfbcDbOfmdf
      7pKHoRZWpEQqQ8MC5/fKO/fP+8135n7fOd85h5WxMFPpCgeOnib+QCh/LaomIFX6ODl6kisz
      V3BZHfjcXgrlMWzmY+tM2PsRyFeMjPoDLCSnGfSqFGtDDxhBvio2s9Ms8ob3aybZDHBo0ME7
      M28z4B1kIRHHbrLzF6dfYyExQSofp1ibQ1FkRnsP4ZS7kCriln90dEJzD1GsiZgNCqIwz2Qk
      yIGBPyEuObcUlPzQGMD9W5FGo8LF7/8T57UCNsODEV5N09DbbPS8+irlcBhDrx1pdhoxnWHo
      618nfe0ab4lFztoCqG98jz0fPU6uYCZcLVCqlZmKzPHcwT8nVbSvBlEe+p8hrhZtspkUBCqs
      SItUawWkUrNvbalWuTvpV6QU0ezKaodFIz2ebpwWO25rJ/t2HcFj81GXjXcrSNdkHVJVQKer
      83/BCxwaOsEbr/835z+7b9MTo6HoaOiHOTgg8e78LT6x/wSVehVNncQoPkX9IRliqtZ0Yx8f
      Pc7Vmas4LFlc1gNr3h7luh6HpYNSNQrsZqP4iddeJZIJYtAbeH/pFg6LnYMDpxhfvo5OkMnW
      JBRV4eTecyymnI+VtgrgsdX47oXv8NXzf8tiMoheJzLSc45o7mHLvvX50BjAHTRN5fdv/oCD
      y7fo73BveJ37xEkakkT27YuI+1+jrsjkL1zA9exxpvo8dEsC9ivXUb78RXJKjkRkBpNo4MSe
      sygMEM2tFz1s1pGxGFSsJhkoUaomSOXjRDN5FFWhVC3TbNymkC7myJUkvM4OetzdmESVvX37
      OL33k4AVWTXdLa4LIKsay5kHJ6PJoCCVb9Lr2UW27OVx/BLluh639TD93gKXJq/x4uGz3AxN
      MdBpJ6cOrutFaY53s+NOviIy7D/FP/zoW7x05DmGuj+z5qj1ro5RpiLX8NiHqCv3anQ6zTJW
      Y47F5G1imTKjPQfx2A8z2qvw5rv/zonRBlI5y1O7joDQj82Y4fLUBQ4PHSdX9q+75HoUmibw
      uWfPc3PpOiP+/VTkAdLFhx1A3JgPkQFoIGhMjF1C/O0Peaa7Y+NLBQGT34/n1ClkSWIFParV
      Ano9kUqe2cQif9bzNOOnDFxavEmnw8OJzkFMV97j+z94neNf/BY9u0YQ0DAbFKxGFbOhTq4U
      I12Iki1UWE7HiOeSlGsV9Dodol5E1OkZ6tpFv7cPq9GF09qNydAM599ZnzcUgdg6mzhNfY9Q
      Ksie3s+vCdjoBA27McpyIY/dfJhi43GDiQK5spHd3ScpVn/Nb279nj89eo4rM+8y2mNhpeBb
      9xdX1cAoGlFVmWTBwTc+/W1UTaH0/9bjxZoJRW1gN8vkKyIdtgbVxhKR9CJ6nYGA7zCFqoNk
      8c4Pi8bHn/4bQhkdw/5XKNYFNE2gWOvmaOAFFlau0ulIYzbu3aCSxMbMxG5x8fbP+er5b5Io
      uNYEtrbKh8gABBKxMLP/9S98weu6F6nfQ3wAAAaiSURBVOxaD02jNDNNx5kz2D4yiqlepW4x
      Y3vpRX62fIvPfvR5vnflTbIliTMD+9kXzlH86f+gdzj4y2MjrNSmcJogml1iOhtnKblMNNtM
      pLaZrFhNFnwuL88EjtDX0Y/T6kNRTTSU5kSvNfTIGqRLmx94l7WPEZ8JdU0zG41uZ5H3l97j
      4ODzxKVmSuQfw0rezKHBj3N15i1+e/sKnzpwml/fvMQzw+eIrFMkTNME9Do9dbmCqjnIV3tX
      /7L2ukJVxG62YzMmyRUjzMWzuG1eRnpOkymaV43+/s/cO/BXv+/Eq6YJxCUrfs8ZKrVxEtJF
      Av5TJPOWTS/5BrxP85VzQ1tI/dyY7ckJni/z1/8c3Yw8ldwiN//303i9Xbxw+Fle05fosjzc
      nappGoJOh3nXLuRCgcoXPo/W5WUiOofFZOGXNy5ydt+zvPTUSeTpafKCypxaJlhMMRUNkisX
      cFrs+N3dDHp78Tq78LkGcFm9gLXpQ29soUvhprgzzPe+MJelQTRzkYDvAIm8Dw0BnR7+/huv
      8uIrr3Hs+MuPpdRMGY1xLXiJXo+PQ0P7eXviHQ4MfIqV/NriwyZR4XcT/8awfxiv6/l1JlQz
      WGgzSVybvUhdaXB46GOI+n5y5Qfr+W8Fk6hgMy4zEb7BscAZ4nl3C8d7c2zLG0ApziNd/sqm
      rtU0hZHhAPFwiIFEkO5A4JHH4gRBAFWlEgohAOa6zC+mrjG+PE2Xs5NXPvYCqXyGNy7/GKlc
      wGay0uf08pTTx4veEUxZCW0lwdSNGa5b9PS+/DLlhoPyY/ifN8/ae5tEhWp9nA57F9lSd0uP
      WaiaQLbs5+DgEa4Fr2I2mDm+5xhjC79jpOcTa2IENVnHS8e+hKzoyd0tUdjc+HtsdRpyiMnI
      bf7z0o/517/6DrdCU6gMktmgcclWaDYIHORooJOJ8GUGugLIaoBSbTOnO1vDthjA3r2jXL70
      q01fX5fhP374U777+t/RZTZztqdnXb//GoTVVsyCQFyt8taNi3zmmefY3d1Ph6ZnWHBi1Yto
      pTiNYJxGagq1UKDSaDSrawA9wGDuBj9ZWOBzX/tHRMNGCSatRsNjSzIXT9PbcXZNQnyraCg6
      RN0IT/cXmIxM4bI62dMTIJx+hy7XKaS7626BVOFOb+bmnqjDViaSHud2KEG/d5Cju59nX98p
      8hUXinq76YLcVDvZR6NqAtGcnd2+T5IuXKfaiNDfefK+Mz3by7YsgVRV3bInQ9O0u5/ZymOr
      qopOr18to3GnWrK2pRQzDR44QPdQvT/m1OsaVVjvabU7de4RWqS3Oq6CsDrGG49wU0+4Wwlj
      PU9ZKyfmg8/X2vs/Sm9b3gCtmSCbQ1GUu72LPxg9PgC9e/f/YPTusdP0tuUN0KbNk8IHu+Vu
      IYlIiPHJaeqywtL8LMXK5o5fbx2Ncj5HsdpAaVSZnZ1D0TTSKxFiyexjVDR9tF6lkKNQqVMt
      ZhkfHyedK5FJRIkmMq3X0zQS0RChaAJFrjM7G6ShqGSTMSIr6W3RS8aWWYqsUC9LjI+Pk8jk
      yaXihOOpluspjRozU5OkpRLVksTcYhhN04gszZMtVJ5cA1iOxfD7/BRjC+hdPhbmgtukpLA0
      HySdKTIXnMPv72B6coJotkYxFaYqt/wrI7Q4TypVIBYKYXF34bJCJF2mnI5QabRYT5PRW9wU
      MzFmpmfx+buYmZ4inCxSy0Yp1dVH32OLejqzk2ouztL8EkaXF4/dyHJCQpZiFGqt1dM0jYGh
      3SzNB5mdD+E21JhbCFISHIQXg0+qAWjs/cg+srFFQitlPB4HRnG71pEi/f29zdimXsRud0G9
      gMXuwGY1I8stniCI9A/0AdAXGMVt0rh9exKzzY7dZqbeaj1BpJSNYe/oRWcQcdid6JQKZpsV
      h91CrdUGJ4iUcyuY3T0M7hml0ywwMTGF2WLF6bBQbbT2+USjgfDCHHqTFaPJiMthp5jPY3O6
      MZqMT6oBqMQjEfJVhaHhHibHxtBtuqjuFpFrzC4ssby8jNtm5saNMTr691FNh0nmG9hMLTY8
      uUZwbpFweJlMJkkkGsfj66eeixPP1XGYW6un1gssRNIUCxKdDitjN8Zw+QM08inC6Spua4v1
      GkUWwklKRYlcJkUkFsfp9aOUMiwlKnTYWuuXKedzVBQVAQ2TTuP92SiBkVESc++jCsb2JrjN
      zuYJfQO0adMa2gbQZkfTNoA2O5q2AbTZ0bQNoM2Opm0AbXY0bQNos6NpG0CbHU3bANrsaP4A
      XOt440jzoo0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cycle Time Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cycles Ending in Exchange / Match Dist' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cycles Ending in Exchange / Match Dist (2)' width='192'>
      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
      owkWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cycles Ending in Switch or Scale / Match Dist' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXAc133nP33MjcF9XyQBAjxAkeAtiZJJSZRjXU4sR3bi3UrscrK51pXN
      7v6xu1Vb5U1qt7ZSm3uTTRzX+ohdsTZxbMuWTFIWKVEixUO8CR4gCYK4rxlg7qu73/4BkSYJ
      DDEYYBqDQX+q8Md0T+O9melvv/d773dIQgiBhcUKRV7qDlhYLCWWACxWNJYALFY0lgAsVjSW
      ACxWNJYALFY0lgAsVjSWACxWNJYALFY0lgAsVjTq/S+i0SipVGqp+mJhYToPCMBms6EoylL1
      Jaf4fD4qKirmfV00GsXtduegR+lJpVLYbDbT2tM0DUVRkCTJlPaEEGiaZupnTPedzhBAoaKq
      Kg6HY97XJZPJrK5bCJIkYbfbTWtPlmVUVTVVALIsm/oZ032nlg0wB5azbGFjCWAOLJuosLEE
      MAeqqs79JotliyWAOZBl6ysqZKxf12JFYwlgDgzDWOouWOQQSwBzoGnaUnfBIodYApgDywgu
      bCwBzIFlBBc21q+bRwghCEYS+ENxEilr6mUG1vg+B2YZwZF4kn86coUPuwaIJVLUlhfx2jMd
      7FhXZ5qLwkrEGgHmwAwjWDcMvvbGWX7w/jVG/GECkQTX+338yevHOX9z1HLHyCGWAObADCN4
      cDzEexd6ZxyPJTR+9ME1DOv+zxmWAObADCN4YDxIuof84HjQ2ovIIZYA8oCKYlfac+XFLmTL
      BsgZlgDmQNf1nLfRUl/G+ubKGcdlWWL/jlZk2RJAriiQVSCBrukgy8iShK6lEJKCqigs9OH5
      zW9+k507dmR1bVNzc0Y2hBCwd2M5a6ttxCIhDp+5jXBXoUjSI0eHxeJP//RP+f3f/32cTmfO
      28o3CkMAWpizH17G09xMe42bDz44Q9ywsfe5T+BSFqaAQCBAIpHIrlualtESZiSeYioUw+NQ
      ISkjCR0BpHSDN45dp3Nt7YKF/CgCgcCKXWkqDAGoXh7bvJHhcBhtapi6zXupC19hKGywumh6
      g0nX9ayCW4QQWRuhmV4bjSXTnhsYDxJPJLCpuYvVvhuja1bwz0J+j2xJ115hCOB+FBupWIxo
      3MBp//kqjqIoWS1pSpKU9UZUptc67On7Ve51YbfbUHK4GiVJEqqqmu73ZGZ7QohZ2ysMAcQn
      +fD0GWKahmPXkyT6z3JdLecpp/zADTifG9kfinGia4BwLMmQL0xliQu7TWW+UsikzSKXHa/b
      Tij64EgwbQS3oMiyKbvBZgbFm9neXWZrrzAE4Czjmf37772s37NvQf9uaCLEH337KEMTIRpi
      SXqGJhkcD9KxpgqPc/EzGUiSxLqmCrr7/UTDEpIEDpvCZ/du4Jmtqy1XiBxSGAJYRDTd4O/e
      OMPQROiB44mUzo0BP5tbahZ9WVKSwOWwsbm1mgo3lLhUnn/maUq9K29VxmysfYCH8AWi9AxP
      znouGk8RT+bON0iSJFwOleaaYuvmN4llMgIIUskE8UQK1ebA6bDlbFpgCPHIJUHBylwuLFTy
      XgB6Ksb5Ex9wc8iHt7iUSGgKT0UTT+3ZTbFz8btfUeKmsaqYq3cmZpxz2lWcj1ixWW5EYklO
      Xh3EF4hy4ORNnti8hpoyz4qyOfL+14wEBghSyy+/th9ZBgT0XjzJzcFxtrXWLXp7dlXhiy90
      8offfI9I/Ofrxoos0VJfltPlSDPxB2P88T8e4+qdCWzBGN88cIGfnLzNv//c43SsqV7q7plG
      3guguKKFasdR/vG730WxqeiaRkXTOp57bPFv/rusb67kT37vkxw4dYtLhy/QUOmltrwIl7Mw
      cqcahuAfDl2cMcpNBKL8xT+f5H//wYvYc7jxlk/kvQCQBOUNG/jVHftAGEz0D+Btbsae4wdx
      XYWXL73QyX879SNa6sty25jJRBMpum6PzXpuPBCld3iK9qb5Z9JejuS/AJAJj93k0M/eweOS
      0B31fGZV81J3alljCIGezkVDTC8FrxSWwYRWIMkKLqcNRbXj8eT/8qAQglgiRSyRQs/DcC6P
      w8baxtmf8MUeB2vqSk3u0dKxDEYAA0Mt45XPbMNIGQx3dxMVAnuerlTEkxo3B/2EokmmdDde
      j4s1daWUeBx5s7qiKDK/8uwmbvT78AVj947bVJkvvrAFl6MwbJ1MSDMCCIZvX+Xo0WOMTkWZ
      GhvgwtVb5vbsHiluXekjGR/g2Ac3CfT2Ec7DpypAStO50jvOZCiOphtoukE4luRK7zjRRH6l
      WV9dW8If/87zvPr0eopcdp7bvob//hvPsq9z9VJ3zVRmF4CRoH8sxo6t6xkaGEKoLlSR3mU3
      10yOdPPGG29z6vS7HD3fvWT9mIvJUPyBpdO76IZg2Bdegh6lR5IkKkvc/PoLndRXevnNl7ex
      rrkyb0Yps5h9CiSpFNtTnDh9gfrWTZSVVzAyOvuqQe5x8cq//jzXui5RUS2xYeNG6pT8NF1i
      j3jKP+rcw5w/f57JydndMXJBIBAwra18Y3YB6AkCCYmmhlr8U37GbXGGh4cprayjtqp03i7B
      C0Nw5r2DTLmbaCqReOvNd/jyb/4qCwz0yglOR3qTymnPfF7d2dnJ7t27F6NLGXH06FHT2so3
      Zn+Uqh42d7Th9JSwZeNaZEVl7dq1KEvy5I0zGXCwpWMttY2trFEFE3maJqTM68I1iwhkSaKu
      omgJemQxF2kfWS5vGU3e6Q0gZ009S7ctYqdlbSWXz54FQFTWUJqn7ggSzJ7CRDI/+MMiM/Lz
      TnoAQSwSwu/34/f7uHG1m3ieBnCnM4INQzDsC81yhcVSswwEoLL16f3se3wzqiSzYfcuSvI0
      T85iGcEW5rEMNsJSHPzO33JmQuWp3Y+hopESYMtDDTzaCF4GX/UKZBn8Kiq7P/Uq66J3c/PY
      UU24+UcnIxw+c5tgJEHvyBQ1ZZ7pQJxHXFNWNG0ExxIPRo3JkkRtuTe3HbbIimUgAJ3uC6e5
      Muj/+HUxNW2rcuoKcWvQzx9+6yhT4TgNiRT9Y0GGfWE2rq6ixONIe53NprBhVRU3BnxE4ykU
      eTrEcU1dKUWuleNesJxYBgKw8fTLr/F0hu82tCQnPjhMQpSxe+8u3PO0F1Kazv996zxT4fgD
      xzXdoGdoki2t6YPiJcDjtLG5tYZYIsWq1TUUF7kKJoimEFkGApgfuh6juKqNDRvWIEs8EN+b
      Sfo/XyDKndGpWc/FEiliyRTuOZzFJMDtsFHksiNLUlZpB5ciVaHZbeZDewUnAFlRiPkHOXLo
      Fp379lNmE/NKxafNkQ1azBE0n+17H77GzLSBd9tTFPOiwMzIup1JewUnABGPodud2BIpBNz7
      URVFwW6fO6lVTbnKmtoyLvaMzjjndthwO+wZ5wWSJGneBTbuplPMpK+LhSRJ2Gw209q8+1Aw
      8zMmk8lZ2ys4ASieSjo3exCSitMxf0PZpso8v7NlVgHUVhRZufoLjIKzziRJwuly43Las3I/
      SGk6h07PHvsw7Atj5GksgkV2FJwAFoovGKN3JL0RnMvMcBbmYwnAYkVjCeAhKopdrK6dPSjc
      5bDl1KVBCEE8pTHsCxOMZFeVxmJ+FJwRvFBsqsKXX9rKH33rKL5gjKCtDiOiUlrk5NNPdjxy
      J/hhykpLkTNcWpyYivLj492MTExyY8DHD86H+OV9G3lxd+7jMPbu3Wt6cYx8QRIrpDjU2NgY
      1dWZp/wbn4rw7rleeof9NNWUsbdzNbXlucmbmdJ0vvqN97j8ULIqRZb4ymd3sa8ztzUCUqkU
      qqqaWiAjlUpZy6D5TFWph9ee6SAYDFJcXJzTtnpHpmbc/DAdTH/oVA+f2LwKJR9jQAsAywaY
      AzN2ZMenounPBSIYK2OQXhIsAaRBCIEvGKV/IsJEIJpTv5X6Sm9aN+v6Cq+1+ZZDrCnQLKQ0
      nX84eJEj53qJJVM47SpPPdbMl17sxGFb/K+sqaqYJzoaOd418MBxh03h5SfbZ48ztlgULAE8
      hBCC7x3u4kfHrt87ltKS/PTkTWRZ4jdf3rboxqKiyPzeZ3ZR6nVy6uoQ8aRGVYmbzz3bwc71
      9VZAfQ6xBPAQwUiCo+fvzHru2KV+Prt3AxXF7kVvt8ht59+8sp3XnukgEo1TWVq0onJ0LhWW
      DfAQ4ViSSHz2NJDxZIpAOHcbVJIkUe51UVPmsW5+k7AE8BBejwOve/bNLpfDRpnXZXKPLHKJ
      NQV6CK/LzvM7WvjOoYsz6kHu395CaVHmO8HzwRCCizdHeedMD1OROG2NFbz8RDtlXqdlA+QQ
      SwAPIUkSr35iAwBvf9RDMBLH63awb+tqPvdMR05uRiEEPz52nW8duHCvoMbFW2Mcv9zPf/31
      vTRUWhklcoXlCpEGIQShWJLR8UmqK0spdueuwIU/GON3/+zNGelUYHrU+bev7rRcIRZIOleI
      grMBhKFx/cIpznT1LGjzSpIkit0OyotslHhyOw25MeCb9eYH6Lo9tqJqdplNwQkgGegn6lpF
      WXKC8eTCBzczvCRtjyhJalNlywbIIQUnABGPUlRRRU2Fi2B04QKYb1B7NrQ3VVDmnb343/Z1
      9SiWK0TOKDgByN4Kxm9c5FJvgBrv8rhxPE4bX3l1F+X3LbFKEuxcX89n9260RoAcUnBGsBAC
      /+gASbWY2ooS7t478zWC7xIIBCgpKVnkXs5ECMGIP8zpq0NMhqO0NVayrb3OlKS6K9kIfkAA
      uq5j5Gn1lYUyMTFBZWXlvK/z+/2Ul5fnoEfpSaVS2Gzm7QRrmmZ6RJjZnzFdew986lgsRjK5
      dNUgc0kikSAUyq5IRbbXZYuu66ZnaTOzvaVoM117DwigqKhw61hpmpbVkzwUCuH1mrsRlW64
      zhUreQpUcEbwYlOoI6LFNJYA5sCMZVCLpcP6dedgpaYLWSlYArBY0VgCmINYLLbUXbDIIZYA
      5sDlsgJgChlLAHNgdiUTC3OxBDAHlgAKG0sAc2Dmdr2F+VgCSIMQgtHJMN2DUwz7wktStdEi
      91iL3LMQT2p87cdneP9CH5quoyoKuzc28Du/tAOP07zte4vcY40ADyGE4LtvX+KdM7dJajqG
      gKSm8/7FPr7x1nlrJCgwLAE8xFQ4zvHL/bOeO3V1kIlA+kzOFssPSwAPEY2niCVmT4meSGmE
      YpZzXCFhCeAhSoqcFKcpg+Rx2qkonntjLKXp3Bryc61vgmgaMVnkB5YR/BAep41XnlzH1988
      O10TWE+A4kCS4KUn2ihOkzYRpu2HW0OT/NX3TzE4NoXdplBW7ObXfmEz29vrydTd3jCMrPYf
      UqkUTufswfW5QNOmU7ksZ4fB5dvzBxAEfeMIZwnFbjsTw30klGIaqssyvunuIkkSL+xeiyTB
      wVO3GP3o+1Rtf5Xntq/hlSfbHxk04g/F+V/fO86wL4wcGebZPRtwe7zc7u2jSE6kHVkexjCM
      rNywL1++zAsvvDDv67Klr68PTdNob283rc3FpjAEoEXo65vAUZnCJRRuDgSQ4/0UVzxJsTr/
      G0mWp0Wwr3M1/7nnAP/jt/bjdswdMXWue5hhX3jGcUPAiD+csQAszKMwBKAWsbalgeFwGCPk
      o7J1Ew2RLgZDArdXQwiBruvzju5SZZAlCZssMqoVNupPHzucSGoZJxwQQmSVnCCbz3j3umyW
      dzVNQ9O0rNs0M9ouXXuFIYD7kJwewmNjDEVilNZIqB9nXVMUJasYVEmSMr6uubYs7Tm3y57x
      tCbbKVC2nzHbmOC7c//5tnlXbFZM8GIRn+TE2bP0XLuGn2o8iX5C7moq7eYmlNraVsu6pooZ
      x1VFpr6icBMOLGcKYwRwlrHvmWfuvawr27kk3XDYFGrLi7je73vguF1VUE1OO2KRGYUxAuQJ
      V+9McGyWXeRoIsWIf6ZxbLH0WAJYRK7emUibyjwQjpvcG4tMWCZTIEHIN8rQRABPadXH6/v5
      lzDWaU8/zZGV/OuvxTIQQCoe4PCBQ8RsXtY0NTBw/jjHQgZ7n/8ktSXm7XpmQufaWjwuG5HY
      zCXTqpLFL60KH1eyiSYZ9od568QNbsUqeOmJNlbXlublQyLfyPspUCI2iVrUwFN7nmbz5k3s
      2fMUbXUl+ALm5uvMhOaaEr784lY8zp9HkUkS1Fd6qcyRAPzBGJd6xhibjDDij/D2Rz38l68d
      5vLtsZy0V2jk/QhQVNrM5vUap48eZDIcx+YsYlPndtqbqpa6azOQJIlnt62hrbGCg4ffp7m6
      mIbaaorc9pw8jXXD4PbIFMZDm1jRRIrvHLrEH325ErvNWn16FHkvACSdCV+UJ557Ca/N4NJH
      F2lYXU++TqklSaK5poStbbXY7facuj/EEhqJ1OxOc4MTQfyhGLXl1v7Do8h/AaBSWebgJ9/9
      e8YSCtuf2IcnT29+s5EliXRfhSLLVmmlDMh7GwB0bl29iruhg2d3rudW1zXieRyVKIQgGk/R
      NxZgKhwnmcrOzyYTnA4Vj2t2d4L1zZWUZxC7sNJZBiOAQXXLVratLsc3ofNS2RhJBJ60z76l
      QwjBhZuj/OX3TzI53MNLezYwHNBYVVNCfaV30e0AWZJoayjn6p1xoveVWV3bUM5vvLwVxcps
      PSdpBTB8+wrXesdp3bSV5iovJ947QGPHXsIDFxj2x2jesI3WulITuqhx7dx1KmpauXghSkX0
      NrWtrZTl4W87NhXlr/7lFL5g7N7QqhuC2yNTuJ32tJUgF4LLYeOxlhomwzG2tdey5xNPsLWt
      Fu8jAncsfs7sAjDi9I9EeGzLZrxeD5N916C4mlQqSSSp0LF+FeNRs3Y2ZSL+bv7h25fw+XTs
      usoXf9G8p78QAp/PN/cbgWPne5nwTUy/0BP3/Q8YnQznRACSBHabQk1ZEe31xXQ0FpGMhfHF
      Mne9yNYbNBAI4PF45tvlvGJ2AQidZCLGQO9NorpEyOfD65EYHSvBo0gMjviwF7sRYMJExMkr
      v/o53n3vA6prJTbteJJaE4d2wzDo6enJ6L137vQhx6cAkFKRB86ltNwXH/T7/Rn39X6yrdc1
      Ojq6rKPBIJ0AFBd1lW76xgJ4q1exY0cz4yO9aE4X0cE7RHSDEnedSV3UOPzTgzTveoYaj8SB
      n7xN0xe/gFcxRwSKorBzZ2bepbq7jvduphBMz8/vp8iV+xSLjY2NGff1frIdAXp6eu7FBS9X
      0tgAMq2bdtB635GKyo9r7K5tyHmnHiRJOJBibKAHP6D7QwSEwNyydZnR2VZLe1PFDHdoRZao
      r8jHHlssg1UgJ09/ai+Tkek5deVLz1Nl0tN/vgQjCfzBmQU1DCGIJTUcJhS9tpgfy+AX0bl5
      6SxXBn0k41FudU/xn/7yq9Tm4Vbwme5hxmfJHCcEjPrDlBbll/OexbIQgI2de5/DceECQ74I
      +17aSk2e7nA+yuc/aYIRbDF/loEA4rz+N3/O1YidVfWVjI6EaGr5PKV56Oq7qqYk7TmPCUaw
      xfxZBgJw8Nnf/gNiyburDQrePLz5Aba217GtvY6z3cMPHHfYFBoqc2MECyHwBWMM+8J8/70r
      nB5188qedjrX1lrxABmwDASgc+PiGXrGAh+/9vDJz/wC3jz8bZ12lX/32uO8/s5lTn8UwGFT
      qCxx01xTjF3NjVvy2GSEG4N+hIBgJMmZ7mEu3x7jP3z+CXZvbMxJm4XEMhCAytan97M1w3fr
      yTjvvvNTZGc9u/fuwm2yvVDicfAbr2zjsWodp9NBRXnuwjc13eDOWICHfe0SKZ3vHe5iy9pa
      nNbK0yMpuG9HNyKojmpaNqzFJU3v5N7NtJbNpo0QIqvrFBnuam++3qBCiIyuiSVSpFKzG9dj
      kxEmpiLUls/tqpBtMl7DMEz/XrMlXT8LTgCq3Ut7ezO+25eRip6m3j0dpHL3LxuyuW4h7WWK
      IkvTyX9n0YpNlXHYlIz7sJC+mvm9Zku636PgBGBEpui+dYtkUma1k3spBiVJysrfZb7XxRIp
      3vzwBkePXeTxTauor4WGSu+8b8ZM3uty2CjxOPGHZm6+bWuro7LUk9H/uZuKcb43pCzLyLI8
      7+9VCJH175Et6fydCk4AqreavXurl6TtZErnb374EUcv3EGOBNmc0BiaCDEVivNYa/WiG8KS
      JNHaUIbWpxOM/jzxa2dbLb/2qS3WKlAGFJwAlpLLt8f44FLfjOPRRIphX/iR+wTZ4rCpbFpT
      TTCaZHxzE8/tf5a2hnLL7SJDrG9pEbkx4JuuKjMLwUhi1uMLRZJAUWTKvE7aGyvYtGZpRr/l
      Sn56lS1T3M70u71qHvouWVgCWFS2tdVRkiYNSnXp8o6cuh8hBFOhOJd6RrncM8ZkKLZs6ydb
      U6A5eO211zJ+b32ll9/69Hb+9o0zBLUyTvaEcTs1Xn6yjfaW5ozrlWmallXhue3bt8/7mvki
      hODCrVH++genGZuYAgRvXfDzu5/Zyda25ed+IYnlKt15MjY2RnX1/OfHoVAIrzdzPx4hBONT
      Ua70jpPUdNY1V9JY5Z1XhoZ01UxyxXwiwgLhOP/x/7zN2OSDIZ9VpW7++LefzygVixDTJafy
      oUKMNQIsMpIkUV3mobqscKY899PVOz7j5gcYn4pyqWeMvZ2rlqBX2WPZAHOwQgbIjInE0xe2
      iybMK3q3WFgjwBxkUh1yKRFCEE/q3BjwMToZpr7Cy9rGchy23Py0rfXlqIo8oxCIqsisbSjP
      SZu5xBLAHOR7FfSJQJQ/ef1Drt6ZzkckMb0T/AevPU5JDkIwm2tK+NSuVt48ceOeF6okwfM7
      WlhTl75KZr6S379uHpBNuVKzMAzB371x5t7ND9N+cedujPCtgxf4yqu7Fn1VRlVkfu1TW2io
      KubIuV4Qgr2dq3l+RwtqniYreBSWAJYxw/4QXb3js5471z2CPxijIgeFORw2lRcfb+PFx9sW
      /X+bzfKTrMlkU7HdLBJJHT1NUb6kppPU5u/jv9KwBDAH2QRtGEIQS6SIxlPoORRQTZkn7Ty/
      utRDmddKjz4X1hRoDuZrBAcjCV4/3MXZG8OkPt4I+9y+jTTXlCz6fNzjsvMrz3bwNz/86IFV
      GYdN4fPPdVjhkBlgfUNzMB8jOJ7U+PN/OsGZ+7JCjE/10d03wf/8rf05mY8/s3UNboeNn568
      ychkmIbKYl55sp2tbbWL3lYhYglgETl3Y2RGShSYrhvwxvFuvvRC56K3KcsSj3c08njHgxkg
      lptPzlJRcDaAocX56IMjHPnwHPoi7OLOxwi+MzI1W3guAL3DkwvuSzruj3k2Ixa5kCg4ASQn
      +3Cu2sHGUhiOLdwAnY8RXFKUvipLLjalLBZOwQkAXcPmcOJyyCQXwYthPkbw9vb6WSvCq4rM
      /u0tC++MxaJTcAJQS+sZOn+EY7cC1Bct/OPNxwiuKnXzlc/ufqAqvMuh8qUXOtnUYoUq5iMF
      Fw8wnQRLB+SPU31MHzczHuCuc1pS02lrLKfY7ZjXvDyf4wEWg3yKB3hAAJFIJO+9H7MlEAhQ
      UjL/rAzZXrcQso0IyxZd17PKC7QQzP6M6dp74Ijdbs8770ctEeTwgUOkPJVsXLuakb5u+scT
      7P3kJ6nxZl4KNBqN4nLNf2dUCJHVdQshX26OQmozIwHYbPmXwz4ZjeCpbGXL9scoL3GzprGW
      kosXCUXjNFcWZ/x/VFXF4Zh/7dxkMpnVdQtBkiRTpweyLJs+BTL7M6ZrL78e97PgLW2mY22K
      k+8eZCoSR3V66Ni8nfVN5hiVBWYiWTxE3gsASWdyKsGe51+myGbQdeYSTS0NmJVmp1BtIotp
      8l8AqJSXqPz4O3/PeFKhc9cn6DBxo9PMBK4W5rMM9gF0eq5fw1W/gb3b27l99TpxE2cllgAK
      m2UwAhjUtGxj26py/D6dxooxkgg8WP4uFgsnjQAMBnq66Z/SeGLbBq6fP8OgP0Lzui3gv0nf
      eJjGdVtIDV9lPKyzftvj1BbnaqVE4+rZa5RXt3LhfJSK6G1qW1ooM2nsyueIMIuFk0YAErVN
      rQQTNwGZNes34R3uw5+Is259J/VN4/T6IoSTNjZvauLWrUFqt+bK10Ui7LvOt799Cd+EhkNT
      +eIvmrthY1G4pBWAarN9PMmQ0GJBRiejeCrLiEyOMhIwaGttJuDS6e8fIpaqyGEXXXz6X/0K
      R98/RrBeomP7E9SamKkh3zYGLRaXNL+uxvXz57hw7RZxoUBonKlIDMNVRu/Z09hKqjBUB2pw
      lNHRABt2bclhFzUOv3WAxh172eKROPjWIRq/+AW8JqXgyOe0KBYLJ40AVNZ17mRd586PX7f/
      /NSGNfe9r5b2XN77ACSJBDUmR/sJAWIyTEAIclN2emkRQhCMJojGEpQVy1ZMrwksA29QnaHb
      PfjC8Y9fO2jf1IZjntv2ExMTWRm0iUTCNFcIIQQTgSjReJLK0iI8jyi4sZgshTNcuqJ1Zre3
      DASwtKRSKdN9pMxuU9M0FCXzKpYLRQiBruum2lfpvlNrgjsHSxFfa3abK/kzWiOAxYrGGgEs
      VjSWAB6Bb/Amhw8f5saAz7Q2b1w8yZEjR+gdC5rW5uDNM5zpGjSnMSPJxdPH+eDkWWImOdp2
      XzzJu0fepW985ndqCSAtOiNjYZ58eg+hieG0+X4Wm+b2LezubCUSis/95kUgFfEzkTQwouZU
      dwmPDmCUNrF9SwcO1YxvVSMQlejsWE0gEJ1x1hJAWgSSYkNRFBQhTBNANDDGnXHBujVVuW9M
      GFy9dBEkGZ9vgpQJbk+JlMbUyB1OnTjBkG9mrbFc4LIJrvUMYptl89QSQFoU3Gqc9997H83h
      NemL0jh1/AS+sQF6h/wmtCfR0NJOmcdu2o53aVU1dklggEkFNQzCoTBaMkkknphx1loFegRC
      GGiajqKqyKYs2wm0lIYAJFkxseKKwDCESSKY3gMwBKiKmnHt5IVg6Dq6Ycz6O1oCsFjRWFMg
      ixWNJQCLFY0lAIsVjSUAixWNJYBlysjNs7z++v/jyKmuGeeSoQmG/WFGhoYw7jYsg5UAAAPV
      SURBVFviGOm+SNeduXe1k+FxfvIv/8QPf3KAwMyVQyDEkZ+deugiH1//s79mKCYYuX6Gr//z
      mw+cHh8ZJnFfHbPY5CDHz1+991oIwcVjB/ne6//M7fGZG1akohw5eoLFDlBVvvrVr351kf+n
      hQmcPvQG1btepnNNBf03b2K3aZy9MY4SnyQUnODOuJ9//NrXSBbVUaxP8Pa7p5GNOGcuXmEi
      rNPSVIPQIhz56VtMaC7cmp8r3TdIqiVo49foGnPxyvO7caiC00ffpmdSJzrQxfFzN6lfVcXp
      D66ydlUR7528QnNTA4o2yanT59BcqwhO9DE8MkBLlYcDPzuK6inm+9/4a3r8Mqsbi3j34NtE
      NYNz5z5iZCREY8sqlHg/P353gC984dMowSH6g6CN9RKRbZx85wBh4aL7Rg/rVpfx1ps/Qy2t
      Jdx/kXdOXKW+uQmnLbvYAksAy5TG1rVc//AQR7tGKdGHuXx9nN6xEcLjw5TY4/RLqyiVE7zw
      zC5+eOA4r/zSC8SH+6Gug8jFE9Rs7+TO4X8htW4/vR8exEiO0RWs4uktzXjL61AjffzwzXfQ
      Qn6iZet5amMt169cpbf7AgF3HbHhSQavHOXS9W5K2nZR64px+Y6BU7uN5KwhGh6nuthF3/AA
      57sDtNeXs+fFT3L+0A9o3fMKdfYofWE7a11DjNnbqFHGuHgHdmxeg0SMdw6fpn9oEG3iOt6O
      59lY4+Bydx89594noEvcvBPAP3SNsppV1DXUZi0Aawq0TOm+dI6UzYORjNHc1MTZnkF2lSW4
      lSij2CEBCqoW5OSVO5SoMY4cOUo4JeN02FEUBQGU1tVx/cPDTOl2nA4XrS2rUCSJqdHb3B4J
      47GDo7Scga7TnLnQRdfNAWqqKrjrGFJdX8eaDVuoKZoONJEUO+qkDyqrkCXBretXsJfW4FIF
      5R449v5ZisvLOP3+YXrHQjidTlRFQQhQSlooSV7jx2++xVDUS4PSh16xgeqKKrpOHKF7YHpn
      vKG+BkdRFVsfa2VVYx3nPjjMnfHsXSqsjbBlipaME40lcbg92BVBLKHhUGWShoRDEWioSHqC
      hC7hVCWi8SROlxNJUhBaCtXpQBIG0XAY2e7CrggMScWmyBiGRjQSRVLsuF0OYtEwQrajiBS6
      kLE57AjNwGaTiETjuD1FKJIgkdSR0UG1Y2hJFAliSR2bzYZNgWgshdvjIBqOYnM4kWUJGQNk
      O6oCeipJJJZAlRP86PWf8tSrr9FYYicSiaDaXUgIbKpEOBzF5nAhGUmSOng8HhQ5uy1lSwAW
      KxprCmSxovn/j81ZvAZmQMMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      6POoCf7/AdjcNXgiM84VAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7 (2)' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
